
DIO_AVR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000085c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000aa4  00000000  00000000  000008b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000004c3  00000000  00000000  00001354  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 04 04 	call	0x808	; 0x808 <main>
  64:	0c 94 2c 04 	jmp	0x858	; 0x858 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_enumSetPortDirection>:
#include "DIO_private.h"
#include "DIO_interface.h"


 DIO_ErroStatus DIO_enumSetPortDirection(u8 Copy_u8Port, u8 Copy_u8Direction)
 {
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_enumSetPortDirection+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_enumSetPortDirection+0x8>
  74:	0f 92       	push	r0
  76:	cd b7       	in	r28, 0x3d	; 61
  78:	de b7       	in	r29, 0x3e	; 62
  7a:	8a 83       	std	Y+2, r24	; 0x02
  7c:	6b 83       	std	Y+3, r22	; 0x03
	 DIO_ErroStatus LOC_enumState=DIO_OK;
  7e:	81 e0       	ldi	r24, 0x01	; 1
  80:	89 83       	std	Y+1, r24	; 0x01
    switch(Copy_u8Port)
  82:	8a 81       	ldd	r24, Y+2	; 0x02
  84:	28 2f       	mov	r18, r24
  86:	30 e0       	ldi	r19, 0x00	; 0
  88:	3d 83       	std	Y+5, r19	; 0x05
  8a:	2c 83       	std	Y+4, r18	; 0x04
  8c:	8c 81       	ldd	r24, Y+4	; 0x04
  8e:	9d 81       	ldd	r25, Y+5	; 0x05
  90:	82 30       	cpi	r24, 0x02	; 2
  92:	91 05       	cpc	r25, r1
  94:	39 f1       	breq	.+78     	; 0xe4 <DIO_enumSetPortDirection+0x78>
  96:	2c 81       	ldd	r18, Y+4	; 0x04
  98:	3d 81       	ldd	r19, Y+5	; 0x05
  9a:	23 30       	cpi	r18, 0x03	; 3
  9c:	31 05       	cpc	r19, r1
  9e:	34 f4       	brge	.+12     	; 0xac <DIO_enumSetPortDirection+0x40>
  a0:	8c 81       	ldd	r24, Y+4	; 0x04
  a2:	9d 81       	ldd	r25, Y+5	; 0x05
  a4:	81 30       	cpi	r24, 0x01	; 1
  a6:	91 05       	cpc	r25, r1
  a8:	61 f0       	breq	.+24     	; 0xc2 <DIO_enumSetPortDirection+0x56>
  aa:	4f c0       	rjmp	.+158    	; 0x14a <DIO_enumSetPortDirection+0xde>
  ac:	2c 81       	ldd	r18, Y+4	; 0x04
  ae:	3d 81       	ldd	r19, Y+5	; 0x05
  b0:	23 30       	cpi	r18, 0x03	; 3
  b2:	31 05       	cpc	r19, r1
  b4:	41 f1       	breq	.+80     	; 0x106 <DIO_enumSetPortDirection+0x9a>
  b6:	8c 81       	ldd	r24, Y+4	; 0x04
  b8:	9d 81       	ldd	r25, Y+5	; 0x05
  ba:	84 30       	cpi	r24, 0x04	; 4
  bc:	91 05       	cpc	r25, r1
  be:	a1 f1       	breq	.+104    	; 0x128 <DIO_enumSetPortDirection+0xbc>
  c0:	44 c0       	rjmp	.+136    	; 0x14a <DIO_enumSetPortDirection+0xde>
    {

        case DIO_PORTA : 
                        if(Copy_u8Direction == DIO_OUTPUT)
  c2:	8b 81       	ldd	r24, Y+3	; 0x03
  c4:	81 30       	cpi	r24, 0x01	; 1
  c6:	29 f4       	brne	.+10     	; 0xd2 <DIO_enumSetPortDirection+0x66>
                           {
                                DDRA_REG =0xff; 
  c8:	ea e3       	ldi	r30, 0x3A	; 58
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	80 83       	st	Z, r24
  d0:	3d c0       	rjmp	.+122    	; 0x14c <DIO_enumSetPortDirection+0xe0>
                           } 
                        else if(Copy_u8Direction == DIO_INPUT)
  d2:	8b 81       	ldd	r24, Y+3	; 0x03
  d4:	88 23       	and	r24, r24
  d6:	21 f4       	brne	.+8      	; 0xe0 <DIO_enumSetPortDirection+0x74>
                          {  
                                DDRA_REG=0x00;
  d8:	ea e3       	ldi	r30, 0x3A	; 58
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	10 82       	st	Z, r1
  de:	36 c0       	rjmp	.+108    	; 0x14c <DIO_enumSetPortDirection+0xe0>
                          }
                          else
                          {
                            /**/
                        	  LOC_enumState=DIO_NOK;
  e0:	19 82       	std	Y+1, r1	; 0x01
  e2:	34 c0       	rjmp	.+104    	; 0x14c <DIO_enumSetPortDirection+0xe0>
                          }
                    break;
        case DIO_PORTB :
                        if(Copy_u8Direction == DIO_OUTPUT)
  e4:	8b 81       	ldd	r24, Y+3	; 0x03
  e6:	81 30       	cpi	r24, 0x01	; 1
  e8:	29 f4       	brne	.+10     	; 0xf4 <DIO_enumSetPortDirection+0x88>
                            {
                                DDRB_REG =0xff; 
  ea:	e7 e3       	ldi	r30, 0x37	; 55
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	8f ef       	ldi	r24, 0xFF	; 255
  f0:	80 83       	st	Z, r24
  f2:	2c c0       	rjmp	.+88     	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                        else if(Copy_u8Direction == DIO_INPUT)
  f4:	8b 81       	ldd	r24, Y+3	; 0x03
  f6:	88 23       	and	r24, r24
  f8:	21 f4       	brne	.+8      	; 0x102 <DIO_enumSetPortDirection+0x96>
                            {
                                DDRC_REG=0x00;
  fa:	e4 e3       	ldi	r30, 0x34	; 52
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	10 82       	st	Z, r1
 100:	25 c0       	rjmp	.+74     	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                            else
                            {
                                /**/
                          	  LOC_enumState=DIO_NOK;
 102:	19 82       	std	Y+1, r1	; 0x01
 104:	23 c0       	rjmp	.+70     	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                    break;
        case DIO_PORTC : 
                        if(Copy_u8Direction == DIO_OUTPUT)
 106:	8b 81       	ldd	r24, Y+3	; 0x03
 108:	81 30       	cpi	r24, 0x01	; 1
 10a:	29 f4       	brne	.+10     	; 0x116 <DIO_enumSetPortDirection+0xaa>
                            {
                                DDRC_REG =0xff; 
 10c:	e4 e3       	ldi	r30, 0x34	; 52
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	8f ef       	ldi	r24, 0xFF	; 255
 112:	80 83       	st	Z, r24
 114:	1b c0       	rjmp	.+54     	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                        else if (Copy_u8Direction == DIO_INPUT)
 116:	8b 81       	ldd	r24, Y+3	; 0x03
 118:	88 23       	and	r24, r24
 11a:	21 f4       	brne	.+8      	; 0x124 <DIO_enumSetPortDirection+0xb8>
                            {
                                DDRC_REG=0x00;
 11c:	e4 e3       	ldi	r30, 0x34	; 52
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	10 82       	st	Z, r1
 122:	14 c0       	rjmp	.+40     	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                            else
                            {
                                /**/
                          	  LOC_enumState=DIO_NOK;
 124:	19 82       	std	Y+1, r1	; 0x01
 126:	12 c0       	rjmp	.+36     	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                    break;
        case DIO_PORTD : 
                        if(Copy_u8Direction == DIO_OUTPUT)
 128:	8b 81       	ldd	r24, Y+3	; 0x03
 12a:	81 30       	cpi	r24, 0x01	; 1
 12c:	29 f4       	brne	.+10     	; 0x138 <DIO_enumSetPortDirection+0xcc>
                            {
                                DDRD_REG =0xff; 
 12e:	e1 e3       	ldi	r30, 0x31	; 49
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	8f ef       	ldi	r24, 0xFF	; 255
 134:	80 83       	st	Z, r24
 136:	0a c0       	rjmp	.+20     	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                        else if (Copy_u8Direction==DIO_INPUT)
 138:	8b 81       	ldd	r24, Y+3	; 0x03
 13a:	88 23       	and	r24, r24
 13c:	21 f4       	brne	.+8      	; 0x146 <DIO_enumSetPortDirection+0xda>
                            {
                                DDRD_REG=0x00;
 13e:	e1 e3       	ldi	r30, 0x31	; 49
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	10 82       	st	Z, r1
 144:	03 c0       	rjmp	.+6      	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                            else
                            {
                                /**/
                          	  LOC_enumState=DIO_NOK;
 146:	19 82       	std	Y+1, r1	; 0x01
 148:	01 c0       	rjmp	.+2      	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                    break;

        default:
      	  LOC_enumState=DIO_NOK;
 14a:	19 82       	std	Y+1, r1	; 0x01

    }
return    LOC_enumState;
 14c:	89 81       	ldd	r24, Y+1	; 0x01
 }
 14e:	0f 90       	pop	r0
 150:	0f 90       	pop	r0
 152:	0f 90       	pop	r0
 154:	0f 90       	pop	r0
 156:	0f 90       	pop	r0
 158:	cf 91       	pop	r28
 15a:	df 91       	pop	r29
 15c:	08 95       	ret

0000015e <DIO_enumSetPortValue>:
 DIO_ErroStatus DIO_enumSetPortValue    (u8 Copy_u8Port, u8 Copy_u8Value    )
 {
 15e:	df 93       	push	r29
 160:	cf 93       	push	r28
 162:	00 d0       	rcall	.+0      	; 0x164 <DIO_enumSetPortValue+0x6>
 164:	00 d0       	rcall	.+0      	; 0x166 <DIO_enumSetPortValue+0x8>
 166:	0f 92       	push	r0
 168:	cd b7       	in	r28, 0x3d	; 61
 16a:	de b7       	in	r29, 0x3e	; 62
 16c:	8a 83       	std	Y+2, r24	; 0x02
 16e:	6b 83       	std	Y+3, r22	; 0x03
	 DIO_ErroStatus LOC_enumState=DIO_OK;
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	89 83       	std	Y+1, r24	; 0x01

     switch(Copy_u8Port)
 174:	8a 81       	ldd	r24, Y+2	; 0x02
 176:	28 2f       	mov	r18, r24
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	3d 83       	std	Y+5, r19	; 0x05
 17c:	2c 83       	std	Y+4, r18	; 0x04
 17e:	8c 81       	ldd	r24, Y+4	; 0x04
 180:	9d 81       	ldd	r25, Y+5	; 0x05
 182:	82 30       	cpi	r24, 0x02	; 2
 184:	91 05       	cpc	r25, r1
 186:	d9 f0       	breq	.+54     	; 0x1be <DIO_enumSetPortValue+0x60>
 188:	2c 81       	ldd	r18, Y+4	; 0x04
 18a:	3d 81       	ldd	r19, Y+5	; 0x05
 18c:	23 30       	cpi	r18, 0x03	; 3
 18e:	31 05       	cpc	r19, r1
 190:	34 f4       	brge	.+12     	; 0x19e <DIO_enumSetPortValue+0x40>
 192:	8c 81       	ldd	r24, Y+4	; 0x04
 194:	9d 81       	ldd	r25, Y+5	; 0x05
 196:	81 30       	cpi	r24, 0x01	; 1
 198:	91 05       	cpc	r25, r1
 19a:	61 f0       	breq	.+24     	; 0x1b4 <DIO_enumSetPortValue+0x56>
 19c:	1f c0       	rjmp	.+62     	; 0x1dc <DIO_enumSetPortValue+0x7e>
 19e:	2c 81       	ldd	r18, Y+4	; 0x04
 1a0:	3d 81       	ldd	r19, Y+5	; 0x05
 1a2:	23 30       	cpi	r18, 0x03	; 3
 1a4:	31 05       	cpc	r19, r1
 1a6:	81 f0       	breq	.+32     	; 0x1c8 <DIO_enumSetPortValue+0x6a>
 1a8:	8c 81       	ldd	r24, Y+4	; 0x04
 1aa:	9d 81       	ldd	r25, Y+5	; 0x05
 1ac:	84 30       	cpi	r24, 0x04	; 4
 1ae:	91 05       	cpc	r25, r1
 1b0:	81 f0       	breq	.+32     	; 0x1d2 <DIO_enumSetPortValue+0x74>
 1b2:	14 c0       	rjmp	.+40     	; 0x1dc <DIO_enumSetPortValue+0x7e>
    {
        case DIO_PORTA : 
                        if( Copy_u8Value >=0 && Copy_u8Value <= 0xff)
                           {
                                PORTA_REG =Copy_u8Value;
 1b4:	eb e3       	ldi	r30, 0x3B	; 59
 1b6:	f0 e0       	ldi	r31, 0x00	; 0
 1b8:	8b 81       	ldd	r24, Y+3	; 0x03
 1ba:	80 83       	st	Z, r24
 1bc:	10 c0       	rjmp	.+32     	; 0x1de <DIO_enumSetPortValue+0x80>
                          }
                    break;
        case DIO_PORTB :
        	  if( Copy_u8Value >=0 && Copy_u8Value <= 0xff)
        	                           {
        	                                PORTA_REG =Copy_u8Value;
 1be:	eb e3       	ldi	r30, 0x3B	; 59
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	8b 81       	ldd	r24, Y+3	; 0x03
 1c4:	80 83       	st	Z, r24
 1c6:	0b c0       	rjmp	.+22     	; 0x1de <DIO_enumSetPortValue+0x80>
        	                          }
        	                    break;
        case DIO_PORTC : 
        	  if( Copy_u8Value >=0 && Copy_u8Value <= 0xff)
        	                           {
        	                                PORTA_REG =Copy_u8Value;
 1c8:	eb e3       	ldi	r30, 0x3B	; 59
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	8b 81       	ldd	r24, Y+3	; 0x03
 1ce:	80 83       	st	Z, r24
 1d0:	06 c0       	rjmp	.+12     	; 0x1de <DIO_enumSetPortValue+0x80>
        	                          }
        	                    break;
        case DIO_PORTD : 
        	  if( Copy_u8Value >=0 && Copy_u8Value <= 0xff)
        	                           {
        	                                PORTA_REG =Copy_u8Value;
 1d2:	eb e3       	ldi	r30, 0x3B	; 59
 1d4:	f0 e0       	ldi	r31, 0x00	; 0
 1d6:	8b 81       	ldd	r24, Y+3	; 0x03
 1d8:	80 83       	st	Z, r24
 1da:	01 c0       	rjmp	.+2      	; 0x1de <DIO_enumSetPortValue+0x80>
        	                            /**/
        	                         	  LOC_enumState=DIO_NOK;
        	                          }
        	                    break;
        default:
       	  LOC_enumState=DIO_NOK;
 1dc:	19 82       	std	Y+1, r1	; 0x01

     }
 return    LOC_enumState;
 1de:	89 81       	ldd	r24, Y+1	; 0x01
 }
 1e0:	0f 90       	pop	r0
 1e2:	0f 90       	pop	r0
 1e4:	0f 90       	pop	r0
 1e6:	0f 90       	pop	r0
 1e8:	0f 90       	pop	r0
 1ea:	cf 91       	pop	r28
 1ec:	df 91       	pop	r29
 1ee:	08 95       	ret

000001f0 <DIO_enumSetPINDirection>:

 DIO_ErroStatus DIO_enumSetPINDirection(u8 Copy_u8Port,u8 Copy_u8PINNumber, u8 Copy_u8Direction)
 {
 1f0:	df 93       	push	r29
 1f2:	cf 93       	push	r28
 1f4:	00 d0       	rcall	.+0      	; 0x1f6 <DIO_enumSetPINDirection+0x6>
 1f6:	00 d0       	rcall	.+0      	; 0x1f8 <DIO_enumSetPINDirection+0x8>
 1f8:	00 d0       	rcall	.+0      	; 0x1fa <DIO_enumSetPINDirection+0xa>
 1fa:	cd b7       	in	r28, 0x3d	; 61
 1fc:	de b7       	in	r29, 0x3e	; 62
 1fe:	8a 83       	std	Y+2, r24	; 0x02
 200:	6b 83       	std	Y+3, r22	; 0x03
 202:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErroStatus LOC_enumState = DIO_OK;
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	89 83       	std	Y+1, r24	; 0x01
	if((Copy_u8PINNumber>=DIO_PIN0)&& (Copy_u8PINNumber<=DIO_PIN7))
 208:	8b 81       	ldd	r24, Y+3	; 0x03
 20a:	88 30       	cpi	r24, 0x08	; 8
 20c:	08 f0       	brcs	.+2      	; 0x210 <DIO_enumSetPINDirection+0x20>
 20e:	e9 c0       	rjmp	.+466    	; 0x3e2 <DIO_enumSetPINDirection+0x1f2>
	{
		 switch(Copy_u8Port)
 210:	8a 81       	ldd	r24, Y+2	; 0x02
 212:	28 2f       	mov	r18, r24
 214:	30 e0       	ldi	r19, 0x00	; 0
 216:	3e 83       	std	Y+6, r19	; 0x06
 218:	2d 83       	std	Y+5, r18	; 0x05
 21a:	8d 81       	ldd	r24, Y+5	; 0x05
 21c:	9e 81       	ldd	r25, Y+6	; 0x06
 21e:	82 30       	cpi	r24, 0x02	; 2
 220:	91 05       	cpc	r25, r1
 222:	09 f4       	brne	.+2      	; 0x226 <DIO_enumSetPINDirection+0x36>
 224:	49 c0       	rjmp	.+146    	; 0x2b8 <DIO_enumSetPINDirection+0xc8>
 226:	2d 81       	ldd	r18, Y+5	; 0x05
 228:	3e 81       	ldd	r19, Y+6	; 0x06
 22a:	23 30       	cpi	r18, 0x03	; 3
 22c:	31 05       	cpc	r19, r1
 22e:	34 f4       	brge	.+12     	; 0x23c <DIO_enumSetPINDirection+0x4c>
 230:	8d 81       	ldd	r24, Y+5	; 0x05
 232:	9e 81       	ldd	r25, Y+6	; 0x06
 234:	81 30       	cpi	r24, 0x01	; 1
 236:	91 05       	cpc	r25, r1
 238:	71 f0       	breq	.+28     	; 0x256 <DIO_enumSetPINDirection+0x66>
 23a:	d1 c0       	rjmp	.+418    	; 0x3de <DIO_enumSetPINDirection+0x1ee>
 23c:	2d 81       	ldd	r18, Y+5	; 0x05
 23e:	3e 81       	ldd	r19, Y+6	; 0x06
 240:	23 30       	cpi	r18, 0x03	; 3
 242:	31 05       	cpc	r19, r1
 244:	09 f4       	brne	.+2      	; 0x248 <DIO_enumSetPINDirection+0x58>
 246:	69 c0       	rjmp	.+210    	; 0x31a <DIO_enumSetPINDirection+0x12a>
 248:	8d 81       	ldd	r24, Y+5	; 0x05
 24a:	9e 81       	ldd	r25, Y+6	; 0x06
 24c:	84 30       	cpi	r24, 0x04	; 4
 24e:	91 05       	cpc	r25, r1
 250:	09 f4       	brne	.+2      	; 0x254 <DIO_enumSetPINDirection+0x64>
 252:	94 c0       	rjmp	.+296    	; 0x37c <DIO_enumSetPINDirection+0x18c>
 254:	c4 c0       	rjmp	.+392    	; 0x3de <DIO_enumSetPINDirection+0x1ee>
		    {

		        case DIO_PORTA :
		                        if(Copy_u8Direction == DIO_OUTPUT)
 256:	8c 81       	ldd	r24, Y+4	; 0x04
 258:	81 30       	cpi	r24, 0x01	; 1
 25a:	a1 f4       	brne	.+40     	; 0x284 <DIO_enumSetPINDirection+0x94>
		                           {
		                                SET_BIT(DDRA_REG,Copy_u8PINNumber);
 25c:	aa e3       	ldi	r26, 0x3A	; 58
 25e:	b0 e0       	ldi	r27, 0x00	; 0
 260:	ea e3       	ldi	r30, 0x3A	; 58
 262:	f0 e0       	ldi	r31, 0x00	; 0
 264:	80 81       	ld	r24, Z
 266:	48 2f       	mov	r20, r24
 268:	8b 81       	ldd	r24, Y+3	; 0x03
 26a:	28 2f       	mov	r18, r24
 26c:	30 e0       	ldi	r19, 0x00	; 0
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	02 2e       	mov	r0, r18
 274:	02 c0       	rjmp	.+4      	; 0x27a <DIO_enumSetPINDirection+0x8a>
 276:	88 0f       	add	r24, r24
 278:	99 1f       	adc	r25, r25
 27a:	0a 94       	dec	r0
 27c:	e2 f7       	brpl	.-8      	; 0x276 <DIO_enumSetPINDirection+0x86>
 27e:	84 2b       	or	r24, r20
 280:	8c 93       	st	X, r24
 282:	b0 c0       	rjmp	.+352    	; 0x3e4 <DIO_enumSetPINDirection+0x1f4>
		                           }
		                        else if(Copy_u8Direction == DIO_INPUT)
 284:	8c 81       	ldd	r24, Y+4	; 0x04
 286:	88 23       	and	r24, r24
 288:	a9 f4       	brne	.+42     	; 0x2b4 <DIO_enumSetPINDirection+0xc4>
		                          {
		                                CLR_BIT(DDRA_REG,Copy_u8PINNumber);
 28a:	aa e3       	ldi	r26, 0x3A	; 58
 28c:	b0 e0       	ldi	r27, 0x00	; 0
 28e:	ea e3       	ldi	r30, 0x3A	; 58
 290:	f0 e0       	ldi	r31, 0x00	; 0
 292:	80 81       	ld	r24, Z
 294:	48 2f       	mov	r20, r24
 296:	8b 81       	ldd	r24, Y+3	; 0x03
 298:	28 2f       	mov	r18, r24
 29a:	30 e0       	ldi	r19, 0x00	; 0
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	02 2e       	mov	r0, r18
 2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <DIO_enumSetPINDirection+0xb8>
 2a4:	88 0f       	add	r24, r24
 2a6:	99 1f       	adc	r25, r25
 2a8:	0a 94       	dec	r0
 2aa:	e2 f7       	brpl	.-8      	; 0x2a4 <DIO_enumSetPINDirection+0xb4>
 2ac:	80 95       	com	r24
 2ae:	84 23       	and	r24, r20
 2b0:	8c 93       	st	X, r24
 2b2:	98 c0       	rjmp	.+304    	; 0x3e4 <DIO_enumSetPINDirection+0x1f4>
		                          }
		                          else
		                          {
		                            /**/
		                        	  LOC_enumState=DIO_NOK;
 2b4:	19 82       	std	Y+1, r1	; 0x01
 2b6:	96 c0       	rjmp	.+300    	; 0x3e4 <DIO_enumSetPINDirection+0x1f4>
		                          }
		                    break;
		        case DIO_PORTB :
		                        if(Copy_u8Direction == DIO_OUTPUT)
 2b8:	8c 81       	ldd	r24, Y+4	; 0x04
 2ba:	81 30       	cpi	r24, 0x01	; 1
 2bc:	a1 f4       	brne	.+40     	; 0x2e6 <DIO_enumSetPINDirection+0xf6>
		                            {
		                                SET_BIT(DDRB_REG,Copy_u8PINNumber);
 2be:	a7 e3       	ldi	r26, 0x37	; 55
 2c0:	b0 e0       	ldi	r27, 0x00	; 0
 2c2:	e7 e3       	ldi	r30, 0x37	; 55
 2c4:	f0 e0       	ldi	r31, 0x00	; 0
 2c6:	80 81       	ld	r24, Z
 2c8:	48 2f       	mov	r20, r24
 2ca:	8b 81       	ldd	r24, Y+3	; 0x03
 2cc:	28 2f       	mov	r18, r24
 2ce:	30 e0       	ldi	r19, 0x00	; 0
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	02 2e       	mov	r0, r18
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <DIO_enumSetPINDirection+0xec>
 2d8:	88 0f       	add	r24, r24
 2da:	99 1f       	adc	r25, r25
 2dc:	0a 94       	dec	r0
 2de:	e2 f7       	brpl	.-8      	; 0x2d8 <DIO_enumSetPINDirection+0xe8>
 2e0:	84 2b       	or	r24, r20
 2e2:	8c 93       	st	X, r24
 2e4:	7f c0       	rjmp	.+254    	; 0x3e4 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                        else if(Copy_u8Direction == DIO_INPUT)
 2e6:	8c 81       	ldd	r24, Y+4	; 0x04
 2e8:	88 23       	and	r24, r24
 2ea:	a9 f4       	brne	.+42     	; 0x316 <DIO_enumSetPINDirection+0x126>
		                            {
	                                    CLR_BIT(DDRB_REG,Copy_u8PINNumber);
 2ec:	a7 e3       	ldi	r26, 0x37	; 55
 2ee:	b0 e0       	ldi	r27, 0x00	; 0
 2f0:	e7 e3       	ldi	r30, 0x37	; 55
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	80 81       	ld	r24, Z
 2f6:	48 2f       	mov	r20, r24
 2f8:	8b 81       	ldd	r24, Y+3	; 0x03
 2fa:	28 2f       	mov	r18, r24
 2fc:	30 e0       	ldi	r19, 0x00	; 0
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	02 2e       	mov	r0, r18
 304:	02 c0       	rjmp	.+4      	; 0x30a <DIO_enumSetPINDirection+0x11a>
 306:	88 0f       	add	r24, r24
 308:	99 1f       	adc	r25, r25
 30a:	0a 94       	dec	r0
 30c:	e2 f7       	brpl	.-8      	; 0x306 <DIO_enumSetPINDirection+0x116>
 30e:	80 95       	com	r24
 310:	84 23       	and	r24, r20
 312:	8c 93       	st	X, r24
 314:	67 c0       	rjmp	.+206    	; 0x3e4 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                            else
		                            {
		                                /**/
		                          	  LOC_enumState=DIO_NOK;
 316:	19 82       	std	Y+1, r1	; 0x01
 318:	65 c0       	rjmp	.+202    	; 0x3e4 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                    break;
		        case DIO_PORTC :
		                        if(Copy_u8Direction == DIO_OUTPUT)
 31a:	8c 81       	ldd	r24, Y+4	; 0x04
 31c:	81 30       	cpi	r24, 0x01	; 1
 31e:	a1 f4       	brne	.+40     	; 0x348 <DIO_enumSetPINDirection+0x158>
		                            {
	                                SET_BIT(DDRC_REG,Copy_u8PINNumber);
 320:	a4 e3       	ldi	r26, 0x34	; 52
 322:	b0 e0       	ldi	r27, 0x00	; 0
 324:	e4 e3       	ldi	r30, 0x34	; 52
 326:	f0 e0       	ldi	r31, 0x00	; 0
 328:	80 81       	ld	r24, Z
 32a:	48 2f       	mov	r20, r24
 32c:	8b 81       	ldd	r24, Y+3	; 0x03
 32e:	28 2f       	mov	r18, r24
 330:	30 e0       	ldi	r19, 0x00	; 0
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	02 2e       	mov	r0, r18
 338:	02 c0       	rjmp	.+4      	; 0x33e <DIO_enumSetPINDirection+0x14e>
 33a:	88 0f       	add	r24, r24
 33c:	99 1f       	adc	r25, r25
 33e:	0a 94       	dec	r0
 340:	e2 f7       	brpl	.-8      	; 0x33a <DIO_enumSetPINDirection+0x14a>
 342:	84 2b       	or	r24, r20
 344:	8c 93       	st	X, r24
 346:	4e c0       	rjmp	.+156    	; 0x3e4 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                        else if (Copy_u8Direction == DIO_INPUT)
 348:	8c 81       	ldd	r24, Y+4	; 0x04
 34a:	88 23       	and	r24, r24
 34c:	a9 f4       	brne	.+42     	; 0x378 <DIO_enumSetPINDirection+0x188>
		                            {
	                                CLR_BIT(DDRC_REG,Copy_u8PINNumber);
 34e:	a4 e3       	ldi	r26, 0x34	; 52
 350:	b0 e0       	ldi	r27, 0x00	; 0
 352:	e4 e3       	ldi	r30, 0x34	; 52
 354:	f0 e0       	ldi	r31, 0x00	; 0
 356:	80 81       	ld	r24, Z
 358:	48 2f       	mov	r20, r24
 35a:	8b 81       	ldd	r24, Y+3	; 0x03
 35c:	28 2f       	mov	r18, r24
 35e:	30 e0       	ldi	r19, 0x00	; 0
 360:	81 e0       	ldi	r24, 0x01	; 1
 362:	90 e0       	ldi	r25, 0x00	; 0
 364:	02 2e       	mov	r0, r18
 366:	02 c0       	rjmp	.+4      	; 0x36c <DIO_enumSetPINDirection+0x17c>
 368:	88 0f       	add	r24, r24
 36a:	99 1f       	adc	r25, r25
 36c:	0a 94       	dec	r0
 36e:	e2 f7       	brpl	.-8      	; 0x368 <DIO_enumSetPINDirection+0x178>
 370:	80 95       	com	r24
 372:	84 23       	and	r24, r20
 374:	8c 93       	st	X, r24
 376:	36 c0       	rjmp	.+108    	; 0x3e4 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                            else
		                            {
		                                /**/
		                          	  LOC_enumState=DIO_NOK;
 378:	19 82       	std	Y+1, r1	; 0x01
 37a:	34 c0       	rjmp	.+104    	; 0x3e4 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                    break;
		        case DIO_PORTD :
		                        if(Copy_u8Direction == DIO_OUTPUT)
 37c:	8c 81       	ldd	r24, Y+4	; 0x04
 37e:	81 30       	cpi	r24, 0x01	; 1
 380:	a1 f4       	brne	.+40     	; 0x3aa <DIO_enumSetPINDirection+0x1ba>
		                            {
	                                SET_BIT(DDRD_REG,Copy_u8PINNumber);
 382:	a1 e3       	ldi	r26, 0x31	; 49
 384:	b0 e0       	ldi	r27, 0x00	; 0
 386:	e1 e3       	ldi	r30, 0x31	; 49
 388:	f0 e0       	ldi	r31, 0x00	; 0
 38a:	80 81       	ld	r24, Z
 38c:	48 2f       	mov	r20, r24
 38e:	8b 81       	ldd	r24, Y+3	; 0x03
 390:	28 2f       	mov	r18, r24
 392:	30 e0       	ldi	r19, 0x00	; 0
 394:	81 e0       	ldi	r24, 0x01	; 1
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	02 2e       	mov	r0, r18
 39a:	02 c0       	rjmp	.+4      	; 0x3a0 <DIO_enumSetPINDirection+0x1b0>
 39c:	88 0f       	add	r24, r24
 39e:	99 1f       	adc	r25, r25
 3a0:	0a 94       	dec	r0
 3a2:	e2 f7       	brpl	.-8      	; 0x39c <DIO_enumSetPINDirection+0x1ac>
 3a4:	84 2b       	or	r24, r20
 3a6:	8c 93       	st	X, r24
 3a8:	1d c0       	rjmp	.+58     	; 0x3e4 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                        else if (Copy_u8Direction==DIO_INPUT)
 3aa:	8c 81       	ldd	r24, Y+4	; 0x04
 3ac:	88 23       	and	r24, r24
 3ae:	a9 f4       	brne	.+42     	; 0x3da <DIO_enumSetPINDirection+0x1ea>
		                            {
	                                CLR_BIT(DDRD_REG,Copy_u8PINNumber);
 3b0:	a1 e3       	ldi	r26, 0x31	; 49
 3b2:	b0 e0       	ldi	r27, 0x00	; 0
 3b4:	e1 e3       	ldi	r30, 0x31	; 49
 3b6:	f0 e0       	ldi	r31, 0x00	; 0
 3b8:	80 81       	ld	r24, Z
 3ba:	48 2f       	mov	r20, r24
 3bc:	8b 81       	ldd	r24, Y+3	; 0x03
 3be:	28 2f       	mov	r18, r24
 3c0:	30 e0       	ldi	r19, 0x00	; 0
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	02 2e       	mov	r0, r18
 3c8:	02 c0       	rjmp	.+4      	; 0x3ce <DIO_enumSetPINDirection+0x1de>
 3ca:	88 0f       	add	r24, r24
 3cc:	99 1f       	adc	r25, r25
 3ce:	0a 94       	dec	r0
 3d0:	e2 f7       	brpl	.-8      	; 0x3ca <DIO_enumSetPINDirection+0x1da>
 3d2:	80 95       	com	r24
 3d4:	84 23       	and	r24, r20
 3d6:	8c 93       	st	X, r24
 3d8:	05 c0       	rjmp	.+10     	; 0x3e4 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                            else
		                            {
		                                /**/
		                          	  LOC_enumState=DIO_NOK;
 3da:	19 82       	std	Y+1, r1	; 0x01
 3dc:	03 c0       	rjmp	.+6      	; 0x3e4 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                    break;

		        default:
		      	  LOC_enumState=DIO_NOK;
 3de:	19 82       	std	Y+1, r1	; 0x01
 3e0:	01 c0       	rjmp	.+2      	; 0x3e4 <DIO_enumSetPINDirection+0x1f4>

	}
	}
	else
	{
		LOC_enumState=DIO_NOK;
 3e2:	19 82       	std	Y+1, r1	; 0x01
	}



	return LOC_enumState;
 3e4:	89 81       	ldd	r24, Y+1	; 0x01
 }
 3e6:	26 96       	adiw	r28, 0x06	; 6
 3e8:	0f b6       	in	r0, 0x3f	; 63
 3ea:	f8 94       	cli
 3ec:	de bf       	out	0x3e, r29	; 62
 3ee:	0f be       	out	0x3f, r0	; 63
 3f0:	cd bf       	out	0x3d, r28	; 61
 3f2:	cf 91       	pop	r28
 3f4:	df 91       	pop	r29
 3f6:	08 95       	ret

000003f8 <DIO_enumSetPINValue>:
 DIO_ErroStatus DIO_enumSetPINValue    (u8 Copy_u8Port,u8 Copy_u8PINNumber, u8 Copy_u8Value    )
 {
 3f8:	df 93       	push	r29
 3fa:	cf 93       	push	r28
 3fc:	00 d0       	rcall	.+0      	; 0x3fe <DIO_enumSetPINValue+0x6>
 3fe:	00 d0       	rcall	.+0      	; 0x400 <DIO_enumSetPINValue+0x8>
 400:	00 d0       	rcall	.+0      	; 0x402 <DIO_enumSetPINValue+0xa>
 402:	cd b7       	in	r28, 0x3d	; 61
 404:	de b7       	in	r29, 0x3e	; 62
 406:	8a 83       	std	Y+2, r24	; 0x02
 408:	6b 83       	std	Y+3, r22	; 0x03
 40a:	4c 83       	std	Y+4, r20	; 0x04
	 DIO_ErroStatus LOC_enumState = DIO_OK;
 40c:	81 e0       	ldi	r24, 0x01	; 1
 40e:	89 83       	std	Y+1, r24	; 0x01
	 	if((Copy_u8PINNumber>=DIO_PIN0)&& (Copy_u8PINNumber<=DIO_PIN7))
 410:	8b 81       	ldd	r24, Y+3	; 0x03
 412:	88 30       	cpi	r24, 0x08	; 8
 414:	08 f0       	brcs	.+2      	; 0x418 <DIO_enumSetPINValue+0x20>
 416:	d4 c0       	rjmp	.+424    	; 0x5c0 <DIO_enumSetPINValue+0x1c8>
	 	{
	 		 switch(Copy_u8Port)
 418:	8a 81       	ldd	r24, Y+2	; 0x02
 41a:	28 2f       	mov	r18, r24
 41c:	30 e0       	ldi	r19, 0x00	; 0
 41e:	3e 83       	std	Y+6, r19	; 0x06
 420:	2d 83       	std	Y+5, r18	; 0x05
 422:	8d 81       	ldd	r24, Y+5	; 0x05
 424:	9e 81       	ldd	r25, Y+6	; 0x06
 426:	82 30       	cpi	r24, 0x02	; 2
 428:	91 05       	cpc	r25, r1
 42a:	09 f4       	brne	.+2      	; 0x42e <DIO_enumSetPINValue+0x36>
 42c:	49 c0       	rjmp	.+146    	; 0x4c0 <DIO_enumSetPINValue+0xc8>
 42e:	2d 81       	ldd	r18, Y+5	; 0x05
 430:	3e 81       	ldd	r19, Y+6	; 0x06
 432:	23 30       	cpi	r18, 0x03	; 3
 434:	31 05       	cpc	r19, r1
 436:	34 f4       	brge	.+12     	; 0x444 <DIO_enumSetPINValue+0x4c>
 438:	8d 81       	ldd	r24, Y+5	; 0x05
 43a:	9e 81       	ldd	r25, Y+6	; 0x06
 43c:	81 30       	cpi	r24, 0x01	; 1
 43e:	91 05       	cpc	r25, r1
 440:	71 f0       	breq	.+28     	; 0x45e <DIO_enumSetPINValue+0x66>
 442:	bc c0       	rjmp	.+376    	; 0x5bc <DIO_enumSetPINValue+0x1c4>
 444:	2d 81       	ldd	r18, Y+5	; 0x05
 446:	3e 81       	ldd	r19, Y+6	; 0x06
 448:	23 30       	cpi	r18, 0x03	; 3
 44a:	31 05       	cpc	r19, r1
 44c:	09 f4       	brne	.+2      	; 0x450 <DIO_enumSetPINValue+0x58>
 44e:	69 c0       	rjmp	.+210    	; 0x522 <DIO_enumSetPINValue+0x12a>
 450:	8d 81       	ldd	r24, Y+5	; 0x05
 452:	9e 81       	ldd	r25, Y+6	; 0x06
 454:	84 30       	cpi	r24, 0x04	; 4
 456:	91 05       	cpc	r25, r1
 458:	09 f4       	brne	.+2      	; 0x45c <DIO_enumSetPINValue+0x64>
 45a:	94 c0       	rjmp	.+296    	; 0x584 <DIO_enumSetPINValue+0x18c>
 45c:	af c0       	rjmp	.+350    	; 0x5bc <DIO_enumSetPINValue+0x1c4>
	 		    {

	 		        case DIO_PORTA :
	 		                        if(Copy_u8Value == DIO_HIGH)
 45e:	8c 81       	ldd	r24, Y+4	; 0x04
 460:	81 30       	cpi	r24, 0x01	; 1
 462:	a1 f4       	brne	.+40     	; 0x48c <DIO_enumSetPINValue+0x94>
	 		                           {
	 		                                SET_BIT(PORTA_REG,Copy_u8PINNumber);
 464:	ab e3       	ldi	r26, 0x3B	; 59
 466:	b0 e0       	ldi	r27, 0x00	; 0
 468:	eb e3       	ldi	r30, 0x3B	; 59
 46a:	f0 e0       	ldi	r31, 0x00	; 0
 46c:	80 81       	ld	r24, Z
 46e:	48 2f       	mov	r20, r24
 470:	8b 81       	ldd	r24, Y+3	; 0x03
 472:	28 2f       	mov	r18, r24
 474:	30 e0       	ldi	r19, 0x00	; 0
 476:	81 e0       	ldi	r24, 0x01	; 1
 478:	90 e0       	ldi	r25, 0x00	; 0
 47a:	02 2e       	mov	r0, r18
 47c:	02 c0       	rjmp	.+4      	; 0x482 <DIO_enumSetPINValue+0x8a>
 47e:	88 0f       	add	r24, r24
 480:	99 1f       	adc	r25, r25
 482:	0a 94       	dec	r0
 484:	e2 f7       	brpl	.-8      	; 0x47e <DIO_enumSetPINValue+0x86>
 486:	84 2b       	or	r24, r20
 488:	8c 93       	st	X, r24
 48a:	9b c0       	rjmp	.+310    	; 0x5c2 <DIO_enumSetPINValue+0x1ca>
	 		                           }
	 		                        else if(Copy_u8Value == DIO_LOW)
 48c:	8c 81       	ldd	r24, Y+4	; 0x04
 48e:	88 23       	and	r24, r24
 490:	a9 f4       	brne	.+42     	; 0x4bc <DIO_enumSetPINValue+0xc4>
	 		                          {
	 		                                CLR_BIT(PORTA_REG,Copy_u8PINNumber);
 492:	ab e3       	ldi	r26, 0x3B	; 59
 494:	b0 e0       	ldi	r27, 0x00	; 0
 496:	eb e3       	ldi	r30, 0x3B	; 59
 498:	f0 e0       	ldi	r31, 0x00	; 0
 49a:	80 81       	ld	r24, Z
 49c:	48 2f       	mov	r20, r24
 49e:	8b 81       	ldd	r24, Y+3	; 0x03
 4a0:	28 2f       	mov	r18, r24
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	02 2e       	mov	r0, r18
 4aa:	02 c0       	rjmp	.+4      	; 0x4b0 <DIO_enumSetPINValue+0xb8>
 4ac:	88 0f       	add	r24, r24
 4ae:	99 1f       	adc	r25, r25
 4b0:	0a 94       	dec	r0
 4b2:	e2 f7       	brpl	.-8      	; 0x4ac <DIO_enumSetPINValue+0xb4>
 4b4:	80 95       	com	r24
 4b6:	84 23       	and	r24, r20
 4b8:	8c 93       	st	X, r24
 4ba:	83 c0       	rjmp	.+262    	; 0x5c2 <DIO_enumSetPINValue+0x1ca>
	 		                          }
	 		                          else
	 		                          {
	 		                            /**/
	 		                        	  LOC_enumState=DIO_NOK;
 4bc:	19 82       	std	Y+1, r1	; 0x01
 4be:	81 c0       	rjmp	.+258    	; 0x5c2 <DIO_enumSetPINValue+0x1ca>
	 		                          }
	 		                    break;
	 		        case DIO_PORTB :
	 		                        if(Copy_u8Value == DIO_HIGH)
 4c0:	8c 81       	ldd	r24, Y+4	; 0x04
 4c2:	81 30       	cpi	r24, 0x01	; 1
 4c4:	a1 f4       	brne	.+40     	; 0x4ee <DIO_enumSetPINValue+0xf6>
	 		                            {
	 		                                SET_BIT(PORTB_REG,Copy_u8PINNumber);
 4c6:	a8 e3       	ldi	r26, 0x38	; 56
 4c8:	b0 e0       	ldi	r27, 0x00	; 0
 4ca:	e8 e3       	ldi	r30, 0x38	; 56
 4cc:	f0 e0       	ldi	r31, 0x00	; 0
 4ce:	80 81       	ld	r24, Z
 4d0:	48 2f       	mov	r20, r24
 4d2:	8b 81       	ldd	r24, Y+3	; 0x03
 4d4:	28 2f       	mov	r18, r24
 4d6:	30 e0       	ldi	r19, 0x00	; 0
 4d8:	81 e0       	ldi	r24, 0x01	; 1
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	02 2e       	mov	r0, r18
 4de:	02 c0       	rjmp	.+4      	; 0x4e4 <DIO_enumSetPINValue+0xec>
 4e0:	88 0f       	add	r24, r24
 4e2:	99 1f       	adc	r25, r25
 4e4:	0a 94       	dec	r0
 4e6:	e2 f7       	brpl	.-8      	; 0x4e0 <DIO_enumSetPINValue+0xe8>
 4e8:	84 2b       	or	r24, r20
 4ea:	8c 93       	st	X, r24
 4ec:	6a c0       	rjmp	.+212    	; 0x5c2 <DIO_enumSetPINValue+0x1ca>
	 		                            }
	 		                        else if(Copy_u8Value == DIO_LOW)
 4ee:	8c 81       	ldd	r24, Y+4	; 0x04
 4f0:	88 23       	and	r24, r24
 4f2:	a9 f4       	brne	.+42     	; 0x51e <DIO_enumSetPINValue+0x126>
	 		                            {
	 	                                    CLR_BIT(PORTB_REG,Copy_u8PINNumber);
 4f4:	a8 e3       	ldi	r26, 0x38	; 56
 4f6:	b0 e0       	ldi	r27, 0x00	; 0
 4f8:	e8 e3       	ldi	r30, 0x38	; 56
 4fa:	f0 e0       	ldi	r31, 0x00	; 0
 4fc:	80 81       	ld	r24, Z
 4fe:	48 2f       	mov	r20, r24
 500:	8b 81       	ldd	r24, Y+3	; 0x03
 502:	28 2f       	mov	r18, r24
 504:	30 e0       	ldi	r19, 0x00	; 0
 506:	81 e0       	ldi	r24, 0x01	; 1
 508:	90 e0       	ldi	r25, 0x00	; 0
 50a:	02 2e       	mov	r0, r18
 50c:	02 c0       	rjmp	.+4      	; 0x512 <DIO_enumSetPINValue+0x11a>
 50e:	88 0f       	add	r24, r24
 510:	99 1f       	adc	r25, r25
 512:	0a 94       	dec	r0
 514:	e2 f7       	brpl	.-8      	; 0x50e <DIO_enumSetPINValue+0x116>
 516:	80 95       	com	r24
 518:	84 23       	and	r24, r20
 51a:	8c 93       	st	X, r24
 51c:	52 c0       	rjmp	.+164    	; 0x5c2 <DIO_enumSetPINValue+0x1ca>
	 		                            }
	 		                            else
	 		                            {
	 		                                /**/
	 		                          	  LOC_enumState=DIO_NOK;
 51e:	19 82       	std	Y+1, r1	; 0x01
 520:	50 c0       	rjmp	.+160    	; 0x5c2 <DIO_enumSetPINValue+0x1ca>
	 		                            }
	 		                    break;
	 		        case DIO_PORTC :
	 		                        if(Copy_u8Value == DIO_HIGH)
 522:	8c 81       	ldd	r24, Y+4	; 0x04
 524:	81 30       	cpi	r24, 0x01	; 1
 526:	a1 f4       	brne	.+40     	; 0x550 <DIO_enumSetPINValue+0x158>
	 		                            {
	 	                                SET_BIT(PORTC_REG,Copy_u8PINNumber);
 528:	a5 e3       	ldi	r26, 0x35	; 53
 52a:	b0 e0       	ldi	r27, 0x00	; 0
 52c:	e5 e3       	ldi	r30, 0x35	; 53
 52e:	f0 e0       	ldi	r31, 0x00	; 0
 530:	80 81       	ld	r24, Z
 532:	48 2f       	mov	r20, r24
 534:	8b 81       	ldd	r24, Y+3	; 0x03
 536:	28 2f       	mov	r18, r24
 538:	30 e0       	ldi	r19, 0x00	; 0
 53a:	81 e0       	ldi	r24, 0x01	; 1
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	02 2e       	mov	r0, r18
 540:	02 c0       	rjmp	.+4      	; 0x546 <DIO_enumSetPINValue+0x14e>
 542:	88 0f       	add	r24, r24
 544:	99 1f       	adc	r25, r25
 546:	0a 94       	dec	r0
 548:	e2 f7       	brpl	.-8      	; 0x542 <DIO_enumSetPINValue+0x14a>
 54a:	84 2b       	or	r24, r20
 54c:	8c 93       	st	X, r24
 54e:	39 c0       	rjmp	.+114    	; 0x5c2 <DIO_enumSetPINValue+0x1ca>
	 		                            }
	 		                        else if (Copy_u8Value==DIO_LOW)
 550:	8c 81       	ldd	r24, Y+4	; 0x04
 552:	88 23       	and	r24, r24
 554:	a9 f4       	brne	.+42     	; 0x580 <DIO_enumSetPINValue+0x188>
	 		                            {
	 	                                CLR_BIT(PORTC_REG,Copy_u8PINNumber);
 556:	a5 e3       	ldi	r26, 0x35	; 53
 558:	b0 e0       	ldi	r27, 0x00	; 0
 55a:	e5 e3       	ldi	r30, 0x35	; 53
 55c:	f0 e0       	ldi	r31, 0x00	; 0
 55e:	80 81       	ld	r24, Z
 560:	48 2f       	mov	r20, r24
 562:	8b 81       	ldd	r24, Y+3	; 0x03
 564:	28 2f       	mov	r18, r24
 566:	30 e0       	ldi	r19, 0x00	; 0
 568:	81 e0       	ldi	r24, 0x01	; 1
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	02 2e       	mov	r0, r18
 56e:	02 c0       	rjmp	.+4      	; 0x574 <DIO_enumSetPINValue+0x17c>
 570:	88 0f       	add	r24, r24
 572:	99 1f       	adc	r25, r25
 574:	0a 94       	dec	r0
 576:	e2 f7       	brpl	.-8      	; 0x570 <DIO_enumSetPINValue+0x178>
 578:	80 95       	com	r24
 57a:	84 23       	and	r24, r20
 57c:	8c 93       	st	X, r24
 57e:	21 c0       	rjmp	.+66     	; 0x5c2 <DIO_enumSetPINValue+0x1ca>
	 		                            }
	 		                            else
	 		                            {
	 		                                /**/
	 		                          	  LOC_enumState=DIO_NOK;
 580:	19 82       	std	Y+1, r1	; 0x01
 582:	1f c0       	rjmp	.+62     	; 0x5c2 <DIO_enumSetPINValue+0x1ca>
	 		                            }
	 		                    break;
	 		        case DIO_PORTD :
	 		                        if(Copy_u8Value == DIO_HIGH)
 584:	8c 81       	ldd	r24, Y+4	; 0x04
 586:	81 30       	cpi	r24, 0x01	; 1
 588:	a1 f4       	brne	.+40     	; 0x5b2 <DIO_enumSetPINValue+0x1ba>
	 		                            {
	 	                                SET_BIT(PORTD_REG,Copy_u8PINNumber);
 58a:	a2 e3       	ldi	r26, 0x32	; 50
 58c:	b0 e0       	ldi	r27, 0x00	; 0
 58e:	e2 e3       	ldi	r30, 0x32	; 50
 590:	f0 e0       	ldi	r31, 0x00	; 0
 592:	80 81       	ld	r24, Z
 594:	48 2f       	mov	r20, r24
 596:	8b 81       	ldd	r24, Y+3	; 0x03
 598:	28 2f       	mov	r18, r24
 59a:	30 e0       	ldi	r19, 0x00	; 0
 59c:	81 e0       	ldi	r24, 0x01	; 1
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	02 2e       	mov	r0, r18
 5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <DIO_enumSetPINValue+0x1b0>
 5a4:	88 0f       	add	r24, r24
 5a6:	99 1f       	adc	r25, r25
 5a8:	0a 94       	dec	r0
 5aa:	e2 f7       	brpl	.-8      	; 0x5a4 <DIO_enumSetPINValue+0x1ac>
 5ac:	84 2b       	or	r24, r20
 5ae:	8c 93       	st	X, r24
 5b0:	08 c0       	rjmp	.+16     	; 0x5c2 <DIO_enumSetPINValue+0x1ca>
	 		                            }
	 		                        else if (Copy_u8Value==DIO_LOW)
 5b2:	8c 81       	ldd	r24, Y+4	; 0x04
 5b4:	88 23       	and	r24, r24
 5b6:	29 f0       	breq	.+10     	; 0x5c2 <DIO_enumSetPINValue+0x1ca>
	 		                            {
	 		                            }
	 		                            else
	 		                            {
	 		                                /**/
	 		                          	  LOC_enumState=DIO_NOK;
 5b8:	19 82       	std	Y+1, r1	; 0x01
 5ba:	03 c0       	rjmp	.+6      	; 0x5c2 <DIO_enumSetPINValue+0x1ca>
	 		                            }
	 		                    break;

	 		        default:
	 		      	  LOC_enumState=DIO_NOK;
 5bc:	19 82       	std	Y+1, r1	; 0x01
 5be:	01 c0       	rjmp	.+2      	; 0x5c2 <DIO_enumSetPINValue+0x1ca>

	 	}
	 	}
	 	else
	 	{
	 		LOC_enumState=DIO_NOK;
 5c0:	19 82       	std	Y+1, r1	; 0x01
	 	}



	 	return LOC_enumState;
 5c2:	89 81       	ldd	r24, Y+1	; 0x01
	  }
 5c4:	26 96       	adiw	r28, 0x06	; 6
 5c6:	0f b6       	in	r0, 0x3f	; 63
 5c8:	f8 94       	cli
 5ca:	de bf       	out	0x3e, r29	; 62
 5cc:	0f be       	out	0x3f, r0	; 63
 5ce:	cd bf       	out	0x3d, r28	; 61
 5d0:	cf 91       	pop	r28
 5d2:	df 91       	pop	r29
 5d4:	08 95       	ret

000005d6 <DIO_enumGetPortValue>:

 DIO_ErroStatus DIO_enumGetPortValue    (u8 Copy_u8Port, u8 *Copy_ptrData   )
 {
 5d6:	df 93       	push	r29
 5d8:	cf 93       	push	r28
 5da:	00 d0       	rcall	.+0      	; 0x5dc <DIO_enumGetPortValue+0x6>
 5dc:	00 d0       	rcall	.+0      	; 0x5de <DIO_enumGetPortValue+0x8>
 5de:	00 d0       	rcall	.+0      	; 0x5e0 <DIO_enumGetPortValue+0xa>
 5e0:	cd b7       	in	r28, 0x3d	; 61
 5e2:	de b7       	in	r29, 0x3e	; 62
 5e4:	8a 83       	std	Y+2, r24	; 0x02
 5e6:	7c 83       	std	Y+4, r23	; 0x04
 5e8:	6b 83       	std	Y+3, r22	; 0x03
	 DIO_ErroStatus LOC_enumState=DIO_OK;
 5ea:	81 e0       	ldi	r24, 0x01	; 1
 5ec:	89 83       	std	Y+1, r24	; 0x01
	 switch (Copy_u8Port) {
 5ee:	8a 81       	ldd	r24, Y+2	; 0x02
 5f0:	28 2f       	mov	r18, r24
 5f2:	30 e0       	ldi	r19, 0x00	; 0
 5f4:	3e 83       	std	Y+6, r19	; 0x06
 5f6:	2d 83       	std	Y+5, r18	; 0x05
 5f8:	8d 81       	ldd	r24, Y+5	; 0x05
 5fa:	9e 81       	ldd	r25, Y+6	; 0x06
 5fc:	82 30       	cpi	r24, 0x02	; 2
 5fe:	91 05       	cpc	r25, r1
 600:	e9 f0       	breq	.+58     	; 0x63c <DIO_enumGetPortValue+0x66>
 602:	2d 81       	ldd	r18, Y+5	; 0x05
 604:	3e 81       	ldd	r19, Y+6	; 0x06
 606:	23 30       	cpi	r18, 0x03	; 3
 608:	31 05       	cpc	r19, r1
 60a:	34 f4       	brge	.+12     	; 0x618 <DIO_enumGetPortValue+0x42>
 60c:	8d 81       	ldd	r24, Y+5	; 0x05
 60e:	9e 81       	ldd	r25, Y+6	; 0x06
 610:	81 30       	cpi	r24, 0x01	; 1
 612:	91 05       	cpc	r25, r1
 614:	61 f0       	breq	.+24     	; 0x62e <DIO_enumGetPortValue+0x58>
 616:	27 c0       	rjmp	.+78     	; 0x666 <DIO_enumGetPortValue+0x90>
 618:	2d 81       	ldd	r18, Y+5	; 0x05
 61a:	3e 81       	ldd	r19, Y+6	; 0x06
 61c:	23 30       	cpi	r18, 0x03	; 3
 61e:	31 05       	cpc	r19, r1
 620:	a1 f0       	breq	.+40     	; 0x64a <DIO_enumGetPortValue+0x74>
 622:	8d 81       	ldd	r24, Y+5	; 0x05
 624:	9e 81       	ldd	r25, Y+6	; 0x06
 626:	84 30       	cpi	r24, 0x04	; 4
 628:	91 05       	cpc	r25, r1
 62a:	b1 f0       	breq	.+44     	; 0x658 <DIO_enumGetPortValue+0x82>
 62c:	1c c0       	rjmp	.+56     	; 0x666 <DIO_enumGetPortValue+0x90>
		case DIO_PORTA: *Copy_ptrData = PINA_REG;
 62e:	e9 e3       	ldi	r30, 0x39	; 57
 630:	f0 e0       	ldi	r31, 0x00	; 0
 632:	80 81       	ld	r24, Z
 634:	eb 81       	ldd	r30, Y+3	; 0x03
 636:	fc 81       	ldd	r31, Y+4	; 0x04
 638:	80 83       	st	Z, r24
 63a:	16 c0       	rjmp	.+44     	; 0x668 <DIO_enumGetPortValue+0x92>
			break;
		case DIO_PORTB: *Copy_ptrData = PINB_REG;
 63c:	e6 e3       	ldi	r30, 0x36	; 54
 63e:	f0 e0       	ldi	r31, 0x00	; 0
 640:	80 81       	ld	r24, Z
 642:	eb 81       	ldd	r30, Y+3	; 0x03
 644:	fc 81       	ldd	r31, Y+4	; 0x04
 646:	80 83       	st	Z, r24
 648:	0f c0       	rjmp	.+30     	; 0x668 <DIO_enumGetPortValue+0x92>
					break;
		case DIO_PORTC: *Copy_ptrData = PINC_REG;
 64a:	e3 e3       	ldi	r30, 0x33	; 51
 64c:	f0 e0       	ldi	r31, 0x00	; 0
 64e:	80 81       	ld	r24, Z
 650:	eb 81       	ldd	r30, Y+3	; 0x03
 652:	fc 81       	ldd	r31, Y+4	; 0x04
 654:	80 83       	st	Z, r24
 656:	08 c0       	rjmp	.+16     	; 0x668 <DIO_enumGetPortValue+0x92>
					break;
		case DIO_PORTD: *Copy_ptrData = PIND_REG;
 658:	e0 e3       	ldi	r30, 0x30	; 48
 65a:	f0 e0       	ldi	r31, 0x00	; 0
 65c:	80 81       	ld	r24, Z
 65e:	eb 81       	ldd	r30, Y+3	; 0x03
 660:	fc 81       	ldd	r31, Y+4	; 0x04
 662:	80 83       	st	Z, r24
 664:	01 c0       	rjmp	.+2      	; 0x668 <DIO_enumGetPortValue+0x92>
					break;
		default:
			LOC_enumState =DIO_NOK;
 666:	19 82       	std	Y+1, r1	; 0x01
			break;
	}
	 return LOC_enumState;
 668:	89 81       	ldd	r24, Y+1	; 0x01


 }
 66a:	26 96       	adiw	r28, 0x06	; 6
 66c:	0f b6       	in	r0, 0x3f	; 63
 66e:	f8 94       	cli
 670:	de bf       	out	0x3e, r29	; 62
 672:	0f be       	out	0x3f, r0	; 63
 674:	cd bf       	out	0x3d, r28	; 61
 676:	cf 91       	pop	r28
 678:	df 91       	pop	r29
 67a:	08 95       	ret

0000067c <DIO_enumGetPINValue>:

 DIO_ErroStatus DIO_enumGetPINValue     (u8 Copy_u8Port,u8 Copy_u8PINNumber, u8 *Copy_ptrData   )
 {
 67c:	df 93       	push	r29
 67e:	cf 93       	push	r28
 680:	cd b7       	in	r28, 0x3d	; 61
 682:	de b7       	in	r29, 0x3e	; 62
 684:	27 97       	sbiw	r28, 0x07	; 7
 686:	0f b6       	in	r0, 0x3f	; 63
 688:	f8 94       	cli
 68a:	de bf       	out	0x3e, r29	; 62
 68c:	0f be       	out	0x3f, r0	; 63
 68e:	cd bf       	out	0x3d, r28	; 61
 690:	8a 83       	std	Y+2, r24	; 0x02
 692:	6b 83       	std	Y+3, r22	; 0x03
 694:	5d 83       	std	Y+5, r21	; 0x05
 696:	4c 83       	std	Y+4, r20	; 0x04
	 DIO_ErroStatus LOC_enumState = DIO_OK;
 698:	81 e0       	ldi	r24, 0x01	; 1
 69a:	89 83       	std	Y+1, r24	; 0x01
		if((Copy_u8PINNumber>=DIO_PIN0)&& (Copy_u8PINNumber<=DIO_PIN7))
 69c:	8b 81       	ldd	r24, Y+3	; 0x03
 69e:	88 30       	cpi	r24, 0x08	; 8
 6a0:	08 f0       	brcs	.+2      	; 0x6a4 <DIO_enumGetPINValue+0x28>
 6a2:	73 c0       	rjmp	.+230    	; 0x78a <DIO_enumGetPINValue+0x10e>
		 	{
		 		 switch(Copy_u8Port)
 6a4:	8a 81       	ldd	r24, Y+2	; 0x02
 6a6:	28 2f       	mov	r18, r24
 6a8:	30 e0       	ldi	r19, 0x00	; 0
 6aa:	3f 83       	std	Y+7, r19	; 0x07
 6ac:	2e 83       	std	Y+6, r18	; 0x06
 6ae:	4e 81       	ldd	r20, Y+6	; 0x06
 6b0:	5f 81       	ldd	r21, Y+7	; 0x07
 6b2:	42 30       	cpi	r20, 0x02	; 2
 6b4:	51 05       	cpc	r21, r1
 6b6:	59 f1       	breq	.+86     	; 0x70e <DIO_enumGetPINValue+0x92>
 6b8:	8e 81       	ldd	r24, Y+6	; 0x06
 6ba:	9f 81       	ldd	r25, Y+7	; 0x07
 6bc:	83 30       	cpi	r24, 0x03	; 3
 6be:	91 05       	cpc	r25, r1
 6c0:	34 f4       	brge	.+12     	; 0x6ce <DIO_enumGetPINValue+0x52>
 6c2:	2e 81       	ldd	r18, Y+6	; 0x06
 6c4:	3f 81       	ldd	r19, Y+7	; 0x07
 6c6:	21 30       	cpi	r18, 0x01	; 1
 6c8:	31 05       	cpc	r19, r1
 6ca:	69 f0       	breq	.+26     	; 0x6e6 <DIO_enumGetPINValue+0x6a>
 6cc:	5c c0       	rjmp	.+184    	; 0x786 <DIO_enumGetPINValue+0x10a>
 6ce:	4e 81       	ldd	r20, Y+6	; 0x06
 6d0:	5f 81       	ldd	r21, Y+7	; 0x07
 6d2:	43 30       	cpi	r20, 0x03	; 3
 6d4:	51 05       	cpc	r21, r1
 6d6:	79 f1       	breq	.+94     	; 0x736 <DIO_enumGetPINValue+0xba>
 6d8:	8e 81       	ldd	r24, Y+6	; 0x06
 6da:	9f 81       	ldd	r25, Y+7	; 0x07
 6dc:	84 30       	cpi	r24, 0x04	; 4
 6de:	91 05       	cpc	r25, r1
 6e0:	09 f4       	brne	.+2      	; 0x6e4 <DIO_enumGetPINValue+0x68>
 6e2:	3d c0       	rjmp	.+122    	; 0x75e <DIO_enumGetPINValue+0xe2>
 6e4:	50 c0       	rjmp	.+160    	; 0x786 <DIO_enumGetPINValue+0x10a>
		 		    {
		 		case DIO_PORTA: *Copy_ptrData = GET_BIT(PINA_REG,Copy_u8PINNumber);
 6e6:	e9 e3       	ldi	r30, 0x39	; 57
 6e8:	f0 e0       	ldi	r31, 0x00	; 0
 6ea:	80 81       	ld	r24, Z
 6ec:	28 2f       	mov	r18, r24
 6ee:	30 e0       	ldi	r19, 0x00	; 0
 6f0:	8b 81       	ldd	r24, Y+3	; 0x03
 6f2:	88 2f       	mov	r24, r24
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	a9 01       	movw	r20, r18
 6f8:	02 c0       	rjmp	.+4      	; 0x6fe <DIO_enumGetPINValue+0x82>
 6fa:	55 95       	asr	r21
 6fc:	47 95       	ror	r20
 6fe:	8a 95       	dec	r24
 700:	e2 f7       	brpl	.-8      	; 0x6fa <DIO_enumGetPINValue+0x7e>
 702:	ca 01       	movw	r24, r20
 704:	81 70       	andi	r24, 0x01	; 1
 706:	ec 81       	ldd	r30, Y+4	; 0x04
 708:	fd 81       	ldd	r31, Y+5	; 0x05
 70a:	80 83       	st	Z, r24
 70c:	3f c0       	rjmp	.+126    	; 0x78c <DIO_enumGetPINValue+0x110>
		 			break;
		 		case DIO_PORTB: *Copy_ptrData = GET_BIT(PINB_REG,Copy_u8PINNumber);
 70e:	e6 e3       	ldi	r30, 0x36	; 54
 710:	f0 e0       	ldi	r31, 0x00	; 0
 712:	80 81       	ld	r24, Z
 714:	28 2f       	mov	r18, r24
 716:	30 e0       	ldi	r19, 0x00	; 0
 718:	8b 81       	ldd	r24, Y+3	; 0x03
 71a:	88 2f       	mov	r24, r24
 71c:	90 e0       	ldi	r25, 0x00	; 0
 71e:	a9 01       	movw	r20, r18
 720:	02 c0       	rjmp	.+4      	; 0x726 <DIO_enumGetPINValue+0xaa>
 722:	55 95       	asr	r21
 724:	47 95       	ror	r20
 726:	8a 95       	dec	r24
 728:	e2 f7       	brpl	.-8      	; 0x722 <DIO_enumGetPINValue+0xa6>
 72a:	ca 01       	movw	r24, r20
 72c:	81 70       	andi	r24, 0x01	; 1
 72e:	ec 81       	ldd	r30, Y+4	; 0x04
 730:	fd 81       	ldd	r31, Y+5	; 0x05
 732:	80 83       	st	Z, r24
 734:	2b c0       	rjmp	.+86     	; 0x78c <DIO_enumGetPINValue+0x110>
		 					break;
		 		case DIO_PORTC: *Copy_ptrData = GET_BIT(PINC_REG,Copy_u8PINNumber);
 736:	e3 e3       	ldi	r30, 0x33	; 51
 738:	f0 e0       	ldi	r31, 0x00	; 0
 73a:	80 81       	ld	r24, Z
 73c:	28 2f       	mov	r18, r24
 73e:	30 e0       	ldi	r19, 0x00	; 0
 740:	8b 81       	ldd	r24, Y+3	; 0x03
 742:	88 2f       	mov	r24, r24
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	a9 01       	movw	r20, r18
 748:	02 c0       	rjmp	.+4      	; 0x74e <DIO_enumGetPINValue+0xd2>
 74a:	55 95       	asr	r21
 74c:	47 95       	ror	r20
 74e:	8a 95       	dec	r24
 750:	e2 f7       	brpl	.-8      	; 0x74a <DIO_enumGetPINValue+0xce>
 752:	ca 01       	movw	r24, r20
 754:	81 70       	andi	r24, 0x01	; 1
 756:	ec 81       	ldd	r30, Y+4	; 0x04
 758:	fd 81       	ldd	r31, Y+5	; 0x05
 75a:	80 83       	st	Z, r24
 75c:	17 c0       	rjmp	.+46     	; 0x78c <DIO_enumGetPINValue+0x110>
		 					break;
		 		case DIO_PORTD: *Copy_ptrData = GET_BIT(PIND_REG,Copy_u8PINNumber);
 75e:	e0 e3       	ldi	r30, 0x30	; 48
 760:	f0 e0       	ldi	r31, 0x00	; 0
 762:	80 81       	ld	r24, Z
 764:	28 2f       	mov	r18, r24
 766:	30 e0       	ldi	r19, 0x00	; 0
 768:	8b 81       	ldd	r24, Y+3	; 0x03
 76a:	88 2f       	mov	r24, r24
 76c:	90 e0       	ldi	r25, 0x00	; 0
 76e:	a9 01       	movw	r20, r18
 770:	02 c0       	rjmp	.+4      	; 0x776 <DIO_enumGetPINValue+0xfa>
 772:	55 95       	asr	r21
 774:	47 95       	ror	r20
 776:	8a 95       	dec	r24
 778:	e2 f7       	brpl	.-8      	; 0x772 <DIO_enumGetPINValue+0xf6>
 77a:	ca 01       	movw	r24, r20
 77c:	81 70       	andi	r24, 0x01	; 1
 77e:	ec 81       	ldd	r30, Y+4	; 0x04
 780:	fd 81       	ldd	r31, Y+5	; 0x05
 782:	80 83       	st	Z, r24
 784:	03 c0       	rjmp	.+6      	; 0x78c <DIO_enumGetPINValue+0x110>
		 					break;
		 		default:
		 			LOC_enumState =DIO_NOK;
 786:	19 82       	std	Y+1, r1	; 0x01
 788:	01 c0       	rjmp	.+2      	; 0x78c <DIO_enumGetPINValue+0x110>
		 			break;

		 		    }
		 	}
	 else {
		 LOC_enumState = DIO_NOK;
 78a:	19 82       	std	Y+1, r1	; 0x01
	}

	 return LOC_enumState;
 78c:	89 81       	ldd	r24, Y+1	; 0x01
 }
 78e:	27 96       	adiw	r28, 0x07	; 7
 790:	0f b6       	in	r0, 0x3f	; 63
 792:	f8 94       	cli
 794:	de bf       	out	0x3e, r29	; 62
 796:	0f be       	out	0x3f, r0	; 63
 798:	cd bf       	out	0x3d, r28	; 61
 79a:	cf 91       	pop	r28
 79c:	df 91       	pop	r29
 79e:	08 95       	ret

000007a0 <DIO_Delay>:
#include "LIB/STD_TYPES.h"
#include "LIB/BIT_MATH.h"
#include "DIO_private.h"
#include "DIO_interface.h"
void DIO_Delay(u32 ticks)
{
 7a0:	df 93       	push	r29
 7a2:	cf 93       	push	r28
 7a4:	cd b7       	in	r28, 0x3d	; 61
 7a6:	de b7       	in	r29, 0x3e	; 62
 7a8:	28 97       	sbiw	r28, 0x08	; 8
 7aa:	0f b6       	in	r0, 0x3f	; 63
 7ac:	f8 94       	cli
 7ae:	de bf       	out	0x3e, r29	; 62
 7b0:	0f be       	out	0x3f, r0	; 63
 7b2:	cd bf       	out	0x3d, r28	; 61
 7b4:	6d 83       	std	Y+5, r22	; 0x05
 7b6:	7e 83       	std	Y+6, r23	; 0x06
 7b8:	8f 83       	std	Y+7, r24	; 0x07
 7ba:	98 87       	std	Y+8, r25	; 0x08
u32 x;
for(x=0;x<ticks;x++);
 7bc:	19 82       	std	Y+1, r1	; 0x01
 7be:	1a 82       	std	Y+2, r1	; 0x02
 7c0:	1b 82       	std	Y+3, r1	; 0x03
 7c2:	1c 82       	std	Y+4, r1	; 0x04
 7c4:	0b c0       	rjmp	.+22     	; 0x7dc <DIO_Delay+0x3c>
 7c6:	89 81       	ldd	r24, Y+1	; 0x01
 7c8:	9a 81       	ldd	r25, Y+2	; 0x02
 7ca:	ab 81       	ldd	r26, Y+3	; 0x03
 7cc:	bc 81       	ldd	r27, Y+4	; 0x04
 7ce:	01 96       	adiw	r24, 0x01	; 1
 7d0:	a1 1d       	adc	r26, r1
 7d2:	b1 1d       	adc	r27, r1
 7d4:	89 83       	std	Y+1, r24	; 0x01
 7d6:	9a 83       	std	Y+2, r25	; 0x02
 7d8:	ab 83       	std	Y+3, r26	; 0x03
 7da:	bc 83       	std	Y+4, r27	; 0x04
 7dc:	29 81       	ldd	r18, Y+1	; 0x01
 7de:	3a 81       	ldd	r19, Y+2	; 0x02
 7e0:	4b 81       	ldd	r20, Y+3	; 0x03
 7e2:	5c 81       	ldd	r21, Y+4	; 0x04
 7e4:	8d 81       	ldd	r24, Y+5	; 0x05
 7e6:	9e 81       	ldd	r25, Y+6	; 0x06
 7e8:	af 81       	ldd	r26, Y+7	; 0x07
 7ea:	b8 85       	ldd	r27, Y+8	; 0x08
 7ec:	28 17       	cp	r18, r24
 7ee:	39 07       	cpc	r19, r25
 7f0:	4a 07       	cpc	r20, r26
 7f2:	5b 07       	cpc	r21, r27
 7f4:	40 f3       	brcs	.-48     	; 0x7c6 <DIO_Delay+0x26>

}
 7f6:	28 96       	adiw	r28, 0x08	; 8
 7f8:	0f b6       	in	r0, 0x3f	; 63
 7fa:	f8 94       	cli
 7fc:	de bf       	out	0x3e, r29	; 62
 7fe:	0f be       	out	0x3f, r0	; 63
 800:	cd bf       	out	0x3d, r28	; 61
 802:	cf 91       	pop	r28
 804:	df 91       	pop	r29
 806:	08 95       	ret

00000808 <main>:
int main(void)
{
 808:	df 93       	push	r29
 80a:	cf 93       	push	r28
 80c:	0f 92       	push	r0
 80e:	cd b7       	in	r28, 0x3d	; 61
 810:	de b7       	in	r29, 0x3e	; 62
	DIO_enumSetPortDirection(DIO_PORTA,DIO_OUTPUT);
 812:	81 e0       	ldi	r24, 0x01	; 1
 814:	61 e0       	ldi	r22, 0x01	; 1
 816:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_enumSetPortDirection>
	DIO_enumSetPortDirection(DIO_PORTD,DIO_INPUT);
 81a:	84 e0       	ldi	r24, 0x04	; 4
 81c:	60 e0       	ldi	r22, 0x00	; 0
 81e:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_enumSetPortDirection>
	DIO_enumSetPortValue(DIO_PORTD,DIO_HIGH);
 822:	84 e0       	ldi	r24, 0x04	; 4
 824:	61 e0       	ldi	r22, 0x01	; 1
 826:	0e 94 af 00 	call	0x15e	; 0x15e <DIO_enumSetPortValue>
	u8 input=0;
 82a:	19 82       	std	Y+1, r1	; 0x01
	while(1)
	{
		DIO_enumGetPINValue(DIO_PORTD,DIO_PIN0,&input);
 82c:	84 e0       	ldi	r24, 0x04	; 4
 82e:	60 e0       	ldi	r22, 0x00	; 0
 830:	9e 01       	movw	r18, r28
 832:	2f 5f       	subi	r18, 0xFF	; 255
 834:	3f 4f       	sbci	r19, 0xFF	; 255
 836:	a9 01       	movw	r20, r18
 838:	0e 94 3e 03 	call	0x67c	; 0x67c <DIO_enumGetPINValue>
		if(!input)
 83c:	89 81       	ldd	r24, Y+1	; 0x01
 83e:	88 23       	and	r24, r24
 840:	29 f4       	brne	.+10     	; 0x84c <main+0x44>
		{
			DIO_enumSetPINValue(DIO_PORTA,DIO_PIN4,DIO_HIGH);
 842:	81 e0       	ldi	r24, 0x01	; 1
 844:	64 e0       	ldi	r22, 0x04	; 4
 846:	41 e0       	ldi	r20, 0x01	; 1
 848:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <DIO_enumSetPINValue>

		}
		DIO_enumSetPINValue(DIO_PORTA,DIO_PIN4,DIO_LOW);
 84c:	81 e0       	ldi	r24, 0x01	; 1
 84e:	64 e0       	ldi	r22, 0x04	; 4
 850:	40 e0       	ldi	r20, 0x00	; 0
 852:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <DIO_enumSetPINValue>
 856:	ea cf       	rjmp	.-44     	; 0x82c <main+0x24>

00000858 <_exit>:
 858:	f8 94       	cli

0000085a <__stop_program>:
 85a:	ff cf       	rjmp	.-2      	; 0x85a <__stop_program>
