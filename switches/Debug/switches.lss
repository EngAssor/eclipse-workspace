
switches.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006d6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000007e0  00000000  00000000  0000072c  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000007f9  00000000  00000000  00000f0c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 55 03 	call	0x6aa	; 0x6aa <main>
  64:	0c 94 69 03 	jmp	0x6d2	; 0x6d2 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_VidSetPinDir>:
#include "LIB\Bit_Math.h"
#include "DIO_interface.h"
#include "DIO_prv.h"

void DIO_VidSetPinDir(u8 PinId,u8 PortId,u8 PinDir)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	27 97       	sbiw	r28, 0x07	; 7
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	89 83       	std	Y+1, r24	; 0x01
  82:	6a 83       	std	Y+2, r22	; 0x02
  84:	4b 83       	std	Y+3, r20	; 0x03
if((PortId<=DIO_PORTD)&&(PinId<=DIO_PIN7))
  86:	8a 81       	ldd	r24, Y+2	; 0x02
  88:	84 30       	cpi	r24, 0x04	; 4
  8a:	08 f0       	brcs	.+2      	; 0x8e <DIO_VidSetPinDir+0x22>
  8c:	ee c0       	rjmp	.+476    	; 0x26a <DIO_VidSetPinDir+0x1fe>
  8e:	89 81       	ldd	r24, Y+1	; 0x01
  90:	88 30       	cpi	r24, 0x08	; 8
  92:	08 f0       	brcs	.+2      	; 0x96 <DIO_VidSetPinDir+0x2a>
  94:	ea c0       	rjmp	.+468    	; 0x26a <DIO_VidSetPinDir+0x1fe>
{
if (PinDir == DIO_OUTPUT)
  96:	8b 81       	ldd	r24, Y+3	; 0x03
  98:	81 30       	cpi	r24, 0x01	; 1
  9a:	09 f0       	breq	.+2      	; 0x9e <DIO_VidSetPinDir+0x32>
  9c:	6f c0       	rjmp	.+222    	; 0x17c <DIO_VidSetPinDir+0x110>
{
switch(PortId)
  9e:	8a 81       	ldd	r24, Y+2	; 0x02
  a0:	28 2f       	mov	r18, r24
  a2:	30 e0       	ldi	r19, 0x00	; 0
  a4:	3f 83       	std	Y+7, r19	; 0x07
  a6:	2e 83       	std	Y+6, r18	; 0x06
  a8:	8e 81       	ldd	r24, Y+6	; 0x06
  aa:	9f 81       	ldd	r25, Y+7	; 0x07
  ac:	81 30       	cpi	r24, 0x01	; 1
  ae:	91 05       	cpc	r25, r1
  b0:	49 f1       	breq	.+82     	; 0x104 <DIO_VidSetPinDir+0x98>
  b2:	2e 81       	ldd	r18, Y+6	; 0x06
  b4:	3f 81       	ldd	r19, Y+7	; 0x07
  b6:	22 30       	cpi	r18, 0x02	; 2
  b8:	31 05       	cpc	r19, r1
  ba:	2c f4       	brge	.+10     	; 0xc6 <DIO_VidSetPinDir+0x5a>
  bc:	8e 81       	ldd	r24, Y+6	; 0x06
  be:	9f 81       	ldd	r25, Y+7	; 0x07
  c0:	00 97       	sbiw	r24, 0x00	; 0
  c2:	61 f0       	breq	.+24     	; 0xdc <DIO_VidSetPinDir+0x70>
  c4:	d2 c0       	rjmp	.+420    	; 0x26a <DIO_VidSetPinDir+0x1fe>
  c6:	2e 81       	ldd	r18, Y+6	; 0x06
  c8:	3f 81       	ldd	r19, Y+7	; 0x07
  ca:	22 30       	cpi	r18, 0x02	; 2
  cc:	31 05       	cpc	r19, r1
  ce:	71 f1       	breq	.+92     	; 0x12c <DIO_VidSetPinDir+0xc0>
  d0:	8e 81       	ldd	r24, Y+6	; 0x06
  d2:	9f 81       	ldd	r25, Y+7	; 0x07
  d4:	83 30       	cpi	r24, 0x03	; 3
  d6:	91 05       	cpc	r25, r1
  d8:	e9 f1       	breq	.+122    	; 0x154 <DIO_VidSetPinDir+0xe8>
  da:	c7 c0       	rjmp	.+398    	; 0x26a <DIO_VidSetPinDir+0x1fe>
{
case DIO_PORTA :SET_BIT(DDRA_REG,PinId); break;
  dc:	aa e3       	ldi	r26, 0x3A	; 58
  de:	b0 e0       	ldi	r27, 0x00	; 0
  e0:	ea e3       	ldi	r30, 0x3A	; 58
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	48 2f       	mov	r20, r24
  e8:	89 81       	ldd	r24, Y+1	; 0x01
  ea:	28 2f       	mov	r18, r24
  ec:	30 e0       	ldi	r19, 0x00	; 0
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	02 2e       	mov	r0, r18
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_VidSetPinDir+0x8e>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	0a 94       	dec	r0
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_VidSetPinDir+0x8a>
  fe:	84 2b       	or	r24, r20
 100:	8c 93       	st	X, r24
 102:	b3 c0       	rjmp	.+358    	; 0x26a <DIO_VidSetPinDir+0x1fe>
case DIO_PORTB :SET_BIT(DDRB_REG,PinId); break;
 104:	a7 e3       	ldi	r26, 0x37	; 55
 106:	b0 e0       	ldi	r27, 0x00	; 0
 108:	e7 e3       	ldi	r30, 0x37	; 55
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	80 81       	ld	r24, Z
 10e:	48 2f       	mov	r20, r24
 110:	89 81       	ldd	r24, Y+1	; 0x01
 112:	28 2f       	mov	r18, r24
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	02 2e       	mov	r0, r18
 11c:	02 c0       	rjmp	.+4      	; 0x122 <DIO_VidSetPinDir+0xb6>
 11e:	88 0f       	add	r24, r24
 120:	99 1f       	adc	r25, r25
 122:	0a 94       	dec	r0
 124:	e2 f7       	brpl	.-8      	; 0x11e <DIO_VidSetPinDir+0xb2>
 126:	84 2b       	or	r24, r20
 128:	8c 93       	st	X, r24
 12a:	9f c0       	rjmp	.+318    	; 0x26a <DIO_VidSetPinDir+0x1fe>
case DIO_PORTC :SET_BIT(DDRC_REG,PinId); break;
 12c:	a4 e3       	ldi	r26, 0x34	; 52
 12e:	b0 e0       	ldi	r27, 0x00	; 0
 130:	e4 e3       	ldi	r30, 0x34	; 52
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	48 2f       	mov	r20, r24
 138:	89 81       	ldd	r24, Y+1	; 0x01
 13a:	28 2f       	mov	r18, r24
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	02 2e       	mov	r0, r18
 144:	02 c0       	rjmp	.+4      	; 0x14a <DIO_VidSetPinDir+0xde>
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	0a 94       	dec	r0
 14c:	e2 f7       	brpl	.-8      	; 0x146 <DIO_VidSetPinDir+0xda>
 14e:	84 2b       	or	r24, r20
 150:	8c 93       	st	X, r24
 152:	8b c0       	rjmp	.+278    	; 0x26a <DIO_VidSetPinDir+0x1fe>
case DIO_PORTD :SET_BIT(DDRD_REG,PinId); break;
 154:	a1 e3       	ldi	r26, 0x31	; 49
 156:	b0 e0       	ldi	r27, 0x00	; 0
 158:	e1 e3       	ldi	r30, 0x31	; 49
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	48 2f       	mov	r20, r24
 160:	89 81       	ldd	r24, Y+1	; 0x01
 162:	28 2f       	mov	r18, r24
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	02 2e       	mov	r0, r18
 16c:	02 c0       	rjmp	.+4      	; 0x172 <DIO_VidSetPinDir+0x106>
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	0a 94       	dec	r0
 174:	e2 f7       	brpl	.-8      	; 0x16e <DIO_VidSetPinDir+0x102>
 176:	84 2b       	or	r24, r20
 178:	8c 93       	st	X, r24
 17a:	77 c0       	rjmp	.+238    	; 0x26a <DIO_VidSetPinDir+0x1fe>

}


}
else if (PinDir == DIO_INPUT)
 17c:	8b 81       	ldd	r24, Y+3	; 0x03
 17e:	88 23       	and	r24, r24
 180:	09 f0       	breq	.+2      	; 0x184 <DIO_VidSetPinDir+0x118>
 182:	73 c0       	rjmp	.+230    	; 0x26a <DIO_VidSetPinDir+0x1fe>
{
switch(PortId)
 184:	8a 81       	ldd	r24, Y+2	; 0x02
 186:	28 2f       	mov	r18, r24
 188:	30 e0       	ldi	r19, 0x00	; 0
 18a:	3d 83       	std	Y+5, r19	; 0x05
 18c:	2c 83       	std	Y+4, r18	; 0x04
 18e:	8c 81       	ldd	r24, Y+4	; 0x04
 190:	9d 81       	ldd	r25, Y+5	; 0x05
 192:	81 30       	cpi	r24, 0x01	; 1
 194:	91 05       	cpc	r25, r1
 196:	59 f1       	breq	.+86     	; 0x1ee <DIO_VidSetPinDir+0x182>
 198:	2c 81       	ldd	r18, Y+4	; 0x04
 19a:	3d 81       	ldd	r19, Y+5	; 0x05
 19c:	22 30       	cpi	r18, 0x02	; 2
 19e:	31 05       	cpc	r19, r1
 1a0:	2c f4       	brge	.+10     	; 0x1ac <DIO_VidSetPinDir+0x140>
 1a2:	8c 81       	ldd	r24, Y+4	; 0x04
 1a4:	9d 81       	ldd	r25, Y+5	; 0x05
 1a6:	00 97       	sbiw	r24, 0x00	; 0
 1a8:	69 f0       	breq	.+26     	; 0x1c4 <DIO_VidSetPinDir+0x158>
 1aa:	5f c0       	rjmp	.+190    	; 0x26a <DIO_VidSetPinDir+0x1fe>
 1ac:	2c 81       	ldd	r18, Y+4	; 0x04
 1ae:	3d 81       	ldd	r19, Y+5	; 0x05
 1b0:	22 30       	cpi	r18, 0x02	; 2
 1b2:	31 05       	cpc	r19, r1
 1b4:	89 f1       	breq	.+98     	; 0x218 <DIO_VidSetPinDir+0x1ac>
 1b6:	8c 81       	ldd	r24, Y+4	; 0x04
 1b8:	9d 81       	ldd	r25, Y+5	; 0x05
 1ba:	83 30       	cpi	r24, 0x03	; 3
 1bc:	91 05       	cpc	r25, r1
 1be:	09 f4       	brne	.+2      	; 0x1c2 <DIO_VidSetPinDir+0x156>
 1c0:	40 c0       	rjmp	.+128    	; 0x242 <DIO_VidSetPinDir+0x1d6>
 1c2:	53 c0       	rjmp	.+166    	; 0x26a <DIO_VidSetPinDir+0x1fe>
{
case DIO_PORTA :CLR_BIT(DDRA_REG,PinId); break;
 1c4:	aa e3       	ldi	r26, 0x3A	; 58
 1c6:	b0 e0       	ldi	r27, 0x00	; 0
 1c8:	ea e3       	ldi	r30, 0x3A	; 58
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	80 81       	ld	r24, Z
 1ce:	48 2f       	mov	r20, r24
 1d0:	89 81       	ldd	r24, Y+1	; 0x01
 1d2:	28 2f       	mov	r18, r24
 1d4:	30 e0       	ldi	r19, 0x00	; 0
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	02 2e       	mov	r0, r18
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <DIO_VidSetPinDir+0x176>
 1de:	88 0f       	add	r24, r24
 1e0:	99 1f       	adc	r25, r25
 1e2:	0a 94       	dec	r0
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <DIO_VidSetPinDir+0x172>
 1e6:	80 95       	com	r24
 1e8:	84 23       	and	r24, r20
 1ea:	8c 93       	st	X, r24
 1ec:	3e c0       	rjmp	.+124    	; 0x26a <DIO_VidSetPinDir+0x1fe>
case DIO_PORTB :CLR_BIT(DDRB_REG,PinId); break;
 1ee:	a7 e3       	ldi	r26, 0x37	; 55
 1f0:	b0 e0       	ldi	r27, 0x00	; 0
 1f2:	e7 e3       	ldi	r30, 0x37	; 55
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	80 81       	ld	r24, Z
 1f8:	48 2f       	mov	r20, r24
 1fa:	89 81       	ldd	r24, Y+1	; 0x01
 1fc:	28 2f       	mov	r18, r24
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 2e       	mov	r0, r18
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_VidSetPinDir+0x1a0>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	0a 94       	dec	r0
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_VidSetPinDir+0x19c>
 210:	80 95       	com	r24
 212:	84 23       	and	r24, r20
 214:	8c 93       	st	X, r24
 216:	29 c0       	rjmp	.+82     	; 0x26a <DIO_VidSetPinDir+0x1fe>
case DIO_PORTC :CLR_BIT(DDRC_REG,PinId); break;
 218:	a4 e3       	ldi	r26, 0x34	; 52
 21a:	b0 e0       	ldi	r27, 0x00	; 0
 21c:	e4 e3       	ldi	r30, 0x34	; 52
 21e:	f0 e0       	ldi	r31, 0x00	; 0
 220:	80 81       	ld	r24, Z
 222:	48 2f       	mov	r20, r24
 224:	89 81       	ldd	r24, Y+1	; 0x01
 226:	28 2f       	mov	r18, r24
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	02 2e       	mov	r0, r18
 230:	02 c0       	rjmp	.+4      	; 0x236 <DIO_VidSetPinDir+0x1ca>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	0a 94       	dec	r0
 238:	e2 f7       	brpl	.-8      	; 0x232 <DIO_VidSetPinDir+0x1c6>
 23a:	80 95       	com	r24
 23c:	84 23       	and	r24, r20
 23e:	8c 93       	st	X, r24
 240:	14 c0       	rjmp	.+40     	; 0x26a <DIO_VidSetPinDir+0x1fe>
case DIO_PORTD :CLR_BIT(DDRD_REG,PinId); break;
 242:	a1 e3       	ldi	r26, 0x31	; 49
 244:	b0 e0       	ldi	r27, 0x00	; 0
 246:	e1 e3       	ldi	r30, 0x31	; 49
 248:	f0 e0       	ldi	r31, 0x00	; 0
 24a:	80 81       	ld	r24, Z
 24c:	48 2f       	mov	r20, r24
 24e:	89 81       	ldd	r24, Y+1	; 0x01
 250:	28 2f       	mov	r18, r24
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	02 2e       	mov	r0, r18
 25a:	02 c0       	rjmp	.+4      	; 0x260 <DIO_VidSetPinDir+0x1f4>
 25c:	88 0f       	add	r24, r24
 25e:	99 1f       	adc	r25, r25
 260:	0a 94       	dec	r0
 262:	e2 f7       	brpl	.-8      	; 0x25c <DIO_VidSetPinDir+0x1f0>
 264:	80 95       	com	r24
 266:	84 23       	and	r24, r20
 268:	8c 93       	st	X, r24
}
else
{
// error
}
}
 26a:	27 96       	adiw	r28, 0x07	; 7
 26c:	0f b6       	in	r0, 0x3f	; 63
 26e:	f8 94       	cli
 270:	de bf       	out	0x3e, r29	; 62
 272:	0f be       	out	0x3f, r0	; 63
 274:	cd bf       	out	0x3d, r28	; 61
 276:	cf 91       	pop	r28
 278:	df 91       	pop	r29
 27a:	08 95       	ret

0000027c <DIO_VidSetPinVal>:
void DIO_VidSetPinVal(u8 PinId,u8 PortId,u8 PinVal)
{
 27c:	df 93       	push	r29
 27e:	cf 93       	push	r28
 280:	cd b7       	in	r28, 0x3d	; 61
 282:	de b7       	in	r29, 0x3e	; 62
 284:	27 97       	sbiw	r28, 0x07	; 7
 286:	0f b6       	in	r0, 0x3f	; 63
 288:	f8 94       	cli
 28a:	de bf       	out	0x3e, r29	; 62
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	cd bf       	out	0x3d, r28	; 61
 290:	89 83       	std	Y+1, r24	; 0x01
 292:	6a 83       	std	Y+2, r22	; 0x02
 294:	4b 83       	std	Y+3, r20	; 0x03
	if((PortId<=DIO_PORTD)&&(PinId<=DIO_PIN7))
 296:	8a 81       	ldd	r24, Y+2	; 0x02
 298:	84 30       	cpi	r24, 0x04	; 4
 29a:	08 f0       	brcs	.+2      	; 0x29e <DIO_VidSetPinVal+0x22>
 29c:	ee c0       	rjmp	.+476    	; 0x47a <DIO_VidSetPinVal+0x1fe>
 29e:	89 81       	ldd	r24, Y+1	; 0x01
 2a0:	88 30       	cpi	r24, 0x08	; 8
 2a2:	08 f0       	brcs	.+2      	; 0x2a6 <DIO_VidSetPinVal+0x2a>
 2a4:	ea c0       	rjmp	.+468    	; 0x47a <DIO_VidSetPinVal+0x1fe>
	{
	if (PinVal == DIO_OUTPUT)
 2a6:	8b 81       	ldd	r24, Y+3	; 0x03
 2a8:	81 30       	cpi	r24, 0x01	; 1
 2aa:	09 f0       	breq	.+2      	; 0x2ae <DIO_VidSetPinVal+0x32>
 2ac:	6f c0       	rjmp	.+222    	; 0x38c <DIO_VidSetPinVal+0x110>
	{
	switch(PortId)
 2ae:	8a 81       	ldd	r24, Y+2	; 0x02
 2b0:	28 2f       	mov	r18, r24
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	3f 83       	std	Y+7, r19	; 0x07
 2b6:	2e 83       	std	Y+6, r18	; 0x06
 2b8:	8e 81       	ldd	r24, Y+6	; 0x06
 2ba:	9f 81       	ldd	r25, Y+7	; 0x07
 2bc:	81 30       	cpi	r24, 0x01	; 1
 2be:	91 05       	cpc	r25, r1
 2c0:	49 f1       	breq	.+82     	; 0x314 <DIO_VidSetPinVal+0x98>
 2c2:	2e 81       	ldd	r18, Y+6	; 0x06
 2c4:	3f 81       	ldd	r19, Y+7	; 0x07
 2c6:	22 30       	cpi	r18, 0x02	; 2
 2c8:	31 05       	cpc	r19, r1
 2ca:	2c f4       	brge	.+10     	; 0x2d6 <DIO_VidSetPinVal+0x5a>
 2cc:	8e 81       	ldd	r24, Y+6	; 0x06
 2ce:	9f 81       	ldd	r25, Y+7	; 0x07
 2d0:	00 97       	sbiw	r24, 0x00	; 0
 2d2:	61 f0       	breq	.+24     	; 0x2ec <DIO_VidSetPinVal+0x70>
 2d4:	d2 c0       	rjmp	.+420    	; 0x47a <DIO_VidSetPinVal+0x1fe>
 2d6:	2e 81       	ldd	r18, Y+6	; 0x06
 2d8:	3f 81       	ldd	r19, Y+7	; 0x07
 2da:	22 30       	cpi	r18, 0x02	; 2
 2dc:	31 05       	cpc	r19, r1
 2de:	71 f1       	breq	.+92     	; 0x33c <DIO_VidSetPinVal+0xc0>
 2e0:	8e 81       	ldd	r24, Y+6	; 0x06
 2e2:	9f 81       	ldd	r25, Y+7	; 0x07
 2e4:	83 30       	cpi	r24, 0x03	; 3
 2e6:	91 05       	cpc	r25, r1
 2e8:	e9 f1       	breq	.+122    	; 0x364 <DIO_VidSetPinVal+0xe8>
 2ea:	c7 c0       	rjmp	.+398    	; 0x47a <DIO_VidSetPinVal+0x1fe>
	{
	case DIO_PORTA :SET_BIT(PORTA_REG,PinId);break;
 2ec:	ab e3       	ldi	r26, 0x3B	; 59
 2ee:	b0 e0       	ldi	r27, 0x00	; 0
 2f0:	eb e3       	ldi	r30, 0x3B	; 59
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	80 81       	ld	r24, Z
 2f6:	48 2f       	mov	r20, r24
 2f8:	89 81       	ldd	r24, Y+1	; 0x01
 2fa:	28 2f       	mov	r18, r24
 2fc:	30 e0       	ldi	r19, 0x00	; 0
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	02 2e       	mov	r0, r18
 304:	02 c0       	rjmp	.+4      	; 0x30a <DIO_VidSetPinVal+0x8e>
 306:	88 0f       	add	r24, r24
 308:	99 1f       	adc	r25, r25
 30a:	0a 94       	dec	r0
 30c:	e2 f7       	brpl	.-8      	; 0x306 <DIO_VidSetPinVal+0x8a>
 30e:	84 2b       	or	r24, r20
 310:	8c 93       	st	X, r24
 312:	b3 c0       	rjmp	.+358    	; 0x47a <DIO_VidSetPinVal+0x1fe>
	case DIO_PORTB :SET_BIT(PORTB_REG,PinId); break;
 314:	a8 e3       	ldi	r26, 0x38	; 56
 316:	b0 e0       	ldi	r27, 0x00	; 0
 318:	e8 e3       	ldi	r30, 0x38	; 56
 31a:	f0 e0       	ldi	r31, 0x00	; 0
 31c:	80 81       	ld	r24, Z
 31e:	48 2f       	mov	r20, r24
 320:	89 81       	ldd	r24, Y+1	; 0x01
 322:	28 2f       	mov	r18, r24
 324:	30 e0       	ldi	r19, 0x00	; 0
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	02 2e       	mov	r0, r18
 32c:	02 c0       	rjmp	.+4      	; 0x332 <DIO_VidSetPinVal+0xb6>
 32e:	88 0f       	add	r24, r24
 330:	99 1f       	adc	r25, r25
 332:	0a 94       	dec	r0
 334:	e2 f7       	brpl	.-8      	; 0x32e <DIO_VidSetPinVal+0xb2>
 336:	84 2b       	or	r24, r20
 338:	8c 93       	st	X, r24
 33a:	9f c0       	rjmp	.+318    	; 0x47a <DIO_VidSetPinVal+0x1fe>
	case DIO_PORTC :SET_BIT(PORTC_REG,PinId); break;
 33c:	a5 e3       	ldi	r26, 0x35	; 53
 33e:	b0 e0       	ldi	r27, 0x00	; 0
 340:	e5 e3       	ldi	r30, 0x35	; 53
 342:	f0 e0       	ldi	r31, 0x00	; 0
 344:	80 81       	ld	r24, Z
 346:	48 2f       	mov	r20, r24
 348:	89 81       	ldd	r24, Y+1	; 0x01
 34a:	28 2f       	mov	r18, r24
 34c:	30 e0       	ldi	r19, 0x00	; 0
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	02 2e       	mov	r0, r18
 354:	02 c0       	rjmp	.+4      	; 0x35a <DIO_VidSetPinVal+0xde>
 356:	88 0f       	add	r24, r24
 358:	99 1f       	adc	r25, r25
 35a:	0a 94       	dec	r0
 35c:	e2 f7       	brpl	.-8      	; 0x356 <DIO_VidSetPinVal+0xda>
 35e:	84 2b       	or	r24, r20
 360:	8c 93       	st	X, r24
 362:	8b c0       	rjmp	.+278    	; 0x47a <DIO_VidSetPinVal+0x1fe>
	case DIO_PORTD :SET_BIT(PORTD_REG,PinId);break;
 364:	a2 e3       	ldi	r26, 0x32	; 50
 366:	b0 e0       	ldi	r27, 0x00	; 0
 368:	e2 e3       	ldi	r30, 0x32	; 50
 36a:	f0 e0       	ldi	r31, 0x00	; 0
 36c:	80 81       	ld	r24, Z
 36e:	48 2f       	mov	r20, r24
 370:	89 81       	ldd	r24, Y+1	; 0x01
 372:	28 2f       	mov	r18, r24
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	02 2e       	mov	r0, r18
 37c:	02 c0       	rjmp	.+4      	; 0x382 <DIO_VidSetPinVal+0x106>
 37e:	88 0f       	add	r24, r24
 380:	99 1f       	adc	r25, r25
 382:	0a 94       	dec	r0
 384:	e2 f7       	brpl	.-8      	; 0x37e <DIO_VidSetPinVal+0x102>
 386:	84 2b       	or	r24, r20
 388:	8c 93       	st	X, r24
 38a:	77 c0       	rjmp	.+238    	; 0x47a <DIO_VidSetPinVal+0x1fe>

	}


	}
	else if (PinVal == DIO_INPUT)
 38c:	8b 81       	ldd	r24, Y+3	; 0x03
 38e:	88 23       	and	r24, r24
 390:	09 f0       	breq	.+2      	; 0x394 <DIO_VidSetPinVal+0x118>
 392:	73 c0       	rjmp	.+230    	; 0x47a <DIO_VidSetPinVal+0x1fe>
	{
	switch(PortId)
 394:	8a 81       	ldd	r24, Y+2	; 0x02
 396:	28 2f       	mov	r18, r24
 398:	30 e0       	ldi	r19, 0x00	; 0
 39a:	3d 83       	std	Y+5, r19	; 0x05
 39c:	2c 83       	std	Y+4, r18	; 0x04
 39e:	8c 81       	ldd	r24, Y+4	; 0x04
 3a0:	9d 81       	ldd	r25, Y+5	; 0x05
 3a2:	81 30       	cpi	r24, 0x01	; 1
 3a4:	91 05       	cpc	r25, r1
 3a6:	59 f1       	breq	.+86     	; 0x3fe <DIO_VidSetPinVal+0x182>
 3a8:	2c 81       	ldd	r18, Y+4	; 0x04
 3aa:	3d 81       	ldd	r19, Y+5	; 0x05
 3ac:	22 30       	cpi	r18, 0x02	; 2
 3ae:	31 05       	cpc	r19, r1
 3b0:	2c f4       	brge	.+10     	; 0x3bc <DIO_VidSetPinVal+0x140>
 3b2:	8c 81       	ldd	r24, Y+4	; 0x04
 3b4:	9d 81       	ldd	r25, Y+5	; 0x05
 3b6:	00 97       	sbiw	r24, 0x00	; 0
 3b8:	69 f0       	breq	.+26     	; 0x3d4 <DIO_VidSetPinVal+0x158>
 3ba:	5f c0       	rjmp	.+190    	; 0x47a <DIO_VidSetPinVal+0x1fe>
 3bc:	2c 81       	ldd	r18, Y+4	; 0x04
 3be:	3d 81       	ldd	r19, Y+5	; 0x05
 3c0:	22 30       	cpi	r18, 0x02	; 2
 3c2:	31 05       	cpc	r19, r1
 3c4:	89 f1       	breq	.+98     	; 0x428 <DIO_VidSetPinVal+0x1ac>
 3c6:	8c 81       	ldd	r24, Y+4	; 0x04
 3c8:	9d 81       	ldd	r25, Y+5	; 0x05
 3ca:	83 30       	cpi	r24, 0x03	; 3
 3cc:	91 05       	cpc	r25, r1
 3ce:	09 f4       	brne	.+2      	; 0x3d2 <DIO_VidSetPinVal+0x156>
 3d0:	40 c0       	rjmp	.+128    	; 0x452 <DIO_VidSetPinVal+0x1d6>
 3d2:	53 c0       	rjmp	.+166    	; 0x47a <DIO_VidSetPinVal+0x1fe>
	{
	case DIO_PORTA :CLR_BIT(PORTA_REG,PinId); break;
 3d4:	ab e3       	ldi	r26, 0x3B	; 59
 3d6:	b0 e0       	ldi	r27, 0x00	; 0
 3d8:	eb e3       	ldi	r30, 0x3B	; 59
 3da:	f0 e0       	ldi	r31, 0x00	; 0
 3dc:	80 81       	ld	r24, Z
 3de:	48 2f       	mov	r20, r24
 3e0:	89 81       	ldd	r24, Y+1	; 0x01
 3e2:	28 2f       	mov	r18, r24
 3e4:	30 e0       	ldi	r19, 0x00	; 0
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	90 e0       	ldi	r25, 0x00	; 0
 3ea:	02 2e       	mov	r0, r18
 3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <DIO_VidSetPinVal+0x176>
 3ee:	88 0f       	add	r24, r24
 3f0:	99 1f       	adc	r25, r25
 3f2:	0a 94       	dec	r0
 3f4:	e2 f7       	brpl	.-8      	; 0x3ee <DIO_VidSetPinVal+0x172>
 3f6:	80 95       	com	r24
 3f8:	84 23       	and	r24, r20
 3fa:	8c 93       	st	X, r24
 3fc:	3e c0       	rjmp	.+124    	; 0x47a <DIO_VidSetPinVal+0x1fe>
	case DIO_PORTB :CLR_BIT(PORTB_REG,PinId);break;
 3fe:	a8 e3       	ldi	r26, 0x38	; 56
 400:	b0 e0       	ldi	r27, 0x00	; 0
 402:	e8 e3       	ldi	r30, 0x38	; 56
 404:	f0 e0       	ldi	r31, 0x00	; 0
 406:	80 81       	ld	r24, Z
 408:	48 2f       	mov	r20, r24
 40a:	89 81       	ldd	r24, Y+1	; 0x01
 40c:	28 2f       	mov	r18, r24
 40e:	30 e0       	ldi	r19, 0x00	; 0
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	02 2e       	mov	r0, r18
 416:	02 c0       	rjmp	.+4      	; 0x41c <DIO_VidSetPinVal+0x1a0>
 418:	88 0f       	add	r24, r24
 41a:	99 1f       	adc	r25, r25
 41c:	0a 94       	dec	r0
 41e:	e2 f7       	brpl	.-8      	; 0x418 <DIO_VidSetPinVal+0x19c>
 420:	80 95       	com	r24
 422:	84 23       	and	r24, r20
 424:	8c 93       	st	X, r24
 426:	29 c0       	rjmp	.+82     	; 0x47a <DIO_VidSetPinVal+0x1fe>
	case DIO_PORTC :CLR_BIT(PORTC_REG,PinId); break;
 428:	a5 e3       	ldi	r26, 0x35	; 53
 42a:	b0 e0       	ldi	r27, 0x00	; 0
 42c:	e5 e3       	ldi	r30, 0x35	; 53
 42e:	f0 e0       	ldi	r31, 0x00	; 0
 430:	80 81       	ld	r24, Z
 432:	48 2f       	mov	r20, r24
 434:	89 81       	ldd	r24, Y+1	; 0x01
 436:	28 2f       	mov	r18, r24
 438:	30 e0       	ldi	r19, 0x00	; 0
 43a:	81 e0       	ldi	r24, 0x01	; 1
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	02 2e       	mov	r0, r18
 440:	02 c0       	rjmp	.+4      	; 0x446 <DIO_VidSetPinVal+0x1ca>
 442:	88 0f       	add	r24, r24
 444:	99 1f       	adc	r25, r25
 446:	0a 94       	dec	r0
 448:	e2 f7       	brpl	.-8      	; 0x442 <DIO_VidSetPinVal+0x1c6>
 44a:	80 95       	com	r24
 44c:	84 23       	and	r24, r20
 44e:	8c 93       	st	X, r24
 450:	14 c0       	rjmp	.+40     	; 0x47a <DIO_VidSetPinVal+0x1fe>
	case DIO_PORTD :CLR_BIT(PORTD_REG,PinId); break;
 452:	a2 e3       	ldi	r26, 0x32	; 50
 454:	b0 e0       	ldi	r27, 0x00	; 0
 456:	e2 e3       	ldi	r30, 0x32	; 50
 458:	f0 e0       	ldi	r31, 0x00	; 0
 45a:	80 81       	ld	r24, Z
 45c:	48 2f       	mov	r20, r24
 45e:	89 81       	ldd	r24, Y+1	; 0x01
 460:	28 2f       	mov	r18, r24
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	81 e0       	ldi	r24, 0x01	; 1
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	02 2e       	mov	r0, r18
 46a:	02 c0       	rjmp	.+4      	; 0x470 <DIO_VidSetPinVal+0x1f4>
 46c:	88 0f       	add	r24, r24
 46e:	99 1f       	adc	r25, r25
 470:	0a 94       	dec	r0
 472:	e2 f7       	brpl	.-8      	; 0x46c <DIO_VidSetPinVal+0x1f0>
 474:	80 95       	com	r24
 476:	84 23       	and	r24, r20
 478:	8c 93       	st	X, r24
	else
	{
	// error
	}

}
 47a:	27 96       	adiw	r28, 0x07	; 7
 47c:	0f b6       	in	r0, 0x3f	; 63
 47e:	f8 94       	cli
 480:	de bf       	out	0x3e, r29	; 62
 482:	0f be       	out	0x3f, r0	; 63
 484:	cd bf       	out	0x3d, r28	; 61
 486:	cf 91       	pop	r28
 488:	df 91       	pop	r29
 48a:	08 95       	ret

0000048c <DIO_VidSetPortVal>:
void DIO_VidSetPortVal(u8 PortId,u8 PortVal)
{
 48c:	df 93       	push	r29
 48e:	cf 93       	push	r28
 490:	00 d0       	rcall	.+0      	; 0x492 <DIO_VidSetPortVal+0x6>
 492:	00 d0       	rcall	.+0      	; 0x494 <DIO_VidSetPortVal+0x8>
 494:	cd b7       	in	r28, 0x3d	; 61
 496:	de b7       	in	r29, 0x3e	; 62
 498:	89 83       	std	Y+1, r24	; 0x01
 49a:	6a 83       	std	Y+2, r22	; 0x02


		if (PortId <= DIO_PORTD)
 49c:	89 81       	ldd	r24, Y+1	; 0x01
 49e:	84 30       	cpi	r24, 0x04	; 4
 4a0:	90 f5       	brcc	.+100    	; 0x506 <DIO_VidSetPortVal+0x7a>
		{
		switch(PortId)
 4a2:	89 81       	ldd	r24, Y+1	; 0x01
 4a4:	28 2f       	mov	r18, r24
 4a6:	30 e0       	ldi	r19, 0x00	; 0
 4a8:	3c 83       	std	Y+4, r19	; 0x04
 4aa:	2b 83       	std	Y+3, r18	; 0x03
 4ac:	8b 81       	ldd	r24, Y+3	; 0x03
 4ae:	9c 81       	ldd	r25, Y+4	; 0x04
 4b0:	81 30       	cpi	r24, 0x01	; 1
 4b2:	91 05       	cpc	r25, r1
 4b4:	d1 f0       	breq	.+52     	; 0x4ea <DIO_VidSetPortVal+0x5e>
 4b6:	2b 81       	ldd	r18, Y+3	; 0x03
 4b8:	3c 81       	ldd	r19, Y+4	; 0x04
 4ba:	22 30       	cpi	r18, 0x02	; 2
 4bc:	31 05       	cpc	r19, r1
 4be:	2c f4       	brge	.+10     	; 0x4ca <DIO_VidSetPortVal+0x3e>
 4c0:	8b 81       	ldd	r24, Y+3	; 0x03
 4c2:	9c 81       	ldd	r25, Y+4	; 0x04
 4c4:	00 97       	sbiw	r24, 0x00	; 0
 4c6:	61 f0       	breq	.+24     	; 0x4e0 <DIO_VidSetPortVal+0x54>
 4c8:	1e c0       	rjmp	.+60     	; 0x506 <DIO_VidSetPortVal+0x7a>
 4ca:	2b 81       	ldd	r18, Y+3	; 0x03
 4cc:	3c 81       	ldd	r19, Y+4	; 0x04
 4ce:	22 30       	cpi	r18, 0x02	; 2
 4d0:	31 05       	cpc	r19, r1
 4d2:	81 f0       	breq	.+32     	; 0x4f4 <DIO_VidSetPortVal+0x68>
 4d4:	8b 81       	ldd	r24, Y+3	; 0x03
 4d6:	9c 81       	ldd	r25, Y+4	; 0x04
 4d8:	83 30       	cpi	r24, 0x03	; 3
 4da:	91 05       	cpc	r25, r1
 4dc:	81 f0       	breq	.+32     	; 0x4fe <DIO_VidSetPortVal+0x72>
 4de:	13 c0       	rjmp	.+38     	; 0x506 <DIO_VidSetPortVal+0x7a>
		{
		case DIO_PORTA :PORTA_REG=PortVal; break;
 4e0:	eb e3       	ldi	r30, 0x3B	; 59
 4e2:	f0 e0       	ldi	r31, 0x00	; 0
 4e4:	8a 81       	ldd	r24, Y+2	; 0x02
 4e6:	80 83       	st	Z, r24
 4e8:	0e c0       	rjmp	.+28     	; 0x506 <DIO_VidSetPortVal+0x7a>
		case DIO_PORTB :PORTB_REG=PortVal; break;
 4ea:	e8 e3       	ldi	r30, 0x38	; 56
 4ec:	f0 e0       	ldi	r31, 0x00	; 0
 4ee:	8a 81       	ldd	r24, Y+2	; 0x02
 4f0:	80 83       	st	Z, r24
 4f2:	09 c0       	rjmp	.+18     	; 0x506 <DIO_VidSetPortVal+0x7a>
		case DIO_PORTC :PORTC_REG=PortVal; break;
 4f4:	e5 e3       	ldi	r30, 0x35	; 53
 4f6:	f0 e0       	ldi	r31, 0x00	; 0
 4f8:	8a 81       	ldd	r24, Y+2	; 0x02
 4fa:	80 83       	st	Z, r24
 4fc:	04 c0       	rjmp	.+8      	; 0x506 <DIO_VidSetPortVal+0x7a>
		case DIO_PORTD :PORTD_REG=PortVal; break;
 4fe:	e2 e3       	ldi	r30, 0x32	; 50
 500:	f0 e0       	ldi	r31, 0x00	; 0
 502:	8a 81       	ldd	r24, Y+2	; 0x02
 504:	80 83       	st	Z, r24
		}
	else
		{
		//error
		}
}
 506:	0f 90       	pop	r0
 508:	0f 90       	pop	r0
 50a:	0f 90       	pop	r0
 50c:	0f 90       	pop	r0
 50e:	cf 91       	pop	r28
 510:	df 91       	pop	r29
 512:	08 95       	ret

00000514 <DIO_VidSetPortDir>:


void DIO_VidSetPortDir(u8 PortId,u8 PortDir)
{
 514:	df 93       	push	r29
 516:	cf 93       	push	r28
 518:	00 d0       	rcall	.+0      	; 0x51a <DIO_VidSetPortDir+0x6>
 51a:	00 d0       	rcall	.+0      	; 0x51c <DIO_VidSetPortDir+0x8>
 51c:	cd b7       	in	r28, 0x3d	; 61
 51e:	de b7       	in	r29, 0x3e	; 62
 520:	89 83       	std	Y+1, r24	; 0x01
 522:	6a 83       	std	Y+2, r22	; 0x02
if(PortId<=DIO_PORTD)
 524:	89 81       	ldd	r24, Y+1	; 0x01
 526:	84 30       	cpi	r24, 0x04	; 4
 528:	90 f5       	brcc	.+100    	; 0x58e <DIO_VidSetPortDir+0x7a>
{
switch(PortId)
 52a:	89 81       	ldd	r24, Y+1	; 0x01
 52c:	28 2f       	mov	r18, r24
 52e:	30 e0       	ldi	r19, 0x00	; 0
 530:	3c 83       	std	Y+4, r19	; 0x04
 532:	2b 83       	std	Y+3, r18	; 0x03
 534:	8b 81       	ldd	r24, Y+3	; 0x03
 536:	9c 81       	ldd	r25, Y+4	; 0x04
 538:	81 30       	cpi	r24, 0x01	; 1
 53a:	91 05       	cpc	r25, r1
 53c:	d1 f0       	breq	.+52     	; 0x572 <DIO_VidSetPortDir+0x5e>
 53e:	2b 81       	ldd	r18, Y+3	; 0x03
 540:	3c 81       	ldd	r19, Y+4	; 0x04
 542:	22 30       	cpi	r18, 0x02	; 2
 544:	31 05       	cpc	r19, r1
 546:	2c f4       	brge	.+10     	; 0x552 <DIO_VidSetPortDir+0x3e>
 548:	8b 81       	ldd	r24, Y+3	; 0x03
 54a:	9c 81       	ldd	r25, Y+4	; 0x04
 54c:	00 97       	sbiw	r24, 0x00	; 0
 54e:	61 f0       	breq	.+24     	; 0x568 <DIO_VidSetPortDir+0x54>
 550:	1e c0       	rjmp	.+60     	; 0x58e <DIO_VidSetPortDir+0x7a>
 552:	2b 81       	ldd	r18, Y+3	; 0x03
 554:	3c 81       	ldd	r19, Y+4	; 0x04
 556:	22 30       	cpi	r18, 0x02	; 2
 558:	31 05       	cpc	r19, r1
 55a:	81 f0       	breq	.+32     	; 0x57c <DIO_VidSetPortDir+0x68>
 55c:	8b 81       	ldd	r24, Y+3	; 0x03
 55e:	9c 81       	ldd	r25, Y+4	; 0x04
 560:	83 30       	cpi	r24, 0x03	; 3
 562:	91 05       	cpc	r25, r1
 564:	81 f0       	breq	.+32     	; 0x586 <DIO_VidSetPortDir+0x72>
 566:	13 c0       	rjmp	.+38     	; 0x58e <DIO_VidSetPortDir+0x7a>
{
case DIO_PORTA :DDRA_REG=PortDir; break;
 568:	ea e3       	ldi	r30, 0x3A	; 58
 56a:	f0 e0       	ldi	r31, 0x00	; 0
 56c:	8a 81       	ldd	r24, Y+2	; 0x02
 56e:	80 83       	st	Z, r24
 570:	0e c0       	rjmp	.+28     	; 0x58e <DIO_VidSetPortDir+0x7a>
case DIO_PORTB :DDRB_REG=PortDir; break;
 572:	e7 e3       	ldi	r30, 0x37	; 55
 574:	f0 e0       	ldi	r31, 0x00	; 0
 576:	8a 81       	ldd	r24, Y+2	; 0x02
 578:	80 83       	st	Z, r24
 57a:	09 c0       	rjmp	.+18     	; 0x58e <DIO_VidSetPortDir+0x7a>
case DIO_PORTC :DDRC_REG=PortDir; break;
 57c:	e4 e3       	ldi	r30, 0x34	; 52
 57e:	f0 e0       	ldi	r31, 0x00	; 0
 580:	8a 81       	ldd	r24, Y+2	; 0x02
 582:	80 83       	st	Z, r24
 584:	04 c0       	rjmp	.+8      	; 0x58e <DIO_VidSetPortDir+0x7a>
case DIO_PORTD :DDRD_REG=PortDir; break;
 586:	e1 e3       	ldi	r30, 0x31	; 49
 588:	f0 e0       	ldi	r31, 0x00	; 0
 58a:	8a 81       	ldd	r24, Y+2	; 0x02
 58c:	80 83       	st	Z, r24
}
else
{
//error
}
}
 58e:	0f 90       	pop	r0
 590:	0f 90       	pop	r0
 592:	0f 90       	pop	r0
 594:	0f 90       	pop	r0
 596:	cf 91       	pop	r28
 598:	df 91       	pop	r29
 59a:	08 95       	ret

0000059c <DIO_u8GetPinVal>:
u8 DIO_u8GetPinVal(u8 PortId,u8 PinId)
{
 59c:	df 93       	push	r29
 59e:	cf 93       	push	r28
 5a0:	00 d0       	rcall	.+0      	; 0x5a2 <DIO_u8GetPinVal+0x6>
 5a2:	00 d0       	rcall	.+0      	; 0x5a4 <DIO_u8GetPinVal+0x8>
 5a4:	00 d0       	rcall	.+0      	; 0x5a6 <DIO_u8GetPinVal+0xa>
 5a6:	cd b7       	in	r28, 0x3d	; 61
 5a8:	de b7       	in	r29, 0x3e	; 62
 5aa:	8a 83       	std	Y+2, r24	; 0x02
 5ac:	6b 83       	std	Y+3, r22	; 0x03
u8 PinState=0xff;//means wrong input (port id or pin id)
 5ae:	8f ef       	ldi	r24, 0xFF	; 255
 5b0:	89 83       	std	Y+1, r24	; 0x01
if((PortId<=DIO_PORTD)&&(PinId<=DIO_PIN7))
 5b2:	8a 81       	ldd	r24, Y+2	; 0x02
 5b4:	84 30       	cpi	r24, 0x04	; 4
 5b6:	08 f0       	brcs	.+2      	; 0x5ba <DIO_u8GetPinVal+0x1e>
 5b8:	6f c0       	rjmp	.+222    	; 0x698 <DIO_u8GetPinVal+0xfc>
 5ba:	8b 81       	ldd	r24, Y+3	; 0x03
 5bc:	88 30       	cpi	r24, 0x08	; 8
 5be:	08 f0       	brcs	.+2      	; 0x5c2 <DIO_u8GetPinVal+0x26>
 5c0:	6b c0       	rjmp	.+214    	; 0x698 <DIO_u8GetPinVal+0xfc>
{
	switch(PortId)
 5c2:	8a 81       	ldd	r24, Y+2	; 0x02
 5c4:	28 2f       	mov	r18, r24
 5c6:	30 e0       	ldi	r19, 0x00	; 0
 5c8:	3d 83       	std	Y+5, r19	; 0x05
 5ca:	2c 83       	std	Y+4, r18	; 0x04
 5cc:	4c 81       	ldd	r20, Y+4	; 0x04
 5ce:	5d 81       	ldd	r21, Y+5	; 0x05
 5d0:	41 30       	cpi	r20, 0x01	; 1
 5d2:	51 05       	cpc	r21, r1
 5d4:	41 f1       	breq	.+80     	; 0x626 <DIO_u8GetPinVal+0x8a>
 5d6:	8c 81       	ldd	r24, Y+4	; 0x04
 5d8:	9d 81       	ldd	r25, Y+5	; 0x05
 5da:	82 30       	cpi	r24, 0x02	; 2
 5dc:	91 05       	cpc	r25, r1
 5de:	34 f4       	brge	.+12     	; 0x5ec <DIO_u8GetPinVal+0x50>
 5e0:	2c 81       	ldd	r18, Y+4	; 0x04
 5e2:	3d 81       	ldd	r19, Y+5	; 0x05
 5e4:	21 15       	cp	r18, r1
 5e6:	31 05       	cpc	r19, r1
 5e8:	61 f0       	breq	.+24     	; 0x602 <DIO_u8GetPinVal+0x66>
 5ea:	52 c0       	rjmp	.+164    	; 0x690 <DIO_u8GetPinVal+0xf4>
 5ec:	4c 81       	ldd	r20, Y+4	; 0x04
 5ee:	5d 81       	ldd	r21, Y+5	; 0x05
 5f0:	42 30       	cpi	r20, 0x02	; 2
 5f2:	51 05       	cpc	r21, r1
 5f4:	51 f1       	breq	.+84     	; 0x64a <DIO_u8GetPinVal+0xae>
 5f6:	8c 81       	ldd	r24, Y+4	; 0x04
 5f8:	9d 81       	ldd	r25, Y+5	; 0x05
 5fa:	83 30       	cpi	r24, 0x03	; 3
 5fc:	91 05       	cpc	r25, r1
 5fe:	b9 f1       	breq	.+110    	; 0x66e <DIO_u8GetPinVal+0xd2>
 600:	47 c0       	rjmp	.+142    	; 0x690 <DIO_u8GetPinVal+0xf4>
	{
	case DIO_PORTA :PinState=GET_BIT(PINA_REG,PinId); break;
 602:	e9 e3       	ldi	r30, 0x39	; 57
 604:	f0 e0       	ldi	r31, 0x00	; 0
 606:	80 81       	ld	r24, Z
 608:	28 2f       	mov	r18, r24
 60a:	30 e0       	ldi	r19, 0x00	; 0
 60c:	8b 81       	ldd	r24, Y+3	; 0x03
 60e:	88 2f       	mov	r24, r24
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	a9 01       	movw	r20, r18
 614:	02 c0       	rjmp	.+4      	; 0x61a <DIO_u8GetPinVal+0x7e>
 616:	55 95       	asr	r21
 618:	47 95       	ror	r20
 61a:	8a 95       	dec	r24
 61c:	e2 f7       	brpl	.-8      	; 0x616 <DIO_u8GetPinVal+0x7a>
 61e:	ca 01       	movw	r24, r20
 620:	81 70       	andi	r24, 0x01	; 1
 622:	89 83       	std	Y+1, r24	; 0x01
 624:	35 c0       	rjmp	.+106    	; 0x690 <DIO_u8GetPinVal+0xf4>
	case DIO_PORTB :PinState=GET_BIT(PINB_REG,PinId); break;
 626:	e6 e3       	ldi	r30, 0x36	; 54
 628:	f0 e0       	ldi	r31, 0x00	; 0
 62a:	80 81       	ld	r24, Z
 62c:	28 2f       	mov	r18, r24
 62e:	30 e0       	ldi	r19, 0x00	; 0
 630:	8b 81       	ldd	r24, Y+3	; 0x03
 632:	88 2f       	mov	r24, r24
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	a9 01       	movw	r20, r18
 638:	02 c0       	rjmp	.+4      	; 0x63e <DIO_u8GetPinVal+0xa2>
 63a:	55 95       	asr	r21
 63c:	47 95       	ror	r20
 63e:	8a 95       	dec	r24
 640:	e2 f7       	brpl	.-8      	; 0x63a <DIO_u8GetPinVal+0x9e>
 642:	ca 01       	movw	r24, r20
 644:	81 70       	andi	r24, 0x01	; 1
 646:	89 83       	std	Y+1, r24	; 0x01
 648:	23 c0       	rjmp	.+70     	; 0x690 <DIO_u8GetPinVal+0xf4>
	case DIO_PORTC :PinState=GET_BIT(PINC_REG,PinId); break;
 64a:	e3 e3       	ldi	r30, 0x33	; 51
 64c:	f0 e0       	ldi	r31, 0x00	; 0
 64e:	80 81       	ld	r24, Z
 650:	28 2f       	mov	r18, r24
 652:	30 e0       	ldi	r19, 0x00	; 0
 654:	8b 81       	ldd	r24, Y+3	; 0x03
 656:	88 2f       	mov	r24, r24
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	a9 01       	movw	r20, r18
 65c:	02 c0       	rjmp	.+4      	; 0x662 <DIO_u8GetPinVal+0xc6>
 65e:	55 95       	asr	r21
 660:	47 95       	ror	r20
 662:	8a 95       	dec	r24
 664:	e2 f7       	brpl	.-8      	; 0x65e <DIO_u8GetPinVal+0xc2>
 666:	ca 01       	movw	r24, r20
 668:	81 70       	andi	r24, 0x01	; 1
 66a:	89 83       	std	Y+1, r24	; 0x01
 66c:	11 c0       	rjmp	.+34     	; 0x690 <DIO_u8GetPinVal+0xf4>
	case DIO_PORTD :PinState=GET_BIT(PIND_REG,PinId); break;
 66e:	e0 e3       	ldi	r30, 0x30	; 48
 670:	f0 e0       	ldi	r31, 0x00	; 0
 672:	80 81       	ld	r24, Z
 674:	28 2f       	mov	r18, r24
 676:	30 e0       	ldi	r19, 0x00	; 0
 678:	8b 81       	ldd	r24, Y+3	; 0x03
 67a:	88 2f       	mov	r24, r24
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	a9 01       	movw	r20, r18
 680:	02 c0       	rjmp	.+4      	; 0x686 <DIO_u8GetPinVal+0xea>
 682:	55 95       	asr	r21
 684:	47 95       	ror	r20
 686:	8a 95       	dec	r24
 688:	e2 f7       	brpl	.-8      	; 0x682 <DIO_u8GetPinVal+0xe6>
 68a:	ca 01       	movw	r24, r20
 68c:	81 70       	andi	r24, 0x01	; 1
 68e:	89 83       	std	Y+1, r24	; 0x01
	}
	return PinState;
 690:	89 81       	ldd	r24, Y+1	; 0x01
 692:	8e 83       	std	Y+6, r24	; 0x06
}
else
{
	//error
}
}
 694:	8e 81       	ldd	r24, Y+6	; 0x06
 696:	00 c0       	rjmp	.+0      	; 0x698 <DIO_u8GetPinVal+0xfc>
 698:	26 96       	adiw	r28, 0x06	; 6
 69a:	0f b6       	in	r0, 0x3f	; 63
 69c:	f8 94       	cli
 69e:	de bf       	out	0x3e, r29	; 62
 6a0:	0f be       	out	0x3f, r0	; 63
 6a2:	cd bf       	out	0x3d, r28	; 61
 6a4:	cf 91       	pop	r28
 6a6:	df 91       	pop	r29
 6a8:	08 95       	ret

000006aa <main>:
 */
#include "LIB\typ.h"
#include "DIO_interface.h"
#include<avr/delay.h>
 int main (void)
 {
 6aa:	df 93       	push	r29
 6ac:	cf 93       	push	r28
 6ae:	cd b7       	in	r28, 0x3d	; 61
 6b0:	de b7       	in	r29, 0x3e	; 62
	 void DIO_VidSetPortDir(u8 PortId,u8 PortDir); done
	 u8 DIO_u8GetPinVal(u8 PortId,u8 PinId);	   done	*/
	 // inti


	 DIO_VidSetPinDir(DIO_PIN7,DIO_PORTB,DIO_OUTPUT);
 6b2:	87 e0       	ldi	r24, 0x07	; 7
 6b4:	61 e0       	ldi	r22, 0x01	; 1
 6b6:	41 e0       	ldi	r20, 0x01	; 1
 6b8:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_VidSetPinDir>
	 DIO_VidSetPinDir(DIO_PIN6,DIO_PORTB,DIO_OUTPUT);
 6bc:	86 e0       	ldi	r24, 0x06	; 6
 6be:	61 e0       	ldi	r22, 0x01	; 1
 6c0:	41 e0       	ldi	r20, 0x01	; 1
 6c2:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_VidSetPinDir>


	 // loop
	 while(1)
	 {
		 DIO_VidSetPinVal(DIO_PIN7,DIO_PORTB,DIO_HIGH);
 6c6:	87 e0       	ldi	r24, 0x07	; 7
 6c8:	61 e0       	ldi	r22, 0x01	; 1
 6ca:	41 e0       	ldi	r20, 0x01	; 1
 6cc:	0e 94 3e 01 	call	0x27c	; 0x27c <DIO_VidSetPinVal>
 6d0:	fa cf       	rjmp	.-12     	; 0x6c6 <main+0x1c>

000006d2 <_exit>:
 6d2:	f8 94       	cli

000006d4 <__stop_program>:
 6d4:	ff cf       	rjmp	.-2      	; 0x6d4 <__stop_program>
