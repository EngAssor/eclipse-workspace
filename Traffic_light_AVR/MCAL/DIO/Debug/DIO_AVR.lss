
DIO_AVR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008bc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000b64  00000000  00000000  00000910  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000004c1  00000000  00000000  00001474  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 34 04 	call	0x868	; 0x868 <main>
  64:	0c 94 5c 04 	jmp	0x8b8	; 0x8b8 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_enumSetPortDirection>:
#include "LIB/BIT_MATH.h"
#include "DIO_private.h"
#include "DIO_interface.h"

 DIO_ErroStatus DIO_enumSetPortDirection(u8 Copy_u8Port, u8 Copy_u8Direction)
 {
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_enumSetPortDirection+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_enumSetPortDirection+0x8>
  74:	0f 92       	push	r0
  76:	cd b7       	in	r28, 0x3d	; 61
  78:	de b7       	in	r29, 0x3e	; 62
  7a:	8a 83       	std	Y+2, r24	; 0x02
  7c:	6b 83       	std	Y+3, r22	; 0x03
	 DIO_ErroStatus LOC_enumState=DIO_OK;
  7e:	81 e0       	ldi	r24, 0x01	; 1
  80:	89 83       	std	Y+1, r24	; 0x01
    switch(Copy_u8Port)
  82:	8a 81       	ldd	r24, Y+2	; 0x02
  84:	28 2f       	mov	r18, r24
  86:	30 e0       	ldi	r19, 0x00	; 0
  88:	3d 83       	std	Y+5, r19	; 0x05
  8a:	2c 83       	std	Y+4, r18	; 0x04
  8c:	8c 81       	ldd	r24, Y+4	; 0x04
  8e:	9d 81       	ldd	r25, Y+5	; 0x05
  90:	82 30       	cpi	r24, 0x02	; 2
  92:	91 05       	cpc	r25, r1
  94:	39 f1       	breq	.+78     	; 0xe4 <DIO_enumSetPortDirection+0x78>
  96:	2c 81       	ldd	r18, Y+4	; 0x04
  98:	3d 81       	ldd	r19, Y+5	; 0x05
  9a:	23 30       	cpi	r18, 0x03	; 3
  9c:	31 05       	cpc	r19, r1
  9e:	34 f4       	brge	.+12     	; 0xac <DIO_enumSetPortDirection+0x40>
  a0:	8c 81       	ldd	r24, Y+4	; 0x04
  a2:	9d 81       	ldd	r25, Y+5	; 0x05
  a4:	81 30       	cpi	r24, 0x01	; 1
  a6:	91 05       	cpc	r25, r1
  a8:	61 f0       	breq	.+24     	; 0xc2 <DIO_enumSetPortDirection+0x56>
  aa:	4f c0       	rjmp	.+158    	; 0x14a <DIO_enumSetPortDirection+0xde>
  ac:	2c 81       	ldd	r18, Y+4	; 0x04
  ae:	3d 81       	ldd	r19, Y+5	; 0x05
  b0:	23 30       	cpi	r18, 0x03	; 3
  b2:	31 05       	cpc	r19, r1
  b4:	41 f1       	breq	.+80     	; 0x106 <DIO_enumSetPortDirection+0x9a>
  b6:	8c 81       	ldd	r24, Y+4	; 0x04
  b8:	9d 81       	ldd	r25, Y+5	; 0x05
  ba:	84 30       	cpi	r24, 0x04	; 4
  bc:	91 05       	cpc	r25, r1
  be:	a1 f1       	breq	.+104    	; 0x128 <DIO_enumSetPortDirection+0xbc>
  c0:	44 c0       	rjmp	.+136    	; 0x14a <DIO_enumSetPortDirection+0xde>
    {

        case DIO_PORTA : 
                        if(Copy_u8Direction == DIO_OUTPUT)
  c2:	8b 81       	ldd	r24, Y+3	; 0x03
  c4:	81 30       	cpi	r24, 0x01	; 1
  c6:	29 f4       	brne	.+10     	; 0xd2 <DIO_enumSetPortDirection+0x66>
                           {
                                DDRA_REG =0xff; 
  c8:	ea e3       	ldi	r30, 0x3A	; 58
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	80 83       	st	Z, r24
  d0:	3d c0       	rjmp	.+122    	; 0x14c <DIO_enumSetPortDirection+0xe0>
                           } 
                        else if(Copy_u8Direction == DIO_INPUT)
  d2:	8b 81       	ldd	r24, Y+3	; 0x03
  d4:	88 23       	and	r24, r24
  d6:	21 f4       	brne	.+8      	; 0xe0 <DIO_enumSetPortDirection+0x74>
                          {  
                                DDRA_REG=0x00;
  d8:	ea e3       	ldi	r30, 0x3A	; 58
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	10 82       	st	Z, r1
  de:	36 c0       	rjmp	.+108    	; 0x14c <DIO_enumSetPortDirection+0xe0>
                          }
                          else
                          {
                            /**/
                        	  LOC_enumState=DIO_NOK;
  e0:	19 82       	std	Y+1, r1	; 0x01
  e2:	34 c0       	rjmp	.+104    	; 0x14c <DIO_enumSetPortDirection+0xe0>
                          }
                    break;
        case DIO_PORTB :
                        if(Copy_u8Direction == DIO_OUTPUT)
  e4:	8b 81       	ldd	r24, Y+3	; 0x03
  e6:	81 30       	cpi	r24, 0x01	; 1
  e8:	29 f4       	brne	.+10     	; 0xf4 <DIO_enumSetPortDirection+0x88>
                            {
                                DDRB_REG =0xff; 
  ea:	e7 e3       	ldi	r30, 0x37	; 55
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	8f ef       	ldi	r24, 0xFF	; 255
  f0:	80 83       	st	Z, r24
  f2:	2c c0       	rjmp	.+88     	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                        else if(Copy_u8Direction == DIO_INPUT)
  f4:	8b 81       	ldd	r24, Y+3	; 0x03
  f6:	88 23       	and	r24, r24
  f8:	21 f4       	brne	.+8      	; 0x102 <DIO_enumSetPortDirection+0x96>
                            {
                                DDRC_REG=0x00;
  fa:	e4 e3       	ldi	r30, 0x34	; 52
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	10 82       	st	Z, r1
 100:	25 c0       	rjmp	.+74     	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                            else
                            {
                                /**/
                          	  LOC_enumState=DIO_NOK;
 102:	19 82       	std	Y+1, r1	; 0x01
 104:	23 c0       	rjmp	.+70     	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                    break;
        case DIO_PORTC : 
                        if(Copy_u8Direction == DIO_OUTPUT)
 106:	8b 81       	ldd	r24, Y+3	; 0x03
 108:	81 30       	cpi	r24, 0x01	; 1
 10a:	29 f4       	brne	.+10     	; 0x116 <DIO_enumSetPortDirection+0xaa>
                            {
                                DDRC_REG =0xff; 
 10c:	e4 e3       	ldi	r30, 0x34	; 52
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	8f ef       	ldi	r24, 0xFF	; 255
 112:	80 83       	st	Z, r24
 114:	1b c0       	rjmp	.+54     	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                        else if (Copy_u8Direction == DIO_INPUT)
 116:	8b 81       	ldd	r24, Y+3	; 0x03
 118:	88 23       	and	r24, r24
 11a:	21 f4       	brne	.+8      	; 0x124 <DIO_enumSetPortDirection+0xb8>
                            {
                                DDRC_REG=0x00;
 11c:	e4 e3       	ldi	r30, 0x34	; 52
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	10 82       	st	Z, r1
 122:	14 c0       	rjmp	.+40     	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                            else
                            {
                                /**/
                          	  LOC_enumState=DIO_NOK;
 124:	19 82       	std	Y+1, r1	; 0x01
 126:	12 c0       	rjmp	.+36     	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                    break;
        case DIO_PORTD : 
                        if(Copy_u8Direction == DIO_OUTPUT)
 128:	8b 81       	ldd	r24, Y+3	; 0x03
 12a:	81 30       	cpi	r24, 0x01	; 1
 12c:	29 f4       	brne	.+10     	; 0x138 <DIO_enumSetPortDirection+0xcc>
                            {
                                DDRD_REG =0xff; 
 12e:	e1 e3       	ldi	r30, 0x31	; 49
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	8f ef       	ldi	r24, 0xFF	; 255
 134:	80 83       	st	Z, r24
 136:	0a c0       	rjmp	.+20     	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                        else if (Copy_u8Direction==DIO_INPUT)
 138:	8b 81       	ldd	r24, Y+3	; 0x03
 13a:	88 23       	and	r24, r24
 13c:	21 f4       	brne	.+8      	; 0x146 <DIO_enumSetPortDirection+0xda>
                            {
                                DDRD_REG=0x00;
 13e:	e1 e3       	ldi	r30, 0x31	; 49
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	10 82       	st	Z, r1
 144:	03 c0       	rjmp	.+6      	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                            else
                            {
                                /**/
                          	  LOC_enumState=DIO_NOK;
 146:	19 82       	std	Y+1, r1	; 0x01
 148:	01 c0       	rjmp	.+2      	; 0x14c <DIO_enumSetPortDirection+0xe0>
                            }
                    break;

        default:
      	  LOC_enumState=DIO_NOK;
 14a:	19 82       	std	Y+1, r1	; 0x01

    }
return    LOC_enumState;
 14c:	89 81       	ldd	r24, Y+1	; 0x01
 }
 14e:	0f 90       	pop	r0
 150:	0f 90       	pop	r0
 152:	0f 90       	pop	r0
 154:	0f 90       	pop	r0
 156:	0f 90       	pop	r0
 158:	cf 91       	pop	r28
 15a:	df 91       	pop	r29
 15c:	08 95       	ret

0000015e <DIO_enumSetPortValue>:
 DIO_ErroStatus DIO_enumSetPortValue    (u8 Copy_u8Port, u8 Copy_u8Value    )
 {
 15e:	df 93       	push	r29
 160:	cf 93       	push	r28
 162:	00 d0       	rcall	.+0      	; 0x164 <DIO_enumSetPortValue+0x6>
 164:	00 d0       	rcall	.+0      	; 0x166 <DIO_enumSetPortValue+0x8>
 166:	0f 92       	push	r0
 168:	cd b7       	in	r28, 0x3d	; 61
 16a:	de b7       	in	r29, 0x3e	; 62
 16c:	8a 83       	std	Y+2, r24	; 0x02
 16e:	6b 83       	std	Y+3, r22	; 0x03
	 DIO_ErroStatus LOC_enumState=DIO_OK;
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	89 83       	std	Y+1, r24	; 0x01

     switch(Copy_u8Port)
 174:	8a 81       	ldd	r24, Y+2	; 0x02
 176:	28 2f       	mov	r18, r24
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	3d 83       	std	Y+5, r19	; 0x05
 17c:	2c 83       	std	Y+4, r18	; 0x04
 17e:	8c 81       	ldd	r24, Y+4	; 0x04
 180:	9d 81       	ldd	r25, Y+5	; 0x05
 182:	82 30       	cpi	r24, 0x02	; 2
 184:	91 05       	cpc	r25, r1
 186:	39 f1       	breq	.+78     	; 0x1d6 <DIO_enumSetPortValue+0x78>
 188:	2c 81       	ldd	r18, Y+4	; 0x04
 18a:	3d 81       	ldd	r19, Y+5	; 0x05
 18c:	23 30       	cpi	r18, 0x03	; 3
 18e:	31 05       	cpc	r19, r1
 190:	34 f4       	brge	.+12     	; 0x19e <DIO_enumSetPortValue+0x40>
 192:	8c 81       	ldd	r24, Y+4	; 0x04
 194:	9d 81       	ldd	r25, Y+5	; 0x05
 196:	81 30       	cpi	r24, 0x01	; 1
 198:	91 05       	cpc	r25, r1
 19a:	61 f0       	breq	.+24     	; 0x1b4 <DIO_enumSetPortValue+0x56>
 19c:	4f c0       	rjmp	.+158    	; 0x23c <DIO_enumSetPortValue+0xde>
 19e:	2c 81       	ldd	r18, Y+4	; 0x04
 1a0:	3d 81       	ldd	r19, Y+5	; 0x05
 1a2:	23 30       	cpi	r18, 0x03	; 3
 1a4:	31 05       	cpc	r19, r1
 1a6:	41 f1       	breq	.+80     	; 0x1f8 <DIO_enumSetPortValue+0x9a>
 1a8:	8c 81       	ldd	r24, Y+4	; 0x04
 1aa:	9d 81       	ldd	r25, Y+5	; 0x05
 1ac:	84 30       	cpi	r24, 0x04	; 4
 1ae:	91 05       	cpc	r25, r1
 1b0:	a1 f1       	breq	.+104    	; 0x21a <DIO_enumSetPortValue+0xbc>
 1b2:	44 c0       	rjmp	.+136    	; 0x23c <DIO_enumSetPortValue+0xde>
    {
        case DIO_PORTA : 
                        if(Copy_u8Value == DIO_HIGH)
 1b4:	8b 81       	ldd	r24, Y+3	; 0x03
 1b6:	81 30       	cpi	r24, 0x01	; 1
 1b8:	29 f4       	brne	.+10     	; 0x1c4 <DIO_enumSetPortValue+0x66>
                           {
                                PORTA_REG =0xff; 
 1ba:	eb e3       	ldi	r30, 0x3B	; 59
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	8f ef       	ldi	r24, 0xFF	; 255
 1c0:	80 83       	st	Z, r24
 1c2:	3d c0       	rjmp	.+122    	; 0x23e <DIO_enumSetPortValue+0xe0>
                           } 
                        else if(Copy_u8Value == DIO_LOW)
 1c4:	8b 81       	ldd	r24, Y+3	; 0x03
 1c6:	88 23       	and	r24, r24
 1c8:	21 f4       	brne	.+8      	; 0x1d2 <DIO_enumSetPortValue+0x74>
                          {  
                                PORTA_REG=0x00;
 1ca:	eb e3       	ldi	r30, 0x3B	; 59
 1cc:	f0 e0       	ldi	r31, 0x00	; 0
 1ce:	10 82       	st	Z, r1
 1d0:	36 c0       	rjmp	.+108    	; 0x23e <DIO_enumSetPortValue+0xe0>
                          }
                          else
                          {
                            /**/
                         	  LOC_enumState=DIO_NOK;
 1d2:	19 82       	std	Y+1, r1	; 0x01
 1d4:	34 c0       	rjmp	.+104    	; 0x23e <DIO_enumSetPortValue+0xe0>
                          }
                    break;
        case DIO_PORTB :
                        if(Copy_u8Value == DIO_HIGH)
 1d6:	8b 81       	ldd	r24, Y+3	; 0x03
 1d8:	81 30       	cpi	r24, 0x01	; 1
 1da:	29 f4       	brne	.+10     	; 0x1e6 <DIO_enumSetPortValue+0x88>
                            {
                                PORTB_REG =0xff; 
 1dc:	e8 e3       	ldi	r30, 0x38	; 56
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	8f ef       	ldi	r24, 0xFF	; 255
 1e2:	80 83       	st	Z, r24
 1e4:	2c c0       	rjmp	.+88     	; 0x23e <DIO_enumSetPortValue+0xe0>
                            }
                        else if(Copy_u8Value == DIO_LOW)
 1e6:	8b 81       	ldd	r24, Y+3	; 0x03
 1e8:	88 23       	and	r24, r24
 1ea:	21 f4       	brne	.+8      	; 0x1f4 <DIO_enumSetPortValue+0x96>
                            {
                                PORTC_REG=0x00;
 1ec:	e5 e3       	ldi	r30, 0x35	; 53
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	10 82       	st	Z, r1
 1f2:	25 c0       	rjmp	.+74     	; 0x23e <DIO_enumSetPortValue+0xe0>
                            }
                            else
                            {
                                /**/
                           	  LOC_enumState=DIO_NOK;
 1f4:	19 82       	std	Y+1, r1	; 0x01
 1f6:	23 c0       	rjmp	.+70     	; 0x23e <DIO_enumSetPortValue+0xe0>
                            }
                    break;
        case DIO_PORTC : 
                        if(Copy_u8Value == DIO_HIGH)
 1f8:	8b 81       	ldd	r24, Y+3	; 0x03
 1fa:	81 30       	cpi	r24, 0x01	; 1
 1fc:	29 f4       	brne	.+10     	; 0x208 <DIO_enumSetPortValue+0xaa>
                            {
                                PORTC_REG =0xff; 
 1fe:	e5 e3       	ldi	r30, 0x35	; 53
 200:	f0 e0       	ldi	r31, 0x00	; 0
 202:	8f ef       	ldi	r24, 0xFF	; 255
 204:	80 83       	st	Z, r24
 206:	1b c0       	rjmp	.+54     	; 0x23e <DIO_enumSetPortValue+0xe0>
                            }
                        else if (Copy_u8Value == DIO_LOW)
 208:	8b 81       	ldd	r24, Y+3	; 0x03
 20a:	88 23       	and	r24, r24
 20c:	21 f4       	brne	.+8      	; 0x216 <DIO_enumSetPortValue+0xb8>
                            {
                                PORTC_REG=0x00;
 20e:	e5 e3       	ldi	r30, 0x35	; 53
 210:	f0 e0       	ldi	r31, 0x00	; 0
 212:	10 82       	st	Z, r1
 214:	14 c0       	rjmp	.+40     	; 0x23e <DIO_enumSetPortValue+0xe0>
                            }
                            else
                            {
                                /**/
                           	  LOC_enumState=DIO_NOK;
 216:	19 82       	std	Y+1, r1	; 0x01
 218:	12 c0       	rjmp	.+36     	; 0x23e <DIO_enumSetPortValue+0xe0>
                            }
                    break;
        case DIO_PORTD : 
                        if(Copy_u8Value == DIO_HIGH)
 21a:	8b 81       	ldd	r24, Y+3	; 0x03
 21c:	81 30       	cpi	r24, 0x01	; 1
 21e:	29 f4       	brne	.+10     	; 0x22a <DIO_enumSetPortValue+0xcc>
                            {
                                PORTD_REG =0xff; 
 220:	e2 e3       	ldi	r30, 0x32	; 50
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	8f ef       	ldi	r24, 0xFF	; 255
 226:	80 83       	st	Z, r24
 228:	0a c0       	rjmp	.+20     	; 0x23e <DIO_enumSetPortValue+0xe0>
                            }
                        else if (Copy_u8Value==DIO_LOW)
 22a:	8b 81       	ldd	r24, Y+3	; 0x03
 22c:	88 23       	and	r24, r24
 22e:	21 f4       	brne	.+8      	; 0x238 <DIO_enumSetPortValue+0xda>
                            {
                                PORTD_REG=0x00;
 230:	e2 e3       	ldi	r30, 0x32	; 50
 232:	f0 e0       	ldi	r31, 0x00	; 0
 234:	10 82       	st	Z, r1
 236:	03 c0       	rjmp	.+6      	; 0x23e <DIO_enumSetPortValue+0xe0>
                            }
                            else
                            {
                                /**/
                             	  LOC_enumState=DIO_NOK;
 238:	19 82       	std	Y+1, r1	; 0x01
 23a:	01 c0       	rjmp	.+2      	; 0x23e <DIO_enumSetPortValue+0xe0>

                            }
                    break;
        default:
       	  LOC_enumState=DIO_NOK;
 23c:	19 82       	std	Y+1, r1	; 0x01

     }
 return    LOC_enumState;
 23e:	89 81       	ldd	r24, Y+1	; 0x01
 }
 240:	0f 90       	pop	r0
 242:	0f 90       	pop	r0
 244:	0f 90       	pop	r0
 246:	0f 90       	pop	r0
 248:	0f 90       	pop	r0
 24a:	cf 91       	pop	r28
 24c:	df 91       	pop	r29
 24e:	08 95       	ret

00000250 <DIO_enumSetPINDirection>:

 DIO_ErroStatus DIO_enumSetPINDirection(u8 Copy_u8Port,u8 Copy_u8PINNumber, u8 Copy_u8Direction)
 {
 250:	df 93       	push	r29
 252:	cf 93       	push	r28
 254:	00 d0       	rcall	.+0      	; 0x256 <DIO_enumSetPINDirection+0x6>
 256:	00 d0       	rcall	.+0      	; 0x258 <DIO_enumSetPINDirection+0x8>
 258:	00 d0       	rcall	.+0      	; 0x25a <DIO_enumSetPINDirection+0xa>
 25a:	cd b7       	in	r28, 0x3d	; 61
 25c:	de b7       	in	r29, 0x3e	; 62
 25e:	8a 83       	std	Y+2, r24	; 0x02
 260:	6b 83       	std	Y+3, r22	; 0x03
 262:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErroStatus LOC_enumState = DIO_OK;
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	89 83       	std	Y+1, r24	; 0x01
	if((Copy_u8PINNumber>=DIO_PIN0)&& (Copy_u8PINNumber<=DIO_PIN7))
 268:	8b 81       	ldd	r24, Y+3	; 0x03
 26a:	88 30       	cpi	r24, 0x08	; 8
 26c:	08 f0       	brcs	.+2      	; 0x270 <DIO_enumSetPINDirection+0x20>
 26e:	e9 c0       	rjmp	.+466    	; 0x442 <DIO_enumSetPINDirection+0x1f2>
	{
		 switch(Copy_u8Port)
 270:	8a 81       	ldd	r24, Y+2	; 0x02
 272:	28 2f       	mov	r18, r24
 274:	30 e0       	ldi	r19, 0x00	; 0
 276:	3e 83       	std	Y+6, r19	; 0x06
 278:	2d 83       	std	Y+5, r18	; 0x05
 27a:	8d 81       	ldd	r24, Y+5	; 0x05
 27c:	9e 81       	ldd	r25, Y+6	; 0x06
 27e:	82 30       	cpi	r24, 0x02	; 2
 280:	91 05       	cpc	r25, r1
 282:	09 f4       	brne	.+2      	; 0x286 <DIO_enumSetPINDirection+0x36>
 284:	49 c0       	rjmp	.+146    	; 0x318 <DIO_enumSetPINDirection+0xc8>
 286:	2d 81       	ldd	r18, Y+5	; 0x05
 288:	3e 81       	ldd	r19, Y+6	; 0x06
 28a:	23 30       	cpi	r18, 0x03	; 3
 28c:	31 05       	cpc	r19, r1
 28e:	34 f4       	brge	.+12     	; 0x29c <DIO_enumSetPINDirection+0x4c>
 290:	8d 81       	ldd	r24, Y+5	; 0x05
 292:	9e 81       	ldd	r25, Y+6	; 0x06
 294:	81 30       	cpi	r24, 0x01	; 1
 296:	91 05       	cpc	r25, r1
 298:	71 f0       	breq	.+28     	; 0x2b6 <DIO_enumSetPINDirection+0x66>
 29a:	d1 c0       	rjmp	.+418    	; 0x43e <DIO_enumSetPINDirection+0x1ee>
 29c:	2d 81       	ldd	r18, Y+5	; 0x05
 29e:	3e 81       	ldd	r19, Y+6	; 0x06
 2a0:	23 30       	cpi	r18, 0x03	; 3
 2a2:	31 05       	cpc	r19, r1
 2a4:	09 f4       	brne	.+2      	; 0x2a8 <DIO_enumSetPINDirection+0x58>
 2a6:	69 c0       	rjmp	.+210    	; 0x37a <DIO_enumSetPINDirection+0x12a>
 2a8:	8d 81       	ldd	r24, Y+5	; 0x05
 2aa:	9e 81       	ldd	r25, Y+6	; 0x06
 2ac:	84 30       	cpi	r24, 0x04	; 4
 2ae:	91 05       	cpc	r25, r1
 2b0:	09 f4       	brne	.+2      	; 0x2b4 <DIO_enumSetPINDirection+0x64>
 2b2:	94 c0       	rjmp	.+296    	; 0x3dc <DIO_enumSetPINDirection+0x18c>
 2b4:	c4 c0       	rjmp	.+392    	; 0x43e <DIO_enumSetPINDirection+0x1ee>
		    {

		        case DIO_PORTA :
		                        if(Copy_u8Direction == DIO_OUTPUT)
 2b6:	8c 81       	ldd	r24, Y+4	; 0x04
 2b8:	81 30       	cpi	r24, 0x01	; 1
 2ba:	a1 f4       	brne	.+40     	; 0x2e4 <DIO_enumSetPINDirection+0x94>
		                           {
		                                SET_BIT(DDRA_REG,Copy_u8PINNumber);
 2bc:	aa e3       	ldi	r26, 0x3A	; 58
 2be:	b0 e0       	ldi	r27, 0x00	; 0
 2c0:	ea e3       	ldi	r30, 0x3A	; 58
 2c2:	f0 e0       	ldi	r31, 0x00	; 0
 2c4:	80 81       	ld	r24, Z
 2c6:	48 2f       	mov	r20, r24
 2c8:	8b 81       	ldd	r24, Y+3	; 0x03
 2ca:	28 2f       	mov	r18, r24
 2cc:	30 e0       	ldi	r19, 0x00	; 0
 2ce:	81 e0       	ldi	r24, 0x01	; 1
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	02 2e       	mov	r0, r18
 2d4:	02 c0       	rjmp	.+4      	; 0x2da <DIO_enumSetPINDirection+0x8a>
 2d6:	88 0f       	add	r24, r24
 2d8:	99 1f       	adc	r25, r25
 2da:	0a 94       	dec	r0
 2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <DIO_enumSetPINDirection+0x86>
 2de:	84 2b       	or	r24, r20
 2e0:	8c 93       	st	X, r24
 2e2:	b0 c0       	rjmp	.+352    	; 0x444 <DIO_enumSetPINDirection+0x1f4>
		                           }
		                        else if(Copy_u8Direction == DIO_INPUT)
 2e4:	8c 81       	ldd	r24, Y+4	; 0x04
 2e6:	88 23       	and	r24, r24
 2e8:	a9 f4       	brne	.+42     	; 0x314 <DIO_enumSetPINDirection+0xc4>
		                          {
		                                CLR_BIT(DDRA_REG,Copy_u8PINNumber);
 2ea:	aa e3       	ldi	r26, 0x3A	; 58
 2ec:	b0 e0       	ldi	r27, 0x00	; 0
 2ee:	ea e3       	ldi	r30, 0x3A	; 58
 2f0:	f0 e0       	ldi	r31, 0x00	; 0
 2f2:	80 81       	ld	r24, Z
 2f4:	48 2f       	mov	r20, r24
 2f6:	8b 81       	ldd	r24, Y+3	; 0x03
 2f8:	28 2f       	mov	r18, r24
 2fa:	30 e0       	ldi	r19, 0x00	; 0
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	90 e0       	ldi	r25, 0x00	; 0
 300:	02 2e       	mov	r0, r18
 302:	02 c0       	rjmp	.+4      	; 0x308 <DIO_enumSetPINDirection+0xb8>
 304:	88 0f       	add	r24, r24
 306:	99 1f       	adc	r25, r25
 308:	0a 94       	dec	r0
 30a:	e2 f7       	brpl	.-8      	; 0x304 <DIO_enumSetPINDirection+0xb4>
 30c:	80 95       	com	r24
 30e:	84 23       	and	r24, r20
 310:	8c 93       	st	X, r24
 312:	98 c0       	rjmp	.+304    	; 0x444 <DIO_enumSetPINDirection+0x1f4>
		                          }
		                          else
		                          {
		                            /**/
		                        	  LOC_enumState=DIO_NOK;
 314:	19 82       	std	Y+1, r1	; 0x01
 316:	96 c0       	rjmp	.+300    	; 0x444 <DIO_enumSetPINDirection+0x1f4>
		                          }
		                    break;
		        case DIO_PORTB :
		                        if(Copy_u8Direction == DIO_OUTPUT)
 318:	8c 81       	ldd	r24, Y+4	; 0x04
 31a:	81 30       	cpi	r24, 0x01	; 1
 31c:	a1 f4       	brne	.+40     	; 0x346 <DIO_enumSetPINDirection+0xf6>
		                            {
		                                SET_BIT(DDRB_REG,Copy_u8PINNumber);
 31e:	a7 e3       	ldi	r26, 0x37	; 55
 320:	b0 e0       	ldi	r27, 0x00	; 0
 322:	e7 e3       	ldi	r30, 0x37	; 55
 324:	f0 e0       	ldi	r31, 0x00	; 0
 326:	80 81       	ld	r24, Z
 328:	48 2f       	mov	r20, r24
 32a:	8b 81       	ldd	r24, Y+3	; 0x03
 32c:	28 2f       	mov	r18, r24
 32e:	30 e0       	ldi	r19, 0x00	; 0
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	02 2e       	mov	r0, r18
 336:	02 c0       	rjmp	.+4      	; 0x33c <DIO_enumSetPINDirection+0xec>
 338:	88 0f       	add	r24, r24
 33a:	99 1f       	adc	r25, r25
 33c:	0a 94       	dec	r0
 33e:	e2 f7       	brpl	.-8      	; 0x338 <DIO_enumSetPINDirection+0xe8>
 340:	84 2b       	or	r24, r20
 342:	8c 93       	st	X, r24
 344:	7f c0       	rjmp	.+254    	; 0x444 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                        else if(Copy_u8Direction == DIO_INPUT)
 346:	8c 81       	ldd	r24, Y+4	; 0x04
 348:	88 23       	and	r24, r24
 34a:	a9 f4       	brne	.+42     	; 0x376 <DIO_enumSetPINDirection+0x126>
		                            {
	                                    CLR_BIT(DDRB_REG,Copy_u8PINNumber);
 34c:	a7 e3       	ldi	r26, 0x37	; 55
 34e:	b0 e0       	ldi	r27, 0x00	; 0
 350:	e7 e3       	ldi	r30, 0x37	; 55
 352:	f0 e0       	ldi	r31, 0x00	; 0
 354:	80 81       	ld	r24, Z
 356:	48 2f       	mov	r20, r24
 358:	8b 81       	ldd	r24, Y+3	; 0x03
 35a:	28 2f       	mov	r18, r24
 35c:	30 e0       	ldi	r19, 0x00	; 0
 35e:	81 e0       	ldi	r24, 0x01	; 1
 360:	90 e0       	ldi	r25, 0x00	; 0
 362:	02 2e       	mov	r0, r18
 364:	02 c0       	rjmp	.+4      	; 0x36a <DIO_enumSetPINDirection+0x11a>
 366:	88 0f       	add	r24, r24
 368:	99 1f       	adc	r25, r25
 36a:	0a 94       	dec	r0
 36c:	e2 f7       	brpl	.-8      	; 0x366 <DIO_enumSetPINDirection+0x116>
 36e:	80 95       	com	r24
 370:	84 23       	and	r24, r20
 372:	8c 93       	st	X, r24
 374:	67 c0       	rjmp	.+206    	; 0x444 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                            else
		                            {
		                                /**/
		                          	  LOC_enumState=DIO_NOK;
 376:	19 82       	std	Y+1, r1	; 0x01
 378:	65 c0       	rjmp	.+202    	; 0x444 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                    break;
		        case DIO_PORTC :
		                        if(Copy_u8Direction == DIO_OUTPUT)
 37a:	8c 81       	ldd	r24, Y+4	; 0x04
 37c:	81 30       	cpi	r24, 0x01	; 1
 37e:	a1 f4       	brne	.+40     	; 0x3a8 <DIO_enumSetPINDirection+0x158>
		                            {
	                                SET_BIT(DDRC_REG,Copy_u8PINNumber);
 380:	a4 e3       	ldi	r26, 0x34	; 52
 382:	b0 e0       	ldi	r27, 0x00	; 0
 384:	e4 e3       	ldi	r30, 0x34	; 52
 386:	f0 e0       	ldi	r31, 0x00	; 0
 388:	80 81       	ld	r24, Z
 38a:	48 2f       	mov	r20, r24
 38c:	8b 81       	ldd	r24, Y+3	; 0x03
 38e:	28 2f       	mov	r18, r24
 390:	30 e0       	ldi	r19, 0x00	; 0
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	02 2e       	mov	r0, r18
 398:	02 c0       	rjmp	.+4      	; 0x39e <DIO_enumSetPINDirection+0x14e>
 39a:	88 0f       	add	r24, r24
 39c:	99 1f       	adc	r25, r25
 39e:	0a 94       	dec	r0
 3a0:	e2 f7       	brpl	.-8      	; 0x39a <DIO_enumSetPINDirection+0x14a>
 3a2:	84 2b       	or	r24, r20
 3a4:	8c 93       	st	X, r24
 3a6:	4e c0       	rjmp	.+156    	; 0x444 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                        else if (Copy_u8Direction == DIO_INPUT)
 3a8:	8c 81       	ldd	r24, Y+4	; 0x04
 3aa:	88 23       	and	r24, r24
 3ac:	a9 f4       	brne	.+42     	; 0x3d8 <DIO_enumSetPINDirection+0x188>
		                            {
	                                CLR_BIT(DDRC_REG,Copy_u8PINNumber);
 3ae:	a4 e3       	ldi	r26, 0x34	; 52
 3b0:	b0 e0       	ldi	r27, 0x00	; 0
 3b2:	e4 e3       	ldi	r30, 0x34	; 52
 3b4:	f0 e0       	ldi	r31, 0x00	; 0
 3b6:	80 81       	ld	r24, Z
 3b8:	48 2f       	mov	r20, r24
 3ba:	8b 81       	ldd	r24, Y+3	; 0x03
 3bc:	28 2f       	mov	r18, r24
 3be:	30 e0       	ldi	r19, 0x00	; 0
 3c0:	81 e0       	ldi	r24, 0x01	; 1
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	02 2e       	mov	r0, r18
 3c6:	02 c0       	rjmp	.+4      	; 0x3cc <DIO_enumSetPINDirection+0x17c>
 3c8:	88 0f       	add	r24, r24
 3ca:	99 1f       	adc	r25, r25
 3cc:	0a 94       	dec	r0
 3ce:	e2 f7       	brpl	.-8      	; 0x3c8 <DIO_enumSetPINDirection+0x178>
 3d0:	80 95       	com	r24
 3d2:	84 23       	and	r24, r20
 3d4:	8c 93       	st	X, r24
 3d6:	36 c0       	rjmp	.+108    	; 0x444 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                            else
		                            {
		                                /**/
		                          	  LOC_enumState=DIO_NOK;
 3d8:	19 82       	std	Y+1, r1	; 0x01
 3da:	34 c0       	rjmp	.+104    	; 0x444 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                    break;
		        case DIO_PORTD :
		                        if(Copy_u8Direction == DIO_OUTPUT)
 3dc:	8c 81       	ldd	r24, Y+4	; 0x04
 3de:	81 30       	cpi	r24, 0x01	; 1
 3e0:	a1 f4       	brne	.+40     	; 0x40a <DIO_enumSetPINDirection+0x1ba>
		                            {
	                                SET_BIT(DDRD_REG,Copy_u8PINNumber);
 3e2:	a1 e3       	ldi	r26, 0x31	; 49
 3e4:	b0 e0       	ldi	r27, 0x00	; 0
 3e6:	e1 e3       	ldi	r30, 0x31	; 49
 3e8:	f0 e0       	ldi	r31, 0x00	; 0
 3ea:	80 81       	ld	r24, Z
 3ec:	48 2f       	mov	r20, r24
 3ee:	8b 81       	ldd	r24, Y+3	; 0x03
 3f0:	28 2f       	mov	r18, r24
 3f2:	30 e0       	ldi	r19, 0x00	; 0
 3f4:	81 e0       	ldi	r24, 0x01	; 1
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	02 2e       	mov	r0, r18
 3fa:	02 c0       	rjmp	.+4      	; 0x400 <DIO_enumSetPINDirection+0x1b0>
 3fc:	88 0f       	add	r24, r24
 3fe:	99 1f       	adc	r25, r25
 400:	0a 94       	dec	r0
 402:	e2 f7       	brpl	.-8      	; 0x3fc <DIO_enumSetPINDirection+0x1ac>
 404:	84 2b       	or	r24, r20
 406:	8c 93       	st	X, r24
 408:	1d c0       	rjmp	.+58     	; 0x444 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                        else if (Copy_u8Direction==DIO_INPUT)
 40a:	8c 81       	ldd	r24, Y+4	; 0x04
 40c:	88 23       	and	r24, r24
 40e:	a9 f4       	brne	.+42     	; 0x43a <DIO_enumSetPINDirection+0x1ea>
		                            {
	                                CLR_BIT(DDRD_REG,Copy_u8PINNumber);
 410:	a1 e3       	ldi	r26, 0x31	; 49
 412:	b0 e0       	ldi	r27, 0x00	; 0
 414:	e1 e3       	ldi	r30, 0x31	; 49
 416:	f0 e0       	ldi	r31, 0x00	; 0
 418:	80 81       	ld	r24, Z
 41a:	48 2f       	mov	r20, r24
 41c:	8b 81       	ldd	r24, Y+3	; 0x03
 41e:	28 2f       	mov	r18, r24
 420:	30 e0       	ldi	r19, 0x00	; 0
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	90 e0       	ldi	r25, 0x00	; 0
 426:	02 2e       	mov	r0, r18
 428:	02 c0       	rjmp	.+4      	; 0x42e <DIO_enumSetPINDirection+0x1de>
 42a:	88 0f       	add	r24, r24
 42c:	99 1f       	adc	r25, r25
 42e:	0a 94       	dec	r0
 430:	e2 f7       	brpl	.-8      	; 0x42a <DIO_enumSetPINDirection+0x1da>
 432:	80 95       	com	r24
 434:	84 23       	and	r24, r20
 436:	8c 93       	st	X, r24
 438:	05 c0       	rjmp	.+10     	; 0x444 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                            else
		                            {
		                                /**/
		                          	  LOC_enumState=DIO_NOK;
 43a:	19 82       	std	Y+1, r1	; 0x01
 43c:	03 c0       	rjmp	.+6      	; 0x444 <DIO_enumSetPINDirection+0x1f4>
		                            }
		                    break;

		        default:
		      	  LOC_enumState=DIO_NOK;
 43e:	19 82       	std	Y+1, r1	; 0x01
 440:	01 c0       	rjmp	.+2      	; 0x444 <DIO_enumSetPINDirection+0x1f4>

	}
	}
	else
	{
		LOC_enumState=DIO_NOK;
 442:	19 82       	std	Y+1, r1	; 0x01
	}



	return LOC_enumState;
 444:	89 81       	ldd	r24, Y+1	; 0x01
 }
 446:	26 96       	adiw	r28, 0x06	; 6
 448:	0f b6       	in	r0, 0x3f	; 63
 44a:	f8 94       	cli
 44c:	de bf       	out	0x3e, r29	; 62
 44e:	0f be       	out	0x3f, r0	; 63
 450:	cd bf       	out	0x3d, r28	; 61
 452:	cf 91       	pop	r28
 454:	df 91       	pop	r29
 456:	08 95       	ret

00000458 <DIO_enumSetPINValue>:
 DIO_ErroStatus DIO_enumSetPINValue    (u8 Copy_u8Port,u8 Copy_u8PINNumber, u8 Copy_u8Value    )
 {
 458:	df 93       	push	r29
 45a:	cf 93       	push	r28
 45c:	00 d0       	rcall	.+0      	; 0x45e <DIO_enumSetPINValue+0x6>
 45e:	00 d0       	rcall	.+0      	; 0x460 <DIO_enumSetPINValue+0x8>
 460:	00 d0       	rcall	.+0      	; 0x462 <DIO_enumSetPINValue+0xa>
 462:	cd b7       	in	r28, 0x3d	; 61
 464:	de b7       	in	r29, 0x3e	; 62
 466:	8a 83       	std	Y+2, r24	; 0x02
 468:	6b 83       	std	Y+3, r22	; 0x03
 46a:	4c 83       	std	Y+4, r20	; 0x04
	 DIO_ErroStatus LOC_enumState = DIO_OK;
 46c:	81 e0       	ldi	r24, 0x01	; 1
 46e:	89 83       	std	Y+1, r24	; 0x01
	 	if((Copy_u8PINNumber>=DIO_PIN0)&& (Copy_u8PINNumber<=DIO_PIN7))
 470:	8b 81       	ldd	r24, Y+3	; 0x03
 472:	88 30       	cpi	r24, 0x08	; 8
 474:	08 f0       	brcs	.+2      	; 0x478 <DIO_enumSetPINValue+0x20>
 476:	d4 c0       	rjmp	.+424    	; 0x620 <DIO_enumSetPINValue+0x1c8>
	 	{
	 		 switch(Copy_u8Port)
 478:	8a 81       	ldd	r24, Y+2	; 0x02
 47a:	28 2f       	mov	r18, r24
 47c:	30 e0       	ldi	r19, 0x00	; 0
 47e:	3e 83       	std	Y+6, r19	; 0x06
 480:	2d 83       	std	Y+5, r18	; 0x05
 482:	8d 81       	ldd	r24, Y+5	; 0x05
 484:	9e 81       	ldd	r25, Y+6	; 0x06
 486:	82 30       	cpi	r24, 0x02	; 2
 488:	91 05       	cpc	r25, r1
 48a:	09 f4       	brne	.+2      	; 0x48e <DIO_enumSetPINValue+0x36>
 48c:	49 c0       	rjmp	.+146    	; 0x520 <DIO_enumSetPINValue+0xc8>
 48e:	2d 81       	ldd	r18, Y+5	; 0x05
 490:	3e 81       	ldd	r19, Y+6	; 0x06
 492:	23 30       	cpi	r18, 0x03	; 3
 494:	31 05       	cpc	r19, r1
 496:	34 f4       	brge	.+12     	; 0x4a4 <DIO_enumSetPINValue+0x4c>
 498:	8d 81       	ldd	r24, Y+5	; 0x05
 49a:	9e 81       	ldd	r25, Y+6	; 0x06
 49c:	81 30       	cpi	r24, 0x01	; 1
 49e:	91 05       	cpc	r25, r1
 4a0:	71 f0       	breq	.+28     	; 0x4be <DIO_enumSetPINValue+0x66>
 4a2:	bc c0       	rjmp	.+376    	; 0x61c <DIO_enumSetPINValue+0x1c4>
 4a4:	2d 81       	ldd	r18, Y+5	; 0x05
 4a6:	3e 81       	ldd	r19, Y+6	; 0x06
 4a8:	23 30       	cpi	r18, 0x03	; 3
 4aa:	31 05       	cpc	r19, r1
 4ac:	09 f4       	brne	.+2      	; 0x4b0 <DIO_enumSetPINValue+0x58>
 4ae:	69 c0       	rjmp	.+210    	; 0x582 <DIO_enumSetPINValue+0x12a>
 4b0:	8d 81       	ldd	r24, Y+5	; 0x05
 4b2:	9e 81       	ldd	r25, Y+6	; 0x06
 4b4:	84 30       	cpi	r24, 0x04	; 4
 4b6:	91 05       	cpc	r25, r1
 4b8:	09 f4       	brne	.+2      	; 0x4bc <DIO_enumSetPINValue+0x64>
 4ba:	94 c0       	rjmp	.+296    	; 0x5e4 <DIO_enumSetPINValue+0x18c>
 4bc:	af c0       	rjmp	.+350    	; 0x61c <DIO_enumSetPINValue+0x1c4>
	 		    {

	 		        case DIO_PORTA :
	 		                        if(Copy_u8Value == DIO_HIGH)
 4be:	8c 81       	ldd	r24, Y+4	; 0x04
 4c0:	81 30       	cpi	r24, 0x01	; 1
 4c2:	a1 f4       	brne	.+40     	; 0x4ec <DIO_enumSetPINValue+0x94>
	 		                           {
	 		                                SET_BIT(PORTA_REG,Copy_u8PINNumber);
 4c4:	ab e3       	ldi	r26, 0x3B	; 59
 4c6:	b0 e0       	ldi	r27, 0x00	; 0
 4c8:	eb e3       	ldi	r30, 0x3B	; 59
 4ca:	f0 e0       	ldi	r31, 0x00	; 0
 4cc:	80 81       	ld	r24, Z
 4ce:	48 2f       	mov	r20, r24
 4d0:	8b 81       	ldd	r24, Y+3	; 0x03
 4d2:	28 2f       	mov	r18, r24
 4d4:	30 e0       	ldi	r19, 0x00	; 0
 4d6:	81 e0       	ldi	r24, 0x01	; 1
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	02 2e       	mov	r0, r18
 4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <DIO_enumSetPINValue+0x8a>
 4de:	88 0f       	add	r24, r24
 4e0:	99 1f       	adc	r25, r25
 4e2:	0a 94       	dec	r0
 4e4:	e2 f7       	brpl	.-8      	; 0x4de <DIO_enumSetPINValue+0x86>
 4e6:	84 2b       	or	r24, r20
 4e8:	8c 93       	st	X, r24
 4ea:	9b c0       	rjmp	.+310    	; 0x622 <DIO_enumSetPINValue+0x1ca>
	 		                           }
	 		                        else if(Copy_u8Value == DIO_LOW)
 4ec:	8c 81       	ldd	r24, Y+4	; 0x04
 4ee:	88 23       	and	r24, r24
 4f0:	a9 f4       	brne	.+42     	; 0x51c <DIO_enumSetPINValue+0xc4>
	 		                          {
	 		                                CLR_BIT(PORTA_REG,Copy_u8PINNumber);
 4f2:	ab e3       	ldi	r26, 0x3B	; 59
 4f4:	b0 e0       	ldi	r27, 0x00	; 0
 4f6:	eb e3       	ldi	r30, 0x3B	; 59
 4f8:	f0 e0       	ldi	r31, 0x00	; 0
 4fa:	80 81       	ld	r24, Z
 4fc:	48 2f       	mov	r20, r24
 4fe:	8b 81       	ldd	r24, Y+3	; 0x03
 500:	28 2f       	mov	r18, r24
 502:	30 e0       	ldi	r19, 0x00	; 0
 504:	81 e0       	ldi	r24, 0x01	; 1
 506:	90 e0       	ldi	r25, 0x00	; 0
 508:	02 2e       	mov	r0, r18
 50a:	02 c0       	rjmp	.+4      	; 0x510 <DIO_enumSetPINValue+0xb8>
 50c:	88 0f       	add	r24, r24
 50e:	99 1f       	adc	r25, r25
 510:	0a 94       	dec	r0
 512:	e2 f7       	brpl	.-8      	; 0x50c <DIO_enumSetPINValue+0xb4>
 514:	80 95       	com	r24
 516:	84 23       	and	r24, r20
 518:	8c 93       	st	X, r24
 51a:	83 c0       	rjmp	.+262    	; 0x622 <DIO_enumSetPINValue+0x1ca>
	 		                          }
	 		                          else
	 		                          {
	 		                            /**/
	 		                        	  LOC_enumState=DIO_NOK;
 51c:	19 82       	std	Y+1, r1	; 0x01
 51e:	81 c0       	rjmp	.+258    	; 0x622 <DIO_enumSetPINValue+0x1ca>
	 		                          }
	 		                    break;
	 		        case DIO_PORTB :
	 		                        if(Copy_u8Value == DIO_HIGH)
 520:	8c 81       	ldd	r24, Y+4	; 0x04
 522:	81 30       	cpi	r24, 0x01	; 1
 524:	a1 f4       	brne	.+40     	; 0x54e <DIO_enumSetPINValue+0xf6>
	 		                            {
	 		                                SET_BIT(PORTB_REG,Copy_u8PINNumber);
 526:	a8 e3       	ldi	r26, 0x38	; 56
 528:	b0 e0       	ldi	r27, 0x00	; 0
 52a:	e8 e3       	ldi	r30, 0x38	; 56
 52c:	f0 e0       	ldi	r31, 0x00	; 0
 52e:	80 81       	ld	r24, Z
 530:	48 2f       	mov	r20, r24
 532:	8b 81       	ldd	r24, Y+3	; 0x03
 534:	28 2f       	mov	r18, r24
 536:	30 e0       	ldi	r19, 0x00	; 0
 538:	81 e0       	ldi	r24, 0x01	; 1
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	02 2e       	mov	r0, r18
 53e:	02 c0       	rjmp	.+4      	; 0x544 <DIO_enumSetPINValue+0xec>
 540:	88 0f       	add	r24, r24
 542:	99 1f       	adc	r25, r25
 544:	0a 94       	dec	r0
 546:	e2 f7       	brpl	.-8      	; 0x540 <DIO_enumSetPINValue+0xe8>
 548:	84 2b       	or	r24, r20
 54a:	8c 93       	st	X, r24
 54c:	6a c0       	rjmp	.+212    	; 0x622 <DIO_enumSetPINValue+0x1ca>
	 		                            }
	 		                        else if(Copy_u8Value == DIO_LOW)
 54e:	8c 81       	ldd	r24, Y+4	; 0x04
 550:	88 23       	and	r24, r24
 552:	a9 f4       	brne	.+42     	; 0x57e <DIO_enumSetPINValue+0x126>
	 		                            {
	 	                                    CLR_BIT(PORTB_REG,Copy_u8PINNumber);
 554:	a8 e3       	ldi	r26, 0x38	; 56
 556:	b0 e0       	ldi	r27, 0x00	; 0
 558:	e8 e3       	ldi	r30, 0x38	; 56
 55a:	f0 e0       	ldi	r31, 0x00	; 0
 55c:	80 81       	ld	r24, Z
 55e:	48 2f       	mov	r20, r24
 560:	8b 81       	ldd	r24, Y+3	; 0x03
 562:	28 2f       	mov	r18, r24
 564:	30 e0       	ldi	r19, 0x00	; 0
 566:	81 e0       	ldi	r24, 0x01	; 1
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	02 2e       	mov	r0, r18
 56c:	02 c0       	rjmp	.+4      	; 0x572 <DIO_enumSetPINValue+0x11a>
 56e:	88 0f       	add	r24, r24
 570:	99 1f       	adc	r25, r25
 572:	0a 94       	dec	r0
 574:	e2 f7       	brpl	.-8      	; 0x56e <DIO_enumSetPINValue+0x116>
 576:	80 95       	com	r24
 578:	84 23       	and	r24, r20
 57a:	8c 93       	st	X, r24
 57c:	52 c0       	rjmp	.+164    	; 0x622 <DIO_enumSetPINValue+0x1ca>
	 		                            }
	 		                            else
	 		                            {
	 		                                /**/
	 		                          	  LOC_enumState=DIO_NOK;
 57e:	19 82       	std	Y+1, r1	; 0x01
 580:	50 c0       	rjmp	.+160    	; 0x622 <DIO_enumSetPINValue+0x1ca>
	 		                            }
	 		                    break;
	 		        case DIO_PORTC :
	 		                        if(Copy_u8Value == DIO_HIGH)
 582:	8c 81       	ldd	r24, Y+4	; 0x04
 584:	81 30       	cpi	r24, 0x01	; 1
 586:	a1 f4       	brne	.+40     	; 0x5b0 <DIO_enumSetPINValue+0x158>
	 		                            {
	 	                                SET_BIT(PORTC_REG,Copy_u8PINNumber);
 588:	a5 e3       	ldi	r26, 0x35	; 53
 58a:	b0 e0       	ldi	r27, 0x00	; 0
 58c:	e5 e3       	ldi	r30, 0x35	; 53
 58e:	f0 e0       	ldi	r31, 0x00	; 0
 590:	80 81       	ld	r24, Z
 592:	48 2f       	mov	r20, r24
 594:	8b 81       	ldd	r24, Y+3	; 0x03
 596:	28 2f       	mov	r18, r24
 598:	30 e0       	ldi	r19, 0x00	; 0
 59a:	81 e0       	ldi	r24, 0x01	; 1
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	02 2e       	mov	r0, r18
 5a0:	02 c0       	rjmp	.+4      	; 0x5a6 <DIO_enumSetPINValue+0x14e>
 5a2:	88 0f       	add	r24, r24
 5a4:	99 1f       	adc	r25, r25
 5a6:	0a 94       	dec	r0
 5a8:	e2 f7       	brpl	.-8      	; 0x5a2 <DIO_enumSetPINValue+0x14a>
 5aa:	84 2b       	or	r24, r20
 5ac:	8c 93       	st	X, r24
 5ae:	39 c0       	rjmp	.+114    	; 0x622 <DIO_enumSetPINValue+0x1ca>
	 		                            }
	 		                        else if (Copy_u8Value==DIO_LOW)
 5b0:	8c 81       	ldd	r24, Y+4	; 0x04
 5b2:	88 23       	and	r24, r24
 5b4:	a9 f4       	brne	.+42     	; 0x5e0 <DIO_enumSetPINValue+0x188>
	 		                            {
	 	                                CLR_BIT(PORTC_REG,Copy_u8PINNumber);
 5b6:	a5 e3       	ldi	r26, 0x35	; 53
 5b8:	b0 e0       	ldi	r27, 0x00	; 0
 5ba:	e5 e3       	ldi	r30, 0x35	; 53
 5bc:	f0 e0       	ldi	r31, 0x00	; 0
 5be:	80 81       	ld	r24, Z
 5c0:	48 2f       	mov	r20, r24
 5c2:	8b 81       	ldd	r24, Y+3	; 0x03
 5c4:	28 2f       	mov	r18, r24
 5c6:	30 e0       	ldi	r19, 0x00	; 0
 5c8:	81 e0       	ldi	r24, 0x01	; 1
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	02 2e       	mov	r0, r18
 5ce:	02 c0       	rjmp	.+4      	; 0x5d4 <DIO_enumSetPINValue+0x17c>
 5d0:	88 0f       	add	r24, r24
 5d2:	99 1f       	adc	r25, r25
 5d4:	0a 94       	dec	r0
 5d6:	e2 f7       	brpl	.-8      	; 0x5d0 <DIO_enumSetPINValue+0x178>
 5d8:	80 95       	com	r24
 5da:	84 23       	and	r24, r20
 5dc:	8c 93       	st	X, r24
 5de:	21 c0       	rjmp	.+66     	; 0x622 <DIO_enumSetPINValue+0x1ca>
	 		                            }
	 		                            else
	 		                            {
	 		                                /**/
	 		                          	  LOC_enumState=DIO_NOK;
 5e0:	19 82       	std	Y+1, r1	; 0x01
 5e2:	1f c0       	rjmp	.+62     	; 0x622 <DIO_enumSetPINValue+0x1ca>
	 		                            }
	 		                    break;
	 		        case DIO_PORTD :
	 		                        if(Copy_u8Value == DIO_HIGH)
 5e4:	8c 81       	ldd	r24, Y+4	; 0x04
 5e6:	81 30       	cpi	r24, 0x01	; 1
 5e8:	a1 f4       	brne	.+40     	; 0x612 <DIO_enumSetPINValue+0x1ba>
	 		                            {
	 	                                SET_BIT(PORTD_REG,Copy_u8PINNumber);
 5ea:	a2 e3       	ldi	r26, 0x32	; 50
 5ec:	b0 e0       	ldi	r27, 0x00	; 0
 5ee:	e2 e3       	ldi	r30, 0x32	; 50
 5f0:	f0 e0       	ldi	r31, 0x00	; 0
 5f2:	80 81       	ld	r24, Z
 5f4:	48 2f       	mov	r20, r24
 5f6:	8b 81       	ldd	r24, Y+3	; 0x03
 5f8:	28 2f       	mov	r18, r24
 5fa:	30 e0       	ldi	r19, 0x00	; 0
 5fc:	81 e0       	ldi	r24, 0x01	; 1
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	02 2e       	mov	r0, r18
 602:	02 c0       	rjmp	.+4      	; 0x608 <DIO_enumSetPINValue+0x1b0>
 604:	88 0f       	add	r24, r24
 606:	99 1f       	adc	r25, r25
 608:	0a 94       	dec	r0
 60a:	e2 f7       	brpl	.-8      	; 0x604 <DIO_enumSetPINValue+0x1ac>
 60c:	84 2b       	or	r24, r20
 60e:	8c 93       	st	X, r24
 610:	08 c0       	rjmp	.+16     	; 0x622 <DIO_enumSetPINValue+0x1ca>
	 		                            }
	 		                        else if (Copy_u8Value==DIO_LOW)
 612:	8c 81       	ldd	r24, Y+4	; 0x04
 614:	88 23       	and	r24, r24
 616:	29 f0       	breq	.+10     	; 0x622 <DIO_enumSetPINValue+0x1ca>
	 		                            {
	 		                            }
	 		                            else
	 		                            {
	 		                                /**/
	 		                          	  LOC_enumState=DIO_NOK;
 618:	19 82       	std	Y+1, r1	; 0x01
 61a:	03 c0       	rjmp	.+6      	; 0x622 <DIO_enumSetPINValue+0x1ca>
	 		                            }
	 		                    break;

	 		        default:
	 		      	  LOC_enumState=DIO_NOK;
 61c:	19 82       	std	Y+1, r1	; 0x01
 61e:	01 c0       	rjmp	.+2      	; 0x622 <DIO_enumSetPINValue+0x1ca>

	 	}
	 	}
	 	else
	 	{
	 		LOC_enumState=DIO_NOK;
 620:	19 82       	std	Y+1, r1	; 0x01
	 	}



	 	return LOC_enumState;
 622:	89 81       	ldd	r24, Y+1	; 0x01
	  }
 624:	26 96       	adiw	r28, 0x06	; 6
 626:	0f b6       	in	r0, 0x3f	; 63
 628:	f8 94       	cli
 62a:	de bf       	out	0x3e, r29	; 62
 62c:	0f be       	out	0x3f, r0	; 63
 62e:	cd bf       	out	0x3d, r28	; 61
 630:	cf 91       	pop	r28
 632:	df 91       	pop	r29
 634:	08 95       	ret

00000636 <DIO_enumGetPortValue>:

 DIO_ErroStatus DIO_enumGetPortValue    (u8 Copy_u8Port, u8 *Copy_ptrData   )
 {
 636:	df 93       	push	r29
 638:	cf 93       	push	r28
 63a:	00 d0       	rcall	.+0      	; 0x63c <DIO_enumGetPortValue+0x6>
 63c:	00 d0       	rcall	.+0      	; 0x63e <DIO_enumGetPortValue+0x8>
 63e:	00 d0       	rcall	.+0      	; 0x640 <DIO_enumGetPortValue+0xa>
 640:	cd b7       	in	r28, 0x3d	; 61
 642:	de b7       	in	r29, 0x3e	; 62
 644:	8a 83       	std	Y+2, r24	; 0x02
 646:	7c 83       	std	Y+4, r23	; 0x04
 648:	6b 83       	std	Y+3, r22	; 0x03
	 DIO_ErroStatus LOC_enumState=DIO_OK;
 64a:	81 e0       	ldi	r24, 0x01	; 1
 64c:	89 83       	std	Y+1, r24	; 0x01
	 switch (Copy_u8Port) {
 64e:	8a 81       	ldd	r24, Y+2	; 0x02
 650:	28 2f       	mov	r18, r24
 652:	30 e0       	ldi	r19, 0x00	; 0
 654:	3e 83       	std	Y+6, r19	; 0x06
 656:	2d 83       	std	Y+5, r18	; 0x05
 658:	8d 81       	ldd	r24, Y+5	; 0x05
 65a:	9e 81       	ldd	r25, Y+6	; 0x06
 65c:	82 30       	cpi	r24, 0x02	; 2
 65e:	91 05       	cpc	r25, r1
 660:	e9 f0       	breq	.+58     	; 0x69c <DIO_enumGetPortValue+0x66>
 662:	2d 81       	ldd	r18, Y+5	; 0x05
 664:	3e 81       	ldd	r19, Y+6	; 0x06
 666:	23 30       	cpi	r18, 0x03	; 3
 668:	31 05       	cpc	r19, r1
 66a:	34 f4       	brge	.+12     	; 0x678 <DIO_enumGetPortValue+0x42>
 66c:	8d 81       	ldd	r24, Y+5	; 0x05
 66e:	9e 81       	ldd	r25, Y+6	; 0x06
 670:	81 30       	cpi	r24, 0x01	; 1
 672:	91 05       	cpc	r25, r1
 674:	61 f0       	breq	.+24     	; 0x68e <DIO_enumGetPortValue+0x58>
 676:	27 c0       	rjmp	.+78     	; 0x6c6 <DIO_enumGetPortValue+0x90>
 678:	2d 81       	ldd	r18, Y+5	; 0x05
 67a:	3e 81       	ldd	r19, Y+6	; 0x06
 67c:	23 30       	cpi	r18, 0x03	; 3
 67e:	31 05       	cpc	r19, r1
 680:	a1 f0       	breq	.+40     	; 0x6aa <DIO_enumGetPortValue+0x74>
 682:	8d 81       	ldd	r24, Y+5	; 0x05
 684:	9e 81       	ldd	r25, Y+6	; 0x06
 686:	84 30       	cpi	r24, 0x04	; 4
 688:	91 05       	cpc	r25, r1
 68a:	b1 f0       	breq	.+44     	; 0x6b8 <DIO_enumGetPortValue+0x82>
 68c:	1c c0       	rjmp	.+56     	; 0x6c6 <DIO_enumGetPortValue+0x90>
		case DIO_PORTA: *Copy_ptrData = PINA_REG;
 68e:	e9 e3       	ldi	r30, 0x39	; 57
 690:	f0 e0       	ldi	r31, 0x00	; 0
 692:	80 81       	ld	r24, Z
 694:	eb 81       	ldd	r30, Y+3	; 0x03
 696:	fc 81       	ldd	r31, Y+4	; 0x04
 698:	80 83       	st	Z, r24
 69a:	16 c0       	rjmp	.+44     	; 0x6c8 <DIO_enumGetPortValue+0x92>
			break;
		case DIO_PORTB: *Copy_ptrData = PINB_REG;
 69c:	e6 e3       	ldi	r30, 0x36	; 54
 69e:	f0 e0       	ldi	r31, 0x00	; 0
 6a0:	80 81       	ld	r24, Z
 6a2:	eb 81       	ldd	r30, Y+3	; 0x03
 6a4:	fc 81       	ldd	r31, Y+4	; 0x04
 6a6:	80 83       	st	Z, r24
 6a8:	0f c0       	rjmp	.+30     	; 0x6c8 <DIO_enumGetPortValue+0x92>
					break;
		case DIO_PORTC: *Copy_ptrData = PINC_REG;
 6aa:	e3 e3       	ldi	r30, 0x33	; 51
 6ac:	f0 e0       	ldi	r31, 0x00	; 0
 6ae:	80 81       	ld	r24, Z
 6b0:	eb 81       	ldd	r30, Y+3	; 0x03
 6b2:	fc 81       	ldd	r31, Y+4	; 0x04
 6b4:	80 83       	st	Z, r24
 6b6:	08 c0       	rjmp	.+16     	; 0x6c8 <DIO_enumGetPortValue+0x92>
					break;
		case DIO_PORTD: *Copy_ptrData = PIND_REG;
 6b8:	e0 e3       	ldi	r30, 0x30	; 48
 6ba:	f0 e0       	ldi	r31, 0x00	; 0
 6bc:	80 81       	ld	r24, Z
 6be:	eb 81       	ldd	r30, Y+3	; 0x03
 6c0:	fc 81       	ldd	r31, Y+4	; 0x04
 6c2:	80 83       	st	Z, r24
 6c4:	01 c0       	rjmp	.+2      	; 0x6c8 <DIO_enumGetPortValue+0x92>
					break;
		default:
			LOC_enumState =DIO_NOK;
 6c6:	19 82       	std	Y+1, r1	; 0x01
			break;
	}
	 return LOC_enumState;
 6c8:	89 81       	ldd	r24, Y+1	; 0x01


 }
 6ca:	26 96       	adiw	r28, 0x06	; 6
 6cc:	0f b6       	in	r0, 0x3f	; 63
 6ce:	f8 94       	cli
 6d0:	de bf       	out	0x3e, r29	; 62
 6d2:	0f be       	out	0x3f, r0	; 63
 6d4:	cd bf       	out	0x3d, r28	; 61
 6d6:	cf 91       	pop	r28
 6d8:	df 91       	pop	r29
 6da:	08 95       	ret

000006dc <DIO_enumGetPINValue>:

 DIO_ErroStatus DIO_enumGetPINValue     (u8 Copy_u8Port,u8 Copy_u8PINNumber, u8 *Copy_ptrData   )
 {
 6dc:	df 93       	push	r29
 6de:	cf 93       	push	r28
 6e0:	cd b7       	in	r28, 0x3d	; 61
 6e2:	de b7       	in	r29, 0x3e	; 62
 6e4:	27 97       	sbiw	r28, 0x07	; 7
 6e6:	0f b6       	in	r0, 0x3f	; 63
 6e8:	f8 94       	cli
 6ea:	de bf       	out	0x3e, r29	; 62
 6ec:	0f be       	out	0x3f, r0	; 63
 6ee:	cd bf       	out	0x3d, r28	; 61
 6f0:	8a 83       	std	Y+2, r24	; 0x02
 6f2:	6b 83       	std	Y+3, r22	; 0x03
 6f4:	5d 83       	std	Y+5, r21	; 0x05
 6f6:	4c 83       	std	Y+4, r20	; 0x04
	 DIO_ErroStatus LOC_enumState = DIO_OK;
 6f8:	81 e0       	ldi	r24, 0x01	; 1
 6fa:	89 83       	std	Y+1, r24	; 0x01
		if((Copy_u8PINNumber>=DIO_PIN0)&& (Copy_u8PINNumber<=DIO_PIN7))
 6fc:	8b 81       	ldd	r24, Y+3	; 0x03
 6fe:	88 30       	cpi	r24, 0x08	; 8
 700:	08 f0       	brcs	.+2      	; 0x704 <DIO_enumGetPINValue+0x28>
 702:	73 c0       	rjmp	.+230    	; 0x7ea <DIO_enumGetPINValue+0x10e>
		 	{
		 		 switch(Copy_u8Port)
 704:	8a 81       	ldd	r24, Y+2	; 0x02
 706:	28 2f       	mov	r18, r24
 708:	30 e0       	ldi	r19, 0x00	; 0
 70a:	3f 83       	std	Y+7, r19	; 0x07
 70c:	2e 83       	std	Y+6, r18	; 0x06
 70e:	4e 81       	ldd	r20, Y+6	; 0x06
 710:	5f 81       	ldd	r21, Y+7	; 0x07
 712:	42 30       	cpi	r20, 0x02	; 2
 714:	51 05       	cpc	r21, r1
 716:	59 f1       	breq	.+86     	; 0x76e <DIO_enumGetPINValue+0x92>
 718:	8e 81       	ldd	r24, Y+6	; 0x06
 71a:	9f 81       	ldd	r25, Y+7	; 0x07
 71c:	83 30       	cpi	r24, 0x03	; 3
 71e:	91 05       	cpc	r25, r1
 720:	34 f4       	brge	.+12     	; 0x72e <DIO_enumGetPINValue+0x52>
 722:	2e 81       	ldd	r18, Y+6	; 0x06
 724:	3f 81       	ldd	r19, Y+7	; 0x07
 726:	21 30       	cpi	r18, 0x01	; 1
 728:	31 05       	cpc	r19, r1
 72a:	69 f0       	breq	.+26     	; 0x746 <DIO_enumGetPINValue+0x6a>
 72c:	5c c0       	rjmp	.+184    	; 0x7e6 <DIO_enumGetPINValue+0x10a>
 72e:	4e 81       	ldd	r20, Y+6	; 0x06
 730:	5f 81       	ldd	r21, Y+7	; 0x07
 732:	43 30       	cpi	r20, 0x03	; 3
 734:	51 05       	cpc	r21, r1
 736:	79 f1       	breq	.+94     	; 0x796 <DIO_enumGetPINValue+0xba>
 738:	8e 81       	ldd	r24, Y+6	; 0x06
 73a:	9f 81       	ldd	r25, Y+7	; 0x07
 73c:	84 30       	cpi	r24, 0x04	; 4
 73e:	91 05       	cpc	r25, r1
 740:	09 f4       	brne	.+2      	; 0x744 <DIO_enumGetPINValue+0x68>
 742:	3d c0       	rjmp	.+122    	; 0x7be <DIO_enumGetPINValue+0xe2>
 744:	50 c0       	rjmp	.+160    	; 0x7e6 <DIO_enumGetPINValue+0x10a>
		 		    {
		 		case DIO_PORTA: *Copy_ptrData = GET_BIT(PINA_REG,Copy_u8PINNumber);
 746:	e9 e3       	ldi	r30, 0x39	; 57
 748:	f0 e0       	ldi	r31, 0x00	; 0
 74a:	80 81       	ld	r24, Z
 74c:	28 2f       	mov	r18, r24
 74e:	30 e0       	ldi	r19, 0x00	; 0
 750:	8b 81       	ldd	r24, Y+3	; 0x03
 752:	88 2f       	mov	r24, r24
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	a9 01       	movw	r20, r18
 758:	02 c0       	rjmp	.+4      	; 0x75e <DIO_enumGetPINValue+0x82>
 75a:	55 95       	asr	r21
 75c:	47 95       	ror	r20
 75e:	8a 95       	dec	r24
 760:	e2 f7       	brpl	.-8      	; 0x75a <DIO_enumGetPINValue+0x7e>
 762:	ca 01       	movw	r24, r20
 764:	81 70       	andi	r24, 0x01	; 1
 766:	ec 81       	ldd	r30, Y+4	; 0x04
 768:	fd 81       	ldd	r31, Y+5	; 0x05
 76a:	80 83       	st	Z, r24
 76c:	3f c0       	rjmp	.+126    	; 0x7ec <DIO_enumGetPINValue+0x110>
		 			break;
		 		case DIO_PORTB: *Copy_ptrData = GET_BIT(PINB_REG,Copy_u8PINNumber);
 76e:	e6 e3       	ldi	r30, 0x36	; 54
 770:	f0 e0       	ldi	r31, 0x00	; 0
 772:	80 81       	ld	r24, Z
 774:	28 2f       	mov	r18, r24
 776:	30 e0       	ldi	r19, 0x00	; 0
 778:	8b 81       	ldd	r24, Y+3	; 0x03
 77a:	88 2f       	mov	r24, r24
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	a9 01       	movw	r20, r18
 780:	02 c0       	rjmp	.+4      	; 0x786 <DIO_enumGetPINValue+0xaa>
 782:	55 95       	asr	r21
 784:	47 95       	ror	r20
 786:	8a 95       	dec	r24
 788:	e2 f7       	brpl	.-8      	; 0x782 <DIO_enumGetPINValue+0xa6>
 78a:	ca 01       	movw	r24, r20
 78c:	81 70       	andi	r24, 0x01	; 1
 78e:	ec 81       	ldd	r30, Y+4	; 0x04
 790:	fd 81       	ldd	r31, Y+5	; 0x05
 792:	80 83       	st	Z, r24
 794:	2b c0       	rjmp	.+86     	; 0x7ec <DIO_enumGetPINValue+0x110>
		 					break;
		 		case DIO_PORTC: *Copy_ptrData = GET_BIT(PINC_REG,Copy_u8PINNumber);
 796:	e3 e3       	ldi	r30, 0x33	; 51
 798:	f0 e0       	ldi	r31, 0x00	; 0
 79a:	80 81       	ld	r24, Z
 79c:	28 2f       	mov	r18, r24
 79e:	30 e0       	ldi	r19, 0x00	; 0
 7a0:	8b 81       	ldd	r24, Y+3	; 0x03
 7a2:	88 2f       	mov	r24, r24
 7a4:	90 e0       	ldi	r25, 0x00	; 0
 7a6:	a9 01       	movw	r20, r18
 7a8:	02 c0       	rjmp	.+4      	; 0x7ae <DIO_enumGetPINValue+0xd2>
 7aa:	55 95       	asr	r21
 7ac:	47 95       	ror	r20
 7ae:	8a 95       	dec	r24
 7b0:	e2 f7       	brpl	.-8      	; 0x7aa <DIO_enumGetPINValue+0xce>
 7b2:	ca 01       	movw	r24, r20
 7b4:	81 70       	andi	r24, 0x01	; 1
 7b6:	ec 81       	ldd	r30, Y+4	; 0x04
 7b8:	fd 81       	ldd	r31, Y+5	; 0x05
 7ba:	80 83       	st	Z, r24
 7bc:	17 c0       	rjmp	.+46     	; 0x7ec <DIO_enumGetPINValue+0x110>
		 					break;
		 		case DIO_PORTD: *Copy_ptrData = GET_BIT(PIND_REG,Copy_u8PINNumber);
 7be:	e0 e3       	ldi	r30, 0x30	; 48
 7c0:	f0 e0       	ldi	r31, 0x00	; 0
 7c2:	80 81       	ld	r24, Z
 7c4:	28 2f       	mov	r18, r24
 7c6:	30 e0       	ldi	r19, 0x00	; 0
 7c8:	8b 81       	ldd	r24, Y+3	; 0x03
 7ca:	88 2f       	mov	r24, r24
 7cc:	90 e0       	ldi	r25, 0x00	; 0
 7ce:	a9 01       	movw	r20, r18
 7d0:	02 c0       	rjmp	.+4      	; 0x7d6 <DIO_enumGetPINValue+0xfa>
 7d2:	55 95       	asr	r21
 7d4:	47 95       	ror	r20
 7d6:	8a 95       	dec	r24
 7d8:	e2 f7       	brpl	.-8      	; 0x7d2 <DIO_enumGetPINValue+0xf6>
 7da:	ca 01       	movw	r24, r20
 7dc:	81 70       	andi	r24, 0x01	; 1
 7de:	ec 81       	ldd	r30, Y+4	; 0x04
 7e0:	fd 81       	ldd	r31, Y+5	; 0x05
 7e2:	80 83       	st	Z, r24
 7e4:	03 c0       	rjmp	.+6      	; 0x7ec <DIO_enumGetPINValue+0x110>
		 					break;
		 		default:
		 			LOC_enumState =DIO_NOK;
 7e6:	19 82       	std	Y+1, r1	; 0x01
 7e8:	01 c0       	rjmp	.+2      	; 0x7ec <DIO_enumGetPINValue+0x110>
		 			break;

		 		    }
		 	}
	 else {
		 LOC_enumState = DIO_NOK;
 7ea:	19 82       	std	Y+1, r1	; 0x01
	}

	 return LOC_enumState;
 7ec:	89 81       	ldd	r24, Y+1	; 0x01
 }
 7ee:	27 96       	adiw	r28, 0x07	; 7
 7f0:	0f b6       	in	r0, 0x3f	; 63
 7f2:	f8 94       	cli
 7f4:	de bf       	out	0x3e, r29	; 62
 7f6:	0f be       	out	0x3f, r0	; 63
 7f8:	cd bf       	out	0x3d, r28	; 61
 7fa:	cf 91       	pop	r28
 7fc:	df 91       	pop	r29
 7fe:	08 95       	ret

00000800 <DIO_Delay>:
#include "LIB/STD_TYPES.h"
#include "LIB/BIT_MATH.h"
#include "DIO_private.h"
#include "DIO_interface.h"
void DIO_Delay(u32 ticks)
{
 800:	df 93       	push	r29
 802:	cf 93       	push	r28
 804:	cd b7       	in	r28, 0x3d	; 61
 806:	de b7       	in	r29, 0x3e	; 62
 808:	28 97       	sbiw	r28, 0x08	; 8
 80a:	0f b6       	in	r0, 0x3f	; 63
 80c:	f8 94       	cli
 80e:	de bf       	out	0x3e, r29	; 62
 810:	0f be       	out	0x3f, r0	; 63
 812:	cd bf       	out	0x3d, r28	; 61
 814:	6d 83       	std	Y+5, r22	; 0x05
 816:	7e 83       	std	Y+6, r23	; 0x06
 818:	8f 83       	std	Y+7, r24	; 0x07
 81a:	98 87       	std	Y+8, r25	; 0x08
u32 x;
for(x=0;x<ticks;x++);
 81c:	19 82       	std	Y+1, r1	; 0x01
 81e:	1a 82       	std	Y+2, r1	; 0x02
 820:	1b 82       	std	Y+3, r1	; 0x03
 822:	1c 82       	std	Y+4, r1	; 0x04
 824:	0b c0       	rjmp	.+22     	; 0x83c <DIO_Delay+0x3c>
 826:	89 81       	ldd	r24, Y+1	; 0x01
 828:	9a 81       	ldd	r25, Y+2	; 0x02
 82a:	ab 81       	ldd	r26, Y+3	; 0x03
 82c:	bc 81       	ldd	r27, Y+4	; 0x04
 82e:	01 96       	adiw	r24, 0x01	; 1
 830:	a1 1d       	adc	r26, r1
 832:	b1 1d       	adc	r27, r1
 834:	89 83       	std	Y+1, r24	; 0x01
 836:	9a 83       	std	Y+2, r25	; 0x02
 838:	ab 83       	std	Y+3, r26	; 0x03
 83a:	bc 83       	std	Y+4, r27	; 0x04
 83c:	29 81       	ldd	r18, Y+1	; 0x01
 83e:	3a 81       	ldd	r19, Y+2	; 0x02
 840:	4b 81       	ldd	r20, Y+3	; 0x03
 842:	5c 81       	ldd	r21, Y+4	; 0x04
 844:	8d 81       	ldd	r24, Y+5	; 0x05
 846:	9e 81       	ldd	r25, Y+6	; 0x06
 848:	af 81       	ldd	r26, Y+7	; 0x07
 84a:	b8 85       	ldd	r27, Y+8	; 0x08
 84c:	28 17       	cp	r18, r24
 84e:	39 07       	cpc	r19, r25
 850:	4a 07       	cpc	r20, r26
 852:	5b 07       	cpc	r21, r27
 854:	40 f3       	brcs	.-48     	; 0x826 <DIO_Delay+0x26>

}
 856:	28 96       	adiw	r28, 0x08	; 8
 858:	0f b6       	in	r0, 0x3f	; 63
 85a:	f8 94       	cli
 85c:	de bf       	out	0x3e, r29	; 62
 85e:	0f be       	out	0x3f, r0	; 63
 860:	cd bf       	out	0x3d, r28	; 61
 862:	cf 91       	pop	r28
 864:	df 91       	pop	r29
 866:	08 95       	ret

00000868 <main>:
int main(void)
{
 868:	df 93       	push	r29
 86a:	cf 93       	push	r28
 86c:	0f 92       	push	r0
 86e:	cd b7       	in	r28, 0x3d	; 61
 870:	de b7       	in	r29, 0x3e	; 62
	DIO_enumSetPortDirection(DIO_PORTA,DIO_OUTPUT);
 872:	81 e0       	ldi	r24, 0x01	; 1
 874:	61 e0       	ldi	r22, 0x01	; 1
 876:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_enumSetPortDirection>
	DIO_enumSetPortDirection(DIO_PORTD,DIO_INPUT);
 87a:	84 e0       	ldi	r24, 0x04	; 4
 87c:	60 e0       	ldi	r22, 0x00	; 0
 87e:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_enumSetPortDirection>
	DIO_enumSetPortValue(DIO_PORTD,DIO_HIGH);
 882:	84 e0       	ldi	r24, 0x04	; 4
 884:	61 e0       	ldi	r22, 0x01	; 1
 886:	0e 94 af 00 	call	0x15e	; 0x15e <DIO_enumSetPortValue>
	u8 input=0;
 88a:	19 82       	std	Y+1, r1	; 0x01
	while(1)
	{
		DIO_enumGetPINValue(DIO_PORTD,DIO_PIN0,&input);
 88c:	84 e0       	ldi	r24, 0x04	; 4
 88e:	60 e0       	ldi	r22, 0x00	; 0
 890:	9e 01       	movw	r18, r28
 892:	2f 5f       	subi	r18, 0xFF	; 255
 894:	3f 4f       	sbci	r19, 0xFF	; 255
 896:	a9 01       	movw	r20, r18
 898:	0e 94 6e 03 	call	0x6dc	; 0x6dc <DIO_enumGetPINValue>
		if(!input)
 89c:	89 81       	ldd	r24, Y+1	; 0x01
 89e:	88 23       	and	r24, r24
 8a0:	29 f4       	brne	.+10     	; 0x8ac <main+0x44>
		{
			DIO_enumSetPINValue(DIO_PORTA,DIO_PIN4,DIO_HIGH);
 8a2:	81 e0       	ldi	r24, 0x01	; 1
 8a4:	64 e0       	ldi	r22, 0x04	; 4
 8a6:	41 e0       	ldi	r20, 0x01	; 1
 8a8:	0e 94 2c 02 	call	0x458	; 0x458 <DIO_enumSetPINValue>

		}
		DIO_enumSetPINValue(DIO_PORTA,DIO_PIN4,DIO_LOW);
 8ac:	81 e0       	ldi	r24, 0x01	; 1
 8ae:	64 e0       	ldi	r22, 0x04	; 4
 8b0:	40 e0       	ldi	r20, 0x00	; 0
 8b2:	0e 94 2c 02 	call	0x458	; 0x458 <DIO_enumSetPINValue>
 8b6:	ea cf       	rjmp	.-44     	; 0x88c <main+0x24>

000008b8 <_exit>:
 8b8:	f8 94       	cli

000008ba <__stop_program>:
 8ba:	ff cf       	rjmp	.-2      	; 0x8ba <__stop_program>
